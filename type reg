PortableRegistry {
    types: [
        PortableType {
            id: 0,
            ty: Type {
                path: Path {
                    segments: [
                        "sp_core",
                        "crypto",
                        "AccountId32",
                    ],
                },
                type_params: [],
                type_def: Composite(
                    TypeDefComposite {
                        fields: [
                            Field {
                                name: None,
                                ty: UntrackedSymbol {
                                    id: 1,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "[u8; 32]",
                                ),
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 1,
            ty: Type {
                path: Path {
                    segments: [],
                },
                type_params: [],
                type_def: Array(
                    TypeDefArray {
                        len: 32,
                        type_param: UntrackedSymbol {
                            id: 2,
                            marker: PhantomData<fn() -> core::any::TypeId>,
                        },
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 2,
            ty: Type {
                path: Path {
                    segments: [],
                },
                type_params: [],
                type_def: Primitive(
                    U8,
                ),
                docs: [],
            },
        },
        PortableType {
            id: 3,
            ty: Type {
                path: Path {
                    segments: [
                        "frame_system",
                        "AccountInfo",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "Index",
                        ty: Some(
                            UntrackedSymbol {
                                id: 4,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ),
                    },
                    TypeParameter {
                        name: "AccountData",
                        ty: Some(
                            UntrackedSymbol {
                                id: 5,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ),
                    },
                ],
                type_def: Composite(
                    TypeDefComposite {
                        fields: [
                            Field {
                                name: Some(
                                    "nonce",
                                ),
                                ty: UntrackedSymbol {
                                    id: 4,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "Index",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "consumers",
                                ),
                                ty: UntrackedSymbol {
                                    id: 4,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "RefCount",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "providers",
                                ),
                                ty: UntrackedSymbol {
                                    id: 4,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "RefCount",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "sufficients",
                                ),
                                ty: UntrackedSymbol {
                                    id: 4,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "RefCount",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "data",
                                ),
                                ty: UntrackedSymbol {
                                    id: 5,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "AccountData",
                                ),
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 4,
            ty: Type {
                path: Path {
                    segments: [],
                },
                type_params: [],
                type_def: Primitive(
                    U32,
                ),
                docs: [],
            },
        },
        PortableType {
            id: 5,
            ty: Type {
                path: Path {
                    segments: [
                        "pallet_balances",
                        "types",
                        "AccountData",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "Balance",
                        ty: Some(
                            UntrackedSymbol {
                                id: 6,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ),
                    },
                ],
                type_def: Composite(
                    TypeDefComposite {
                        fields: [
                            Field {
                                name: Some(
                                    "free",
                                ),
                                ty: UntrackedSymbol {
                                    id: 6,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "Balance",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "reserved",
                                ),
                                ty: UntrackedSymbol {
                                    id: 6,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "Balance",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "frozen",
                                ),
                                ty: UntrackedSymbol {
                                    id: 6,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "Balance",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "flags",
                                ),
                                ty: UntrackedSymbol {
                                    id: 7,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "ExtraFlags",
                                ),
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 6,
            ty: Type {
                path: Path {
                    segments: [],
                },
                type_params: [],
                type_def: Primitive(
                    U128,
                ),
                docs: [],
            },
        },
        PortableType {
            id: 7,
            ty: Type {
                path: Path {
                    segments: [
                        "pallet_balances",
                        "types",
                        "ExtraFlags",
                    ],
                },
                type_params: [],
                type_def: Composite(
                    TypeDefComposite {
                        fields: [
                            Field {
                                name: None,
                                ty: UntrackedSymbol {
                                    id: 6,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "u128",
                                ),
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 8,
            ty: Type {
                path: Path {
                    segments: [
                        "frame_support",
                        "dispatch",
                        "PerDispatchClass",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "T",
                        ty: Some(
                            UntrackedSymbol {
                                id: 9,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ),
                    },
                ],
                type_def: Composite(
                    TypeDefComposite {
                        fields: [
                            Field {
                                name: Some(
                                    "normal",
                                ),
                                ty: UntrackedSymbol {
                                    id: 9,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "T",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "operational",
                                ),
                                ty: UntrackedSymbol {
                                    id: 9,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "T",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "mandatory",
                                ),
                                ty: UntrackedSymbol {
                                    id: 9,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "T",
                                ),
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 9,
            ty: Type {
                path: Path {
                    segments: [
                        "sp_weights",
                        "weight_v2",
                        "Weight",
                    ],
                },
                type_params: [],
                type_def: Composite(
                    TypeDefComposite {
                        fields: [
                            Field {
                                name: Some(
                                    "ref_time",
                                ),
                                ty: UntrackedSymbol {
                                    id: 10,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "u64",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "proof_size",
                                ),
                                ty: UntrackedSymbol {
                                    id: 10,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "u64",
                                ),
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 10,
            ty: Type {
                path: Path {
                    segments: [],
                },
                type_params: [],
                type_def: Compact(
                    TypeDefCompact {
                        type_param: UntrackedSymbol {
                            id: 11,
                            marker: PhantomData<fn() -> core::any::TypeId>,
                        },
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 11,
            ty: Type {
                path: Path {
                    segments: [],
                },
                type_params: [],
                type_def: Primitive(
                    U64,
                ),
                docs: [],
            },
        },
        PortableType {
            id: 12,
            ty: Type {
                path: Path {
                    segments: [
                        "primitive_types",
                        "H256",
                    ],
                },
                type_params: [],
                type_def: Composite(
                    TypeDefComposite {
                        fields: [
                            Field {
                                name: None,
                                ty: UntrackedSymbol {
                                    id: 1,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "[u8; 32]",
                                ),
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 13,
            ty: Type {
                path: Path {
                    segments: [],
                },
                type_params: [],
                type_def: Sequence(
                    TypeDefSequence {
                        type_param: UntrackedSymbol {
                            id: 2,
                            marker: PhantomData<fn() -> core::any::TypeId>,
                        },
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 14,
            ty: Type {
                path: Path {
                    segments: [
                        "sp_runtime",
                        "generic",
                        "digest",
                        "Digest",
                    ],
                },
                type_params: [],
                type_def: Composite(
                    TypeDefComposite {
                        fields: [
                            Field {
                                name: Some(
                                    "logs",
                                ),
                                ty: UntrackedSymbol {
                                    id: 15,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "Vec<DigestItem>",
                                ),
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 15,
            ty: Type {
                path: Path {
                    segments: [],
                },
                type_params: [],
                type_def: Sequence(
                    TypeDefSequence {
                        type_param: UntrackedSymbol {
                            id: 16,
                            marker: PhantomData<fn() -> core::any::TypeId>,
                        },
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 16,
            ty: Type {
                path: Path {
                    segments: [
                        "sp_runtime",
                        "generic",
                        "digest",
                        "DigestItem",
                    ],
                },
                type_params: [],
                type_def: Variant(
                    TypeDefVariant {
                        variants: [
                            Variant {
                                name: "PreRuntime",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 17,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "ConsensusEngineId",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 13,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "Vec<u8>",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 6,
                                docs: [],
                            },
                            Variant {
                                name: "Consensus",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 17,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "ConsensusEngineId",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 13,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "Vec<u8>",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 4,
                                docs: [],
                            },
                            Variant {
                                name: "Seal",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 17,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "ConsensusEngineId",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 13,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "Vec<u8>",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 5,
                                docs: [],
                            },
                            Variant {
                                name: "Other",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 13,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "Vec<u8>",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 0,
                                docs: [],
                            },
                            Variant {
                                name: "RuntimeEnvironmentUpdated",
                                fields: [],
                                index: 8,
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 17,
            ty: Type {
                path: Path {
                    segments: [],
                },
                type_params: [],
                type_def: Array(
                    TypeDefArray {
                        len: 4,
                        type_param: UntrackedSymbol {
                            id: 2,
                            marker: PhantomData<fn() -> core::any::TypeId>,
                        },
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 18,
            ty: Type {
                path: Path {
                    segments: [],
                },
                type_params: [],
                type_def: Sequence(
                    TypeDefSequence {
                        type_param: UntrackedSymbol {
                            id: 19,
                            marker: PhantomData<fn() -> core::any::TypeId>,
                        },
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 19,
            ty: Type {
                path: Path {
                    segments: [
                        "frame_system",
                        "EventRecord",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "E",
                        ty: Some(
                            UntrackedSymbol {
                                id: 20,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ),
                    },
                    TypeParameter {
                        name: "T",
                        ty: Some(
                            UntrackedSymbol {
                                id: 12,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ),
                    },
                ],
                type_def: Composite(
                    TypeDefComposite {
                        fields: [
                            Field {
                                name: Some(
                                    "phase",
                                ),
                                ty: UntrackedSymbol {
                                    id: 475,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "Phase",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "event",
                                ),
                                ty: UntrackedSymbol {
                                    id: 20,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "E",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "topics",
                                ),
                                ty: UntrackedSymbol {
                                    id: 476,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "Vec<T>",
                                ),
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 20,
            ty: Type {
                path: Path {
                    segments: [
                        "polkadot_runtime",
                        "RuntimeEvent",
                    ],
                },
                type_params: [],
                type_def: Variant(
                    TypeDefVariant {
                        variants: [
                            Variant {
                                name: "System",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 21,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "frame_system::Event<Runtime>",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 0,
                                docs: [],
                            },
                            Variant {
                                name: "Scheduler",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 30,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "pallet_scheduler::Event<Runtime>",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 1,
                                docs: [],
                            },
                            Variant {
                                name: "Preimage",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 35,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "pallet_preimage::Event<Runtime>",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 10,
                                docs: [],
                            },
                            Variant {
                                name: "Indices",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 36,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "pallet_indices::Event<Runtime>",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 4,
                                docs: [],
                            },
                            Variant {
                                name: "Balances",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 37,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "pallet_balances::Event<Runtime>",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 5,
                                docs: [],
                            },
                            Variant {
                                name: "TransactionPayment",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 39,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "pallet_transaction_payment::Event<Runtime>",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 32,
                                docs: [],
                            },
                            Variant {
                                name: "Staking",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 40,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "pallet_staking::Event<Runtime>",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 7,
                                docs: [],
                            },
                            Variant {
                                name: "Offences",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 46,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "pallet_offences::Event",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 8,
                                docs: [],
                            },
                            Variant {
                                name: "Session",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 48,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "pallet_session::Event",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 9,
                                docs: [],
                            },
                            Variant {
                                name: "Grandpa",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 49,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "pallet_grandpa::Event",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 11,
                                docs: [],
                            },
                            Variant {
                                name: "ImOnline",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 54,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "pallet_im_online::Event<Runtime>",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 12,
                                docs: [],
                            },
                            Variant {
                                name: "Democracy",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 63,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "pallet_democracy::Event<Runtime>",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 14,
                                docs: [],
                            },
                            Variant {
                                name: "Council",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 68,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "pallet_collective::Event<Runtime, pallet_collective::Instance1>",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 15,
                                docs: [],
                            },
                            Variant {
                                name: "TechnicalCommittee",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 69,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "pallet_collective::Event<Runtime, pallet_collective::Instance2>",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 16,
                                docs: [],
                            },
                            Variant {
                                name: "PhragmenElection",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 70,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "pallet_elections_phragmen::Event<Runtime>",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 17,
                                docs: [],
                            },
                            Variant {
                                name: "TechnicalMembership",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 73,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "pallet_membership::Event<Runtime, pallet_membership::Instance1>",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 18,
                                docs: [],
                            },
                            Variant {
                                name: "Treasury",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 74,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "pallet_treasury::Event<Runtime>",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 19,
                                docs: [],
                            },
                            Variant {
                                name: "ConvictionVoting",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 75,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "pallet_conviction_voting::Event<Runtime>",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 20,
                                docs: [],
                            },
                            Variant {
                                name: "Referenda",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 76,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "pallet_referenda::Event<Runtime>",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 21,
                                docs: [],
                            },
                            Variant {
                                name: "Whitelist",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 437,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "pallet_whitelist::Event<Runtime>",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 23,
                                docs: [],
                            },
                            Variant {
                                name: "Claims",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 442,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "claims::Event<Runtime>",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 24,
                                docs: [],
                            },
                            Variant {
                                name: "Vesting",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 443,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "pallet_vesting::Event<Runtime>",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 25,
                                docs: [],
                            },
                            Variant {
                                name: "Utility",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 444,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "pallet_utility::Event",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 26,
                                docs: [],
                            },
                            Variant {
                                name: "Identity",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 445,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "pallet_identity::Event<Runtime>",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 28,
                                docs: [],
                            },
                            Variant {
                                name: "Proxy",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 446,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "pallet_proxy::Event<Runtime>",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 29,
                                docs: [],
                            },
                            Variant {
                                name: "Multisig",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 447,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "pallet_multisig::Event<Runtime>",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 30,
                                docs: [],
                            },
                            Variant {
                                name: "Bounties",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 448,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "pallet_bounties::Event<Runtime>",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 34,
                                docs: [],
                            },
                            Variant {
                                name: "ChildBounties",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 449,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "pallet_child_bounties::Event<Runtime>",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 38,
                                docs: [],
                            },
                            Variant {
                                name: "Tips",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 450,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "pallet_tips::Event<Runtime>",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 35,
                                docs: [],
                            },
                            Variant {
                                name: "ElectionProviderMultiPhase",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 451,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "pallet_election_provider_multi_phase::Event<Runtime>",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 36,
                                docs: [],
                            },
                            Variant {
                                name: "VoterList",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 455,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "pallet_bags_list::Event<Runtime, pallet_bags_list::Instance1>",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 37,
                                docs: [],
                            },
                            Variant {
                                name: "NominationPools",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 456,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "pallet_nomination_pools::Event<Runtime>",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 39,
                                docs: [],
                            },
                            Variant {
                                name: "FastUnstake",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 457,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "pallet_fast_unstake::Event<Runtime>",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 40,
                                docs: [],
                            },
                            Variant {
                                name: "ParaInclusion",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 458,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "parachains_inclusion::Event<Runtime>",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 53,
                                docs: [],
                            },
                            Variant {
                                name: "Paras",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 462,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "parachains_paras::Event",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 56,
                                docs: [],
                            },
                            Variant {
                                name: "Hrmp",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 463,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "parachains_hrmp::Event<Runtime>",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 60,
                                docs: [],
                            },
                            Variant {
                                name: "ParasDisputes",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 464,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "parachains_disputes::Event<Runtime>",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 62,
                                docs: [],
                            },
                            Variant {
                                name: "Registrar",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 467,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "paras_registrar::Event<Runtime>",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 70,
                                docs: [],
                            },
                            Variant {
                                name: "Slots",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 468,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "slots::Event<Runtime>",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 71,
                                docs: [],
                            },
                            Variant {
                                name: "Auctions",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 469,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "auctions::Event<Runtime>",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 72,
                                docs: [],
                            },
                            Variant {
                                name: "Crowdloan",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 470,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "crowdloan::Event<Runtime>",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 73,
                                docs: [],
                            },
                            Variant {
                                name: "XcmPallet",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 471,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "pallet_xcm::Event<Runtime>",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 99,
                                docs: [],
                            },
                            Variant {
                                name: "MessageQueue",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 473,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "pallet_message_queue::Event<Runtime>",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 100,
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 21,
            ty: Type {
                path: Path {
                    segments: [
                        "frame_system",
                        "pallet",
                        "Event",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "T",
                        ty: None,
                    },
                ],
                type_def: Variant(
                    TypeDefVariant {
                        variants: [
                            Variant {
                                name: "ExtrinsicSuccess",
                                fields: [
                                    Field {
                                        name: Some(
                                            "dispatch_info",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 22,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "DispatchInfo",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 0,
                                docs: [
                                    "An extrinsic completed successfully.",
                                ],
                            },
                            Variant {
                                name: "ExtrinsicFailed",
                                fields: [
                                    Field {
                                        name: Some(
                                            "dispatch_error",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 25,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "DispatchError",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "dispatch_info",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 22,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "DispatchInfo",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 1,
                                docs: [
                                    "An extrinsic failed.",
                                ],
                            },
                            Variant {
                                name: "CodeUpdated",
                                fields: [],
                                index: 2,
                                docs: [
                                    "`:code` was updated.",
                                ],
                            },
                            Variant {
                                name: "NewAccount",
                                fields: [
                                    Field {
                                        name: Some(
                                            "account",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 0,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "T::AccountId",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 3,
                                docs: [
                                    "A new account was created.",
                                ],
                            },
                            Variant {
                                name: "KilledAccount",
                                fields: [
                                    Field {
                                        name: Some(
                                            "account",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 0,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "T::AccountId",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 4,
                                docs: [
                                    "An account was reaped.",
                                ],
                            },
                            Variant {
                                name: "Remarked",
                                fields: [
                                    Field {
                                        name: Some(
                                            "sender",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 0,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "T::AccountId",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "hash",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 12,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "T::Hash",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 5,
                                docs: [
                                    "On on-chain remark happened.",
                                ],
                            },
                        ],
                    },
                ),
                docs: [
                    "Event for the System pallet.",
                ],
            },
        },
        PortableType {
            id: 22,
            ty: Type {
                path: Path {
                    segments: [
                        "frame_support",
                        "dispatch",
                        "DispatchInfo",
                    ],
                },
                type_params: [],
                type_def: Composite(
                    TypeDefComposite {
                        fields: [
                            Field {
                                name: Some(
                                    "weight",
                                ),
                                ty: UntrackedSymbol {
                                    id: 9,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "Weight",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "class",
                                ),
                                ty: UntrackedSymbol {
                                    id: 23,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "DispatchClass",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "pays_fee",
                                ),
                                ty: UntrackedSymbol {
                                    id: 24,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "Pays",
                                ),
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 23,
            ty: Type {
                path: Path {
                    segments: [
                        "frame_support",
                        "dispatch",
                        "DispatchClass",
                    ],
                },
                type_params: [],
                type_def: Variant(
                    TypeDefVariant {
                        variants: [
                            Variant {
                                name: "Normal",
                                fields: [],
                                index: 0,
                                docs: [],
                            },
                            Variant {
                                name: "Operational",
                                fields: [],
                                index: 1,
                                docs: [],
                            },
                            Variant {
                                name: "Mandatory",
                                fields: [],
                                index: 2,
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 24,
            ty: Type {
                path: Path {
                    segments: [
                        "frame_support",
                        "dispatch",
                        "Pays",
                    ],
                },
                type_params: [],
                type_def: Variant(
                    TypeDefVariant {
                        variants: [
                            Variant {
                                name: "Yes",
                                fields: [],
                                index: 0,
                                docs: [],
                            },
                            Variant {
                                name: "No",
                                fields: [],
                                index: 1,
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 25,
            ty: Type {
                path: Path {
                    segments: [
                        "sp_runtime",
                        "DispatchError",
                    ],
                },
                type_params: [],
                type_def: Variant(
                    TypeDefVariant {
                        variants: [
                            Variant {
                                name: "Other",
                                fields: [],
                                index: 0,
                                docs: [],
                            },
                            Variant {
                                name: "CannotLookup",
                                fields: [],
                                index: 1,
                                docs: [],
                            },
                            Variant {
                                name: "BadOrigin",
                                fields: [],
                                index: 2,
                                docs: [],
                            },
                            Variant {
                                name: "Module",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 26,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "ModuleError",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 3,
                                docs: [],
                            },
                            Variant {
                                name: "ConsumerRemaining",
                                fields: [],
                                index: 4,
                                docs: [],
                            },
                            Variant {
                                name: "NoProviders",
                                fields: [],
                                index: 5,
                                docs: [],
                            },
                            Variant {
                                name: "TooManyConsumers",
                                fields: [],
                                index: 6,
                                docs: [],
                            },
                            Variant {
                                name: "Token",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 27,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "TokenError",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 7,
                                docs: [],
                            },
                            Variant {
                                name: "Arithmetic",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 28,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "ArithmeticError",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 8,
                                docs: [],
                            },
                            Variant {
                                name: "Transactional",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 29,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "TransactionalError",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 9,
                                docs: [],
                            },
                            Variant {
                                name: "Exhausted",
                                fields: [],
                                index: 10,
                                docs: [],
                            },
                            Variant {
                                name: "Corruption",
                                fields: [],
                                index: 11,
                                docs: [],
                            },
                            Variant {
                                name: "Unavailable",
                                fields: [],
                                index: 12,
                                docs: [],
                            },
                            Variant {
                                name: "RootNotAllowed",
                                fields: [],
                                index: 13,
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 26,
            ty: Type {
                path: Path {
                    segments: [
                        "sp_runtime",
                        "ModuleError",
                    ],
                },
                type_params: [],
                type_def: Composite(
                    TypeDefComposite {
                        fields: [
                            Field {
                                name: Some(
                                    "index",
                                ),
                                ty: UntrackedSymbol {
                                    id: 2,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "u8",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "error",
                                ),
                                ty: UntrackedSymbol {
                                    id: 17,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "[u8; MAX_MODULE_ERROR_ENCODED_SIZE]",
                                ),
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 27,
            ty: Type {
                path: Path {
                    segments: [
                        "sp_runtime",
                        "TokenError",
                    ],
                },
                type_params: [],
                type_def: Variant(
                    TypeDefVariant {
                        variants: [
                            Variant {
                                name: "FundsUnavailable",
                                fields: [],
                                index: 0,
                                docs: [],
                            },
                            Variant {
                                name: "OnlyProvider",
                                fields: [],
                                index: 1,
                                docs: [],
                            },
                            Variant {
                                name: "BelowMinimum",
                                fields: [],
                                index: 2,
                                docs: [],
                            },
                            Variant {
                                name: "CannotCreate",
                                fields: [],
                                index: 3,
                                docs: [],
                            },
                            Variant {
                                name: "UnknownAsset",
                                fields: [],
                                index: 4,
                                docs: [],
                            },
                            Variant {
                                name: "Frozen",
                                fields: [],
                                index: 5,
                                docs: [],
                            },
                            Variant {
                                name: "Unsupported",
                                fields: [],
                                index: 6,
                                docs: [],
                            },
                            Variant {
                                name: "CannotCreateHold",
                                fields: [],
                                index: 7,
                                docs: [],
                            },
                            Variant {
                                name: "NotExpendable",
                                fields: [],
                                index: 8,
                                docs: [],
                            },
                            Variant {
                                name: "Blocked",
                                fields: [],
                                index: 9,
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 28,
            ty: Type {
                path: Path {
                    segments: [
                        "sp_arithmetic",
                        "ArithmeticError",
                    ],
                },
                type_params: [],
                type_def: Variant(
                    TypeDefVariant {
                        variants: [
                            Variant {
                                name: "Underflow",
                                fields: [],
                                index: 0,
                                docs: [],
                            },
                            Variant {
                                name: "Overflow",
                                fields: [],
                                index: 1,
                                docs: [],
                            },
                            Variant {
                                name: "DivisionByZero",
                                fields: [],
                                index: 2,
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 29,
            ty: Type {
                path: Path {
                    segments: [
                        "sp_runtime",
                        "TransactionalError",
                    ],
                },
                type_params: [],
                type_def: Variant(
                    TypeDefVariant {
                        variants: [
                            Variant {
                                name: "LimitReached",
                                fields: [],
                                index: 0,
                                docs: [],
                            },
                            Variant {
                                name: "NoLayer",
                                fields: [],
                                index: 1,
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 30,
            ty: Type {
                path: Path {
                    segments: [
                        "pallet_scheduler",
                        "pallet",
                        "Event",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "T",
                        ty: None,
                    },
                ],
                type_def: Variant(
                    TypeDefVariant {
                        variants: [
                            Variant {
                                name: "Scheduled",
                                fields: [
                                    Field {
                                        name: Some(
                                            "when",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 4,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "T::BlockNumber",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "index",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 4,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "u32",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 0,
                                docs: [
                                    "Scheduled some task.",
                                ],
                            },
                            Variant {
                                name: "Canceled",
                                fields: [
                                    Field {
                                        name: Some(
                                            "when",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 4,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "T::BlockNumber",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "index",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 4,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "u32",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 1,
                                docs: [
                                    "Canceled some task.",
                                ],
                            },
                            Variant {
                                name: "Dispatched",
                                fields: [
                                    Field {
                                        name: Some(
                                            "task",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 31,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "TaskAddress<T::BlockNumber>",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "id",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 32,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "Option<TaskName>",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "result",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 33,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "DispatchResult",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 2,
                                docs: [
                                    "Dispatched some task.",
                                ],
                            },
                            Variant {
                                name: "CallUnavailable",
                                fields: [
                                    Field {
                                        name: Some(
                                            "task",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 31,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "TaskAddress<T::BlockNumber>",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "id",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 32,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "Option<TaskName>",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 3,
                                docs: [
                                    "The call for the provided hash was not found so the task has been aborted.",
                                ],
                            },
                            Variant {
                                name: "PeriodicFailed",
                                fields: [
                                    Field {
                                        name: Some(
                                            "task",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 31,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "TaskAddress<T::BlockNumber>",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "id",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 32,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "Option<TaskName>",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 4,
                                docs: [
                                    "The given task was unable to be renewed since the agenda is full at that block.",
                                ],
                            },
                            Variant {
                                name: "PermanentlyOverweight",
                                fields: [
                                    Field {
                                        name: Some(
                                            "task",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 31,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "TaskAddress<T::BlockNumber>",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "id",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 32,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "Option<TaskName>",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 5,
                                docs: [
                                    "The given task can never be executed since it is overweight.",
                                ],
                            },
                        ],
                    },
                ),
                docs: [
                    "Events type.",
                ],
            },
        },
        PortableType {
            id: 31,
            ty: Type {
                path: Path {
                    segments: [],
                },
                type_params: [],
                type_def: Tuple(
                    TypeDefTuple {
                        fields: [
                            UntrackedSymbol {
                                id: 4,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                            UntrackedSymbol {
                                id: 4,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 32,
            ty: Type {
                path: Path {
                    segments: [
                        "Option",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "T",
                        ty: Some(
                            UntrackedSymbol {
                                id: 1,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ),
                    },
                ],
                type_def: Variant(
                    TypeDefVariant {
                        variants: [
                            Variant {
                                name: "None",
                                fields: [],
                                index: 0,
                                docs: [],
                            },
                            Variant {
                                name: "Some",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 1,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: None,
                                        docs: [],
                                    },
                                ],
                                index: 1,
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 33,
            ty: Type {
                path: Path {
                    segments: [
                        "Result",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "T",
                        ty: Some(
                            UntrackedSymbol {
                                id: 34,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ),
                    },
                    TypeParameter {
                        name: "E",
                        ty: Some(
                            UntrackedSymbol {
                                id: 25,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ),
                    },
                ],
                type_def: Variant(
                    TypeDefVariant {
                        variants: [
                            Variant {
                                name: "Ok",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 34,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: None,
                                        docs: [],
                                    },
                                ],
                                index: 0,
                                docs: [],
                            },
                            Variant {
                                name: "Err",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 25,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: None,
                                        docs: [],
                                    },
                                ],
                                index: 1,
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 34,
            ty: Type {
                path: Path {
                    segments: [],
                },
                type_params: [],
                type_def: Tuple(
                    TypeDefTuple {
                        fields: [],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 35,
            ty: Type {
                path: Path {
                    segments: [
                        "pallet_preimage",
                        "pallet",
                        "Event",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "T",
                        ty: None,
                    },
                ],
                type_def: Variant(
                    TypeDefVariant {
                        variants: [
                            Variant {
                                name: "Noted",
                                fields: [
                                    Field {
                                        name: Some(
                                            "hash",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 12,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "T::Hash",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 0,
                                docs: [
                                    "A preimage has been noted.",
                                ],
                            },
                            Variant {
                                name: "Requested",
                                fields: [
                                    Field {
                                        name: Some(
                                            "hash",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 12,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "T::Hash",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 1,
                                docs: [
                                    "A preimage has been requested.",
                                ],
                            },
                            Variant {
                                name: "Cleared",
                                fields: [
                                    Field {
                                        name: Some(
                                            "hash",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 12,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "T::Hash",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 2,
                                docs: [
                                    "A preimage has ben cleared.",
                                ],
                            },
                        ],
                    },
                ),
                docs: [
                    "The `Event` enum of this pallet",
                ],
            },
        },
        PortableType {
            id: 36,
            ty: Type {
                path: Path {
                    segments: [
                        "pallet_indices",
                        "pallet",
                        "Event",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "T",
                        ty: None,
                    },
                ],
                type_def: Variant(
                    TypeDefVariant {
                        variants: [
                            Variant {
                                name: "IndexAssigned",
                                fields: [
                                    Field {
                                        name: Some(
                                            "who",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 0,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "T::AccountId",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "index",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 4,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "T::AccountIndex",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 0,
                                docs: [
                                    "A account index was assigned.",
                                ],
                            },
                            Variant {
                                name: "IndexFreed",
                                fields: [
                                    Field {
                                        name: Some(
                                            "index",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 4,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "T::AccountIndex",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 1,
                                docs: [
                                    "A account index has been freed up (unassigned).",
                                ],
                            },
                            Variant {
                                name: "IndexFrozen",
                                fields: [
                                    Field {
                                        name: Some(
                                            "index",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 4,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "T::AccountIndex",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "who",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 0,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "T::AccountId",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 2,
                                docs: [
                                    "A account index has been frozen to its current account ID.",
                                ],
                            },
                        ],
                    },
                ),
                docs: [
                    "The `Event` enum of this pallet",
                ],
            },
        },
        PortableType {
            id: 37,
            ty: Type {
                path: Path {
                    segments: [
                        "pallet_balances",
                        "pallet",
                        "Event",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "T",
                        ty: None,
                    },
                    TypeParameter {
                        name: "I",
                        ty: None,
                    },
                ],
                type_def: Variant(
                    TypeDefVariant {
                        variants: [
                            Variant {
                                name: "Endowed",
                                fields: [
                                    Field {
                                        name: Some(
                                            "account",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 0,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "T::AccountId",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "free_balance",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 6,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "T::Balance",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 0,
                                docs: [
                                    "An account was created with some free balance.",
                                ],
                            },
                            Variant {
                                name: "DustLost",
                                fields: [
                                    Field {
                                        name: Some(
                                            "account",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 0,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "T::AccountId",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "amount",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 6,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "T::Balance",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 1,
                                docs: [
                                    "An account was removed whose balance was non-zero but below ExistentialDeposit,",
                                    "resulting in an outright loss.",
                                ],
                            },
                            Variant {
                                name: "Transfer",
                                fields: [
                                    Field {
                                        name: Some(
                                            "from",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 0,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "T::AccountId",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "to",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 0,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "T::AccountId",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "amount",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 6,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "T::Balance",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 2,
                                docs: [
                                    "Transfer succeeded.",
                                ],
                            },
                            Variant {
                                name: "BalanceSet",
                                fields: [
                                    Field {
                                        name: Some(
                                            "who",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 0,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "T::AccountId",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "free",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 6,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "T::Balance",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 3,
                                docs: [
                                    "A balance was set by root.",
                                ],
                            },
                            Variant {
                                name: "Reserved",
                                fields: [
                                    Field {
                                        name: Some(
                                            "who",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 0,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "T::AccountId",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "amount",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 6,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "T::Balance",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 4,
                                docs: [
                                    "Some balance was reserved (moved from free to reserved).",
                                ],
                            },
                            Variant {
                                name: "Unreserved",
                                fields: [
                                    Field {
                                        name: Some(
                                            "who",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 0,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "T::AccountId",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "amount",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 6,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "T::Balance",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 5,
                                docs: [
                                    "Some balance was unreserved (moved from reserved to free).",
                                ],
                            },
                            Variant {
                                name: "ReserveRepatriated",
                                fields: [
                                    Field {
                                        name: Some(
                                            "from",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 0,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "T::AccountId",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "to",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 0,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "T::AccountId",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "amount",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 6,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "T::Balance",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "destination_status",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 38,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "Status",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 6,
                                docs: [
                                    "Some balance was moved from the reserve of the first account to the second account.",
                                    "Final argument indicates the destination balance type.",
                                ],
                            },
                            Variant {
                                name: "Deposit",
                                fields: [
                                    Field {
                                        name: Some(
                                            "who",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 0,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "T::AccountId",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "amount",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 6,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "T::Balance",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 7,
                                docs: [
                                    "Some amount was deposited (e.g. for transaction fees).",
                                ],
                            },
                            Variant {
                                name: "Withdraw",
                                fields: [
                                    Field {
                                        name: Some(
                                            "who",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 0,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "T::AccountId",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "amount",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 6,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "T::Balance",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 8,
                                docs: [
                                    "Some amount was withdrawn from the account (e.g. for transaction fees).",
                                ],
                            },
                            Variant {
                                name: "Slashed",
                                fields: [
                                    Field {
                                        name: Some(
                                            "who",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 0,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "T::AccountId",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "amount",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 6,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "T::Balance",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 9,
                                docs: [
                                    "Some amount was removed from the account (e.g. for misbehavior).",
                                ],
                            },
                            Variant {
                                name: "Minted",
                                fields: [
                                    Field {
                                        name: Some(
                                            "who",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 0,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "T::AccountId",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "amount",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 6,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "T::Balance",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 10,
                                docs: [
                                    "Some amount was minted into an account.",
                                ],
                            },
                            Variant {
                                name: "Burned",
                                fields: [
                                    Field {
                                        name: Some(
                                            "who",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 0,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "T::AccountId",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "amount",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 6,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "T::Balance",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 11,
                                docs: [
                                    "Some amount was burned from an account.",
                                ],
                            },
                            Variant {
                                name: "Suspended",
                                fields: [
                                    Field {
                                        name: Some(
                                            "who",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 0,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "T::AccountId",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "amount",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 6,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "T::Balance",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 12,
                                docs: [
                                    "Some amount was suspended from an account (it can be restored later).",
                                ],
                            },
                            Variant {
                                name: "Restored",
                                fields: [
                                    Field {
                                        name: Some(
                                            "who",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 0,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "T::AccountId",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "amount",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 6,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "T::Balance",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 13,
                                docs: [
                                    "Some amount was restored into an account.",
                                ],
                            },
                            Variant {
                                name: "Upgraded",
                                fields: [
                                    Field {
                                        name: Some(
                                            "who",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 0,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "T::AccountId",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 14,
                                docs: [
                                    "An account was upgraded.",
                                ],
                            },
                            Variant {
                                name: "Issued",
                                fields: [
                                    Field {
                                        name: Some(
                                            "amount",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 6,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "T::Balance",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 15,
                                docs: [
                                    "Total issuance was increased by `amount`, creating a credit to be balanced.",
                                ],
                            },
                            Variant {
                                name: "Rescinded",
                                fields: [
                                    Field {
                                        name: Some(
                                            "amount",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 6,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "T::Balance",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 16,
                                docs: [
                                    "Total issuance was decreased by `amount`, creating a debt to be balanced.",
                                ],
                            },
                            Variant {
                                name: "Locked",
                                fields: [
                                    Field {
                                        name: Some(
                                            "who",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 0,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "T::AccountId",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "amount",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 6,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "T::Balance",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 17,
                                docs: [
                                    "Some balance was locked.",
                                ],
                            },
                            Variant {
                                name: "Unlocked",
                                fields: [
                                    Field {
                                        name: Some(
                                            "who",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 0,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "T::AccountId",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "amount",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 6,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "T::Balance",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 18,
                                docs: [
                                    "Some balance was unlocked.",
                                ],
                            },
                            Variant {
                                name: "Frozen",
                                fields: [
                                    Field {
                                        name: Some(
                                            "who",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 0,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "T::AccountId",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "amount",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 6,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "T::Balance",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 19,
                                docs: [
                                    "Some balance was frozen.",
                                ],
                            },
                            Variant {
                                name: "Thawed",
                                fields: [
                                    Field {
                                        name: Some(
                                            "who",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 0,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "T::AccountId",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "amount",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 6,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "T::Balance",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 20,
                                docs: [
                                    "Some balance was thawed.",
                                ],
                            },
                        ],
                    },
                ),
                docs: [
                    "The `Event` enum of this pallet",
                ],
            },
        },
        PortableType {
            id: 38,
            ty: Type {
                path: Path {
                    segments: [
                        "frame_support",
                        "traits",
                        "tokens",
                        "misc",
                        "BalanceStatus",
                    ],
                },
                type_params: [],
                type_def: Variant(
                    TypeDefVariant {
                        variants: [
                            Variant {
                                name: "Free",
                                fields: [],
                                index: 0,
                                docs: [],
                            },
                            Variant {
                                name: "Reserved",
                                fields: [],
                                index: 1,
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 39,
            ty: Type {
                path: Path {
                    segments: [
                        "pallet_transaction_payment",
                        "pallet",
                        "Event",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "T",
                        ty: None,
                    },
                ],
                type_def: Variant(
                    TypeDefVariant {
                        variants: [
                            Variant {
                                name: "TransactionFeePaid",
                                fields: [
                                    Field {
                                        name: Some(
                                            "who",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 0,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "T::AccountId",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "actual_fee",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 6,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "BalanceOf<T>",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "tip",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 6,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "BalanceOf<T>",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 0,
                                docs: [
                                    "A transaction fee `actual_fee`, of which `tip` was added to the minimum inclusion fee,",
                                    "has been paid by `who`.",
                                ],
                            },
                        ],
                    },
                ),
                docs: [
                    "The `Event` enum of this pallet",
                ],
            },
        },
        PortableType {
            id: 40,
            ty: Type {
                path: Path {
                    segments: [
                        "pallet_staking",
                        "pallet",
                        "pallet",
                        "Event",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "T",
                        ty: None,
                    },
                ],
                type_def: Variant(
                    TypeDefVariant {
                        variants: [
                            Variant {
                                name: "EraPaid",
                                fields: [
                                    Field {
                                        name: Some(
                                            "era_index",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 4,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "EraIndex",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "validator_payout",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 6,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "BalanceOf<T>",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "remainder",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 6,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "BalanceOf<T>",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 0,
                                docs: [
                                    "The era payout has been set; the first balance is the validator-payout; the second is",
                                    "the remainder from the maximum amount of reward.",
                                ],
                            },
                            Variant {
                                name: "Rewarded",
                                fields: [
                                    Field {
                                        name: Some(
                                            "stash",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 0,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "T::AccountId",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "amount",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 6,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "BalanceOf<T>",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 1,
                                docs: [
                                    "The nominator has been rewarded by this amount.",
                                ],
                            },
                            Variant {
                                name: "Slashed",
                                fields: [
                                    Field {
                                        name: Some(
                                            "staker",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 0,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "T::AccountId",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "amount",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 6,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "BalanceOf<T>",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 2,
                                docs: [
                                    "A staker (validator or nominator) has been slashed by the given amount.",
                                ],
                            },
                            Variant {
                                name: "SlashReported",
                                fields: [
                                    Field {
                                        name: Some(
                                            "validator",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 0,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "T::AccountId",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "fraction",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 41,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "Perbill",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "slash_era",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 4,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "EraIndex",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 3,
                                docs: [
                                    "A slash for the given validator, for the given percentage of their stake, at the given",
                                    "era as been reported.",
                                ],
                            },
                            Variant {
                                name: "OldSlashingReportDiscarded",
                                fields: [
                                    Field {
                                        name: Some(
                                            "session_index",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 4,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "SessionIndex",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 4,
                                docs: [
                                    "An old slashing report from a prior era was discarded because it could",
                                    "not be processed.",
                                ],
                            },
                            Variant {
                                name: "StakersElected",
                                fields: [],
                                index: 5,
                                docs: [
                                    "A new set of stakers was elected.",
                                ],
                            },
                            Variant {
                                name: "Bonded",
                                fields: [
                                    Field {
                                        name: Some(
                                            "stash",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 0,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "T::AccountId",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "amount",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 6,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "BalanceOf<T>",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 6,
                                docs: [
                                    "An account has bonded this amount. \\[stash, amount\\]",
                                    "",
                                    "NOTE: This event is only emitted when funds are bonded via a dispatchable. Notably,",
                                    "it will not be emitted for staking rewards when they are added to stake.",
                                ],
                            },
                            Variant {
                                name: "Unbonded",
                                fields: [
                                    Field {
                                        name: Some(
                                            "stash",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 0,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "T::AccountId",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "amount",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 6,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "BalanceOf<T>",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 7,
                                docs: [
                                    "An account has unbonded this amount.",
                                ],
                            },
                            Variant {
                                name: "Withdrawn",
                                fields: [
                                    Field {
                                        name: Some(
                                            "stash",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 0,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "T::AccountId",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "amount",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 6,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "BalanceOf<T>",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 8,
                                docs: [
                                    "An account has called `withdraw_unbonded` and removed unbonding chunks worth `Balance`",
                                    "from the unlocking queue.",
                                ],
                            },
                            Variant {
                                name: "Kicked",
                                fields: [
                                    Field {
                                        name: Some(
                                            "nominator",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 0,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "T::AccountId",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "stash",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 0,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "T::AccountId",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 9,
                                docs: [
                                    "A nominator has been kicked from a validator.",
                                ],
                            },
                            Variant {
                                name: "StakingElectionFailed",
                                fields: [],
                                index: 10,
                                docs: [
                                    "The election failed. No new era is planned.",
                                ],
                            },
                            Variant {
                                name: "Chilled",
                                fields: [
                                    Field {
                                        name: Some(
                                            "stash",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 0,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "T::AccountId",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 11,
                                docs: [
                                    "An account has stopped participating as either a validator or nominator.",
                                ],
                            },
                            Variant {
                                name: "PayoutStarted",
                                fields: [
                                    Field {
                                        name: Some(
                                            "era_index",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 4,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "EraIndex",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "validator_stash",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 0,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "T::AccountId",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 12,
                                docs: [
                                    "The stakers' rewards are getting paid.",
                                ],
                            },
                            Variant {
                                name: "ValidatorPrefsSet",
                                fields: [
                                    Field {
                                        name: Some(
                                            "stash",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 0,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "T::AccountId",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "prefs",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 42,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "ValidatorPrefs",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 13,
                                docs: [
                                    "A validator has set their preferences.",
                                ],
                            },
                            Variant {
                                name: "ForceEra",
                                fields: [
                                    Field {
                                        name: Some(
                                            "mode",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 45,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "Forcing",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 14,
                                docs: [
                                    "A new force era mode was set.",
                                ],
                            },
                        ],
                    },
                ),
                docs: [
                    "The `Event` enum of this pallet",
                ],
            },
        },
        PortableType {
            id: 41,
            ty: Type {
                path: Path {
                    segments: [
                        "sp_arithmetic",
                        "per_things",
                        "Perbill",
                    ],
                },
                type_params: [],
                type_def: Composite(
                    TypeDefComposite {
                        fields: [
                            Field {
                                name: None,
                                ty: UntrackedSymbol {
                                    id: 4,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "u32",
                                ),
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 42,
            ty: Type {
                path: Path {
                    segments: [
                        "pallet_staking",
                        "ValidatorPrefs",
                    ],
                },
                type_params: [],
                type_def: Composite(
                    TypeDefComposite {
                        fields: [
                            Field {
                                name: Some(
                                    "commission",
                                ),
                                ty: UntrackedSymbol {
                                    id: 43,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "Perbill",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "blocked",
                                ),
                                ty: UntrackedSymbol {
                                    id: 44,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "bool",
                                ),
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 43,
            ty: Type {
                path: Path {
                    segments: [],
                },
                type_params: [],
                type_def: Compact(
                    TypeDefCompact {
                        type_param: UntrackedSymbol {
                            id: 41,
                            marker: PhantomData<fn() -> core::any::TypeId>,
                        },
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 44,
            ty: Type {
                path: Path {
                    segments: [],
                },
                type_params: [],
                type_def: Primitive(
                    Bool,
                ),
                docs: [],
            },
        },
        PortableType {
            id: 45,
            ty: Type {
                path: Path {
                    segments: [
                        "pallet_staking",
                        "Forcing",
                    ],
                },
                type_params: [],
                type_def: Variant(
                    TypeDefVariant {
                        variants: [
                            Variant {
                                name: "NotForcing",
                                fields: [],
                                index: 0,
                                docs: [],
                            },
                            Variant {
                                name: "ForceNew",
                                fields: [],
                                index: 1,
                                docs: [],
                            },
                            Variant {
                                name: "ForceNone",
                                fields: [],
                                index: 2,
                                docs: [],
                            },
                            Variant {
                                name: "ForceAlways",
                                fields: [],
                                index: 3,
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 46,
            ty: Type {
                path: Path {
                    segments: [
                        "pallet_offences",
                        "pallet",
                        "Event",
                    ],
                },
                type_params: [],
                type_def: Variant(
                    TypeDefVariant {
                        variants: [
                            Variant {
                                name: "Offence",
                                fields: [
                                    Field {
                                        name: Some(
                                            "kind",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 47,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "Kind",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "timeslot",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 13,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "OpaqueTimeSlot",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 0,
                                docs: [
                                    "There is an offence reported of the given `kind` happened at the `session_index` and",
                                    "(kind-specific) time slot. This event is not deposited for duplicate slashes.",
                                    "\\[kind, timeslot\\].",
                                ],
                            },
                        ],
                    },
                ),
                docs: [
                    "Events type.",
                ],
            },
        },
        PortableType {
            id: 47,
            ty: Type {
                path: Path {
                    segments: [],
                },
                type_params: [],
                type_def: Array(
                    TypeDefArray {
                        len: 16,
                        type_param: UntrackedSymbol {
                            id: 2,
                            marker: PhantomData<fn() -> core::any::TypeId>,
                        },
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 48,
            ty: Type {
                path: Path {
                    segments: [
                        "pallet_session",
                        "pallet",
                        "Event",
                    ],
                },
                type_params: [],
                type_def: Variant(
                    TypeDefVariant {
                        variants: [
                            Variant {
                                name: "NewSession",
                                fields: [
                                    Field {
                                        name: Some(
                                            "session_index",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 4,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "SessionIndex",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 0,
                                docs: [
                                    "New session has happened. Note that the argument is the session index, not the",
                                    "block number as the type might suggest.",
                                ],
                            },
                        ],
                    },
                ),
                docs: [
                    "The `Event` enum of this pallet",
                ],
            },
        },
        PortableType {
            id: 49,
            ty: Type {
                path: Path {
                    segments: [
                        "pallet_grandpa",
                        "pallet",
                        "Event",
                    ],
                },
                type_params: [],
                type_def: Variant(
                    TypeDefVariant {
                        variants: [
                            Variant {
                                name: "NewAuthorities",
                                fields: [
                                    Field {
                                        name: Some(
                                            "authority_set",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 50,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "AuthorityList",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 0,
                                docs: [
                                    "New authority set has been applied.",
                                ],
                            },
                            Variant {
                                name: "Paused",
                                fields: [],
                                index: 1,
                                docs: [
                                    "Current authority set has been paused.",
                                ],
                            },
                            Variant {
                                name: "Resumed",
                                fields: [],
                                index: 2,
                                docs: [
                                    "Current authority set has been resumed.",
                                ],
                            },
                        ],
                    },
                ),
                docs: [
                    "The `Event` enum of this pallet",
                ],
            },
        },
        PortableType {
            id: 50,
            ty: Type {
                path: Path {
                    segments: [],
                },
                type_params: [],
                type_def: Sequence(
                    TypeDefSequence {
                        type_param: UntrackedSymbol {
                            id: 51,
                            marker: PhantomData<fn() -> core::any::TypeId>,
                        },
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 51,
            ty: Type {
                path: Path {
                    segments: [],
                },
                type_params: [],
                type_def: Tuple(
                    TypeDefTuple {
                        fields: [
                            UntrackedSymbol {
                                id: 52,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                            UntrackedSymbol {
                                id: 11,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 52,
            ty: Type {
                path: Path {
                    segments: [
                        "sp_consensus_grandpa",
                        "app",
                        "Public",
                    ],
                },
                type_params: [],
                type_def: Composite(
                    TypeDefComposite {
                        fields: [
                            Field {
                                name: None,
                                ty: UntrackedSymbol {
                                    id: 53,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "ed25519::Public",
                                ),
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 53,
            ty: Type {
                path: Path {
                    segments: [
                        "sp_core",
                        "ed25519",
                        "Public",
                    ],
                },
                type_params: [],
                type_def: Composite(
                    TypeDefComposite {
                        fields: [
                            Field {
                                name: None,
                                ty: UntrackedSymbol {
                                    id: 1,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "[u8; 32]",
                                ),
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 54,
            ty: Type {
                path: Path {
                    segments: [
                        "pallet_im_online",
                        "pallet",
                        "Event",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "T",
                        ty: None,
                    },
                ],
                type_def: Variant(
                    TypeDefVariant {
                        variants: [
                            Variant {
                                name: "HeartbeatReceived",
                                fields: [
                                    Field {
                                        name: Some(
                                            "authority_id",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 55,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "T::AuthorityId",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 0,
                                docs: [
                                    "A new heartbeat was received from `AuthorityId`.",
                                ],
                            },
                            Variant {
                                name: "AllGood",
                                fields: [],
                                index: 1,
                                docs: [
                                    "At the end of the session, no offence was committed.",
                                ],
                            },
                            Variant {
                                name: "SomeOffline",
                                fields: [
                                    Field {
                                        name: Some(
                                            "offline",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 57,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "Vec<IdentificationTuple<T>>",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 2,
                                docs: [
                                    "At the end of the session, at least one validator was found to be offline.",
                                ],
                            },
                        ],
                    },
                ),
                docs: [
                    "The `Event` enum of this pallet",
                ],
            },
        },
        PortableType {
            id: 55,
            ty: Type {
                path: Path {
                    segments: [
                        "pallet_im_online",
                        "sr25519",
                        "app_sr25519",
                        "Public",
                    ],
                },
                type_params: [],
                type_def: Composite(
                    TypeDefComposite {
                        fields: [
                            Field {
                                name: None,
                                ty: UntrackedSymbol {
                                    id: 56,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "sr25519::Public",
                                ),
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 56,
            ty: Type {
                path: Path {
                    segments: [
                        "sp_core",
                        "sr25519",
                        "Public",
                    ],
                },
                type_params: [],
                type_def: Composite(
                    TypeDefComposite {
                        fields: [
                            Field {
                                name: None,
                                ty: UntrackedSymbol {
                                    id: 1,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "[u8; 32]",
                                ),
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 57,
            ty: Type {
                path: Path {
                    segments: [],
                },
                type_params: [],
                type_def: Sequence(
                    TypeDefSequence {
                        type_param: UntrackedSymbol {
                            id: 58,
                            marker: PhantomData<fn() -> core::any::TypeId>,
                        },
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 58,
            ty: Type {
                path: Path {
                    segments: [],
                },
                type_params: [],
                type_def: Tuple(
                    TypeDefTuple {
                        fields: [
                            UntrackedSymbol {
                                id: 0,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                            UntrackedSymbol {
                                id: 59,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 59,
            ty: Type {
                path: Path {
                    segments: [
                        "pallet_staking",
                        "Exposure",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "AccountId",
                        ty: Some(
                            UntrackedSymbol {
                                id: 0,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ),
                    },
                    TypeParameter {
                        name: "Balance",
                        ty: Some(
                            UntrackedSymbol {
                                id: 6,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ),
                    },
                ],
                type_def: Composite(
                    TypeDefComposite {
                        fields: [
                            Field {
                                name: Some(
                                    "total",
                                ),
                                ty: UntrackedSymbol {
                                    id: 60,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "Balance",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "own",
                                ),
                                ty: UntrackedSymbol {
                                    id: 60,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "Balance",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "others",
                                ),
                                ty: UntrackedSymbol {
                                    id: 61,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "Vec<IndividualExposure<AccountId, Balance>>",
                                ),
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 60,
            ty: Type {
                path: Path {
                    segments: [],
                },
                type_params: [],
                type_def: Compact(
                    TypeDefCompact {
                        type_param: UntrackedSymbol {
                            id: 6,
                            marker: PhantomData<fn() -> core::any::TypeId>,
                        },
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 61,
            ty: Type {
                path: Path {
                    segments: [],
                },
                type_params: [],
                type_def: Sequence(
                    TypeDefSequence {
                        type_param: UntrackedSymbol {
                            id: 62,
                            marker: PhantomData<fn() -> core::any::TypeId>,
                        },
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 62,
            ty: Type {
                path: Path {
                    segments: [
                        "pallet_staking",
                        "IndividualExposure",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "AccountId",
                        ty: Some(
                            UntrackedSymbol {
                                id: 0,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ),
                    },
                    TypeParameter {
                        name: "Balance",
                        ty: Some(
                            UntrackedSymbol {
                                id: 6,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ),
                    },
                ],
                type_def: Composite(
                    TypeDefComposite {
                        fields: [
                            Field {
                                name: Some(
                                    "who",
                                ),
                                ty: UntrackedSymbol {
                                    id: 0,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "AccountId",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "value",
                                ),
                                ty: UntrackedSymbol {
                                    id: 60,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "Balance",
                                ),
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 63,
            ty: Type {
                path: Path {
                    segments: [
                        "pallet_democracy",
                        "pallet",
                        "Event",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "T",
                        ty: None,
                    },
                ],
                type_def: Variant(
                    TypeDefVariant {
                        variants: [
                            Variant {
                                name: "Proposed",
                                fields: [
                                    Field {
                                        name: Some(
                                            "proposal_index",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 4,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "PropIndex",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "deposit",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 6,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "BalanceOf<T>",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 0,
                                docs: [
                                    "A motion has been proposed by a public account.",
                                ],
                            },
                            Variant {
                                name: "Tabled",
                                fields: [
                                    Field {
                                        name: Some(
                                            "proposal_index",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 4,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "PropIndex",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "deposit",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 6,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "BalanceOf<T>",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 1,
                                docs: [
                                    "A public proposal has been tabled for referendum vote.",
                                ],
                            },
                            Variant {
                                name: "ExternalTabled",
                                fields: [],
                                index: 2,
                                docs: [
                                    "An external proposal has been tabled.",
                                ],
                            },
                            Variant {
                                name: "Started",
                                fields: [
                                    Field {
                                        name: Some(
                                            "ref_index",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 4,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "ReferendumIndex",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "threshold",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 64,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "VoteThreshold",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 3,
                                docs: [
                                    "A referendum has begun.",
                                ],
                            },
                            Variant {
                                name: "Passed",
                                fields: [
                                    Field {
                                        name: Some(
                                            "ref_index",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 4,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "ReferendumIndex",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 4,
                                docs: [
                                    "A proposal has been approved by referendum.",
                                ],
                            },
                            Variant {
                                name: "NotPassed",
                                fields: [
                                    Field {
                                        name: Some(
                                            "ref_index",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 4,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "ReferendumIndex",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 5,
                                docs: [
                                    "A proposal has been rejected by referendum.",
                                ],
                            },
                            Variant {
                                name: "Cancelled",
                                fields: [
                                    Field {
                                        name: Some(
                                            "ref_index",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 4,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "ReferendumIndex",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 6,
                                docs: [
                                    "A referendum has been cancelled.",
                                ],
                            },
                            Variant {
                                name: "Delegated",
                                fields: [
                                    Field {
                                        name: Some(
                                            "who",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 0,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "T::AccountId",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "target",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 0,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "T::AccountId",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 7,
                                docs: [
                                    "An account has delegated their vote to another account.",
                                ],
                            },
                            Variant {
                                name: "Undelegated",
                                fields: [
                                    Field {
                                        name: Some(
                                            "account",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 0,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "T::AccountId",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 8,
                                docs: [
                                    "An account has cancelled a previous delegation operation.",
                                ],
                            },
                            Variant {
                                name: "Vetoed",
                                fields: [
                                    Field {
                                        name: Some(
                                            "who",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 0,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "T::AccountId",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "proposal_hash",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 12,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "H256",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "until",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 4,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "T::BlockNumber",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 9,
                                docs: [
                                    "An external proposal has been vetoed.",
                                ],
                            },
                            Variant {
                                name: "Blacklisted",
                                fields: [
                                    Field {
                                        name: Some(
                                            "proposal_hash",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 12,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "H256",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 10,
                                docs: [
                                    "A proposal_hash has been blacklisted permanently.",
                                ],
                            },
                            Variant {
                                name: "Voted",
                                fields: [
                                    Field {
                                        name: Some(
                                            "voter",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 0,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "T::AccountId",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "ref_index",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 4,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "ReferendumIndex",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "vote",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 65,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "AccountVote<BalanceOf<T>>",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 11,
                                docs: [
                                    "An account has voted in a referendum",
                                ],
                            },
                            Variant {
                                name: "Seconded",
                                fields: [
                                    Field {
                                        name: Some(
                                            "seconder",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 0,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "T::AccountId",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "prop_index",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 4,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "PropIndex",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 12,
                                docs: [
                                    "An account has secconded a proposal",
                                ],
                            },
                            Variant {
                                name: "ProposalCanceled",
                                fields: [
                                    Field {
                                        name: Some(
                                            "prop_index",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 4,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "PropIndex",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 13,
                                docs: [
                                    "A proposal got canceled.",
                                ],
                            },
                            Variant {
                                name: "MetadataSet",
                                fields: [
                                    Field {
                                        name: Some(
                                            "owner",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 67,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "MetadataOwner",
                                        ),
                                        docs: [
                                            "Metadata owner.",
                                        ],
                                    },
                                    Field {
                                        name: Some(
                                            "hash",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 12,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "PreimageHash",
                                        ),
                                        docs: [
                                            "Preimage hash.",
                                        ],
                                    },
                                ],
                                index: 14,
                                docs: [
                                    "Metadata for a proposal or a referendum has been set.",
                                ],
                            },
                            Variant {
                                name: "MetadataCleared",
                                fields: [
                                    Field {
                                        name: Some(
                                            "owner",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 67,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "MetadataOwner",
                                        ),
                                        docs: [
                                            "Metadata owner.",
                                        ],
                                    },
                                    Field {
                                        name: Some(
                                            "hash",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 12,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "PreimageHash",
                                        ),
                                        docs: [
                                            "Preimage hash.",
                                        ],
                                    },
                                ],
                                index: 15,
                                docs: [
                                    "Metadata for a proposal or a referendum has been cleared.",
                                ],
                            },
                            Variant {
                                name: "MetadataTransferred",
                                fields: [
                                    Field {
                                        name: Some(
                                            "prev_owner",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 67,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "MetadataOwner",
                                        ),
                                        docs: [
                                            "Previous metadata owner.",
                                        ],
                                    },
                                    Field {
                                        name: Some(
                                            "owner",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 67,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "MetadataOwner",
                                        ),
                                        docs: [
                                            "New metadata owner.",
                                        ],
                                    },
                                    Field {
                                        name: Some(
                                            "hash",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 12,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "PreimageHash",
                                        ),
                                        docs: [
                                            "Preimage hash.",
                                        ],
                                    },
                                ],
                                index: 16,
                                docs: [
                                    "Metadata has been transferred to new owner.",
                                ],
                            },
                        ],
                    },
                ),
                docs: [
                    "The `Event` enum of this pallet",
                ],
            },
        },
        PortableType {
            id: 64,
            ty: Type {
                path: Path {
                    segments: [
                        "pallet_democracy",
                        "vote_threshold",
                        "VoteThreshold",
                    ],
                },
                type_params: [],
                type_def: Variant(
                    TypeDefVariant {
                        variants: [
                            Variant {
                                name: "SuperMajorityApprove",
                                fields: [],
                                index: 0,
                                docs: [],
                            },
                            Variant {
                                name: "SuperMajorityAgainst",
                                fields: [],
                                index: 1,
                                docs: [],
                            },
                            Variant {
                                name: "SimpleMajority",
                                fields: [],
                                index: 2,
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 65,
            ty: Type {
                path: Path {
                    segments: [
                        "pallet_democracy",
                        "vote",
                        "AccountVote",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "Balance",
                        ty: Some(
                            UntrackedSymbol {
                                id: 6,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ),
                    },
                ],
                type_def: Variant(
                    TypeDefVariant {
                        variants: [
                            Variant {
                                name: "Standard",
                                fields: [
                                    Field {
                                        name: Some(
                                            "vote",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 66,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "Vote",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "balance",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 6,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "Balance",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 0,
                                docs: [],
                            },
                            Variant {
                                name: "Split",
                                fields: [
                                    Field {
                                        name: Some(
                                            "aye",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 6,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "Balance",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "nay",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 6,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "Balance",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 1,
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 66,
            ty: Type {
                path: Path {
                    segments: [
                        "pallet_democracy",
                        "vote",
                        "Vote",
                    ],
                },
                type_params: [],
                type_def: Composite(
                    TypeDefComposite {
                        fields: [
                            Field {
                                name: None,
                                ty: UntrackedSymbol {
                                    id: 2,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: None,
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 67,
            ty: Type {
                path: Path {
                    segments: [
                        "pallet_democracy",
                        "types",
                        "MetadataOwner",
                    ],
                },
                type_params: [],
                type_def: Variant(
                    TypeDefVariant {
                        variants: [
                            Variant {
                                name: "External",
                                fields: [],
                                index: 0,
                                docs: [],
                            },
                            Variant {
                                name: "Proposal",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 4,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "PropIndex",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 1,
                                docs: [],
                            },
                            Variant {
                                name: "Referendum",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 4,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "ReferendumIndex",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 2,
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 68,
            ty: Type {
                path: Path {
                    segments: [
                        "pallet_collective",
                        "pallet",
                        "Event",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "T",
                        ty: None,
                    },
                    TypeParameter {
                        name: "I",
                        ty: None,
                    },
                ],
                type_def: Variant(
                    TypeDefVariant {
                        variants: [
                            Variant {
                                name: "Proposed",
                                fields: [
                                    Field {
                                        name: Some(
                                            "account",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 0,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "T::AccountId",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "proposal_index",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 4,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "ProposalIndex",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "proposal_hash",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 12,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "T::Hash",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "threshold",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 4,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "MemberCount",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 0,
                                docs: [
                                    "A motion (given hash) has been proposed (by given account) with a threshold (given",
                                    "`MemberCount`).",
                                ],
                            },
                            Variant {
                                name: "Voted",
                                fields: [
                                    Field {
                                        name: Some(
                                            "account",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 0,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "T::AccountId",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "proposal_hash",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 12,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "T::Hash",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "voted",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 44,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "bool",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "yes",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 4,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "MemberCount",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "no",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 4,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "MemberCount",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 1,
                                docs: [
                                    "A motion (given hash) has been voted on by given account, leaving",
                                    "a tally (yes votes and no votes given respectively as `MemberCount`).",
                                ],
                            },
                            Variant {
                                name: "Approved",
                                fields: [
                                    Field {
                                        name: Some(
                                            "proposal_hash",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 12,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "T::Hash",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 2,
                                docs: [
                                    "A motion was approved by the required threshold.",
                                ],
                            },
                            Variant {
                                name: "Disapproved",
                                fields: [
                                    Field {
                                        name: Some(
                                            "proposal_hash",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 12,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "T::Hash",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 3,
                                docs: [
                                    "A motion was not approved by the required threshold.",
                                ],
                            },
                            Variant {
                                name: "Executed",
                                fields: [
                                    Field {
                                        name: Some(
                                            "proposal_hash",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 12,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "T::Hash",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "result",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 33,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "DispatchResult",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 4,
                                docs: [
                                    "A motion was executed; result will be `Ok` if it returned without error.",
                                ],
                            },
                            Variant {
                                name: "MemberExecuted",
                                fields: [
                                    Field {
                                        name: Some(
                                            "proposal_hash",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 12,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "T::Hash",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "result",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 33,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "DispatchResult",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 5,
                                docs: [
                                    "A single member did some action; result will be `Ok` if it returned without error.",
                                ],
                            },
                            Variant {
                                name: "Closed",
                                fields: [
                                    Field {
                                        name: Some(
                                            "proposal_hash",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 12,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "T::Hash",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "yes",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 4,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "MemberCount",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "no",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 4,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "MemberCount",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 6,
                                docs: [
                                    "A proposal was closed because its threshold was reached or after its duration was up.",
                                ],
                            },
                        ],
                    },
                ),
                docs: [
                    "The `Event` enum of this pallet",
                ],
            },
        },
        PortableType {
            id: 69,
            ty: Type {
                path: Path {
                    segments: [
                        "pallet_collective",
                        "pallet",
                        "Event2",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "T",
                        ty: None,
                    },
                    TypeParameter {
                        name: "I",
                        ty: None,
                    },
                ],
                type_def: Variant(
                    TypeDefVariant {
                        variants: [
                            Variant {
                                name: "Proposed",
                                fields: [
                                    Field {
                                        name: Some(
                                            "account",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 0,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "T::AccountId",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "proposal_index",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 4,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "ProposalIndex",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "proposal_hash",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 12,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "T::Hash",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "threshold",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 4,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "MemberCount",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 0,
                                docs: [
                                    "A motion (given hash) has been proposed (by given account) with a threshold (given",
                                    "`MemberCount`).",
                                ],
                            },
                            Variant {
                                name: "Voted",
                                fields: [
                                    Field {
                                        name: Some(
                                            "account",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 0,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "T::AccountId",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "proposal_hash",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 12,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "T::Hash",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "voted",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 44,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "bool",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "yes",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 4,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "MemberCount",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "no",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 4,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "MemberCount",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 1,
                                docs: [
                                    "A motion (given hash) has been voted on by given account, leaving",
                                    "a tally (yes votes and no votes given respectively as `MemberCount`).",
                                ],
                            },
                            Variant {
                                name: "Approved",
                                fields: [
                                    Field {
                                        name: Some(
                                            "proposal_hash",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 12,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "T::Hash",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 2,
                                docs: [
                                    "A motion was approved by the required threshold.",
                                ],
                            },
                            Variant {
                                name: "Disapproved",
                                fields: [
                                    Field {
                                        name: Some(
                                            "proposal_hash",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 12,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "T::Hash",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 3,
                                docs: [
                                    "A motion was not approved by the required threshold.",
                                ],
                            },
                            Variant {
                                name: "Executed",
                                fields: [
                                    Field {
                                        name: Some(
                                            "proposal_hash",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 12,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "T::Hash",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "result",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 33,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "DispatchResult",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 4,
                                docs: [
                                    "A motion was executed; result will be `Ok` if it returned without error.",
                                ],
                            },
                            Variant {
                                name: "MemberExecuted",
                                fields: [
                                    Field {
                                        name: Some(
                                            "proposal_hash",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 12,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "T::Hash",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "result",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 33,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "DispatchResult",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 5,
                                docs: [
                                    "A single member did some action; result will be `Ok` if it returned without error.",
                                ],
                            },
                            Variant {
                                name: "Closed",
                                fields: [
                                    Field {
                                        name: Some(
                                            "proposal_hash",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 12,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "T::Hash",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "yes",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 4,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "MemberCount",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "no",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 4,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "MemberCount",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 6,
                                docs: [
                                    "A proposal was closed because its threshold was reached or after its duration was up.",
                                ],
                            },
                        ],
                    },
                ),
                docs: [
                    "The `Event` enum of this pallet",
                ],
            },
        },
        PortableType {
            id: 70,
            ty: Type {
                path: Path {
                    segments: [
                        "pallet_elections_phragmen",
                        "pallet",
                        "Event",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "T",
                        ty: None,
                    },
                ],
                type_def: Variant(
                    TypeDefVariant {
                        variants: [
                            Variant {
                                name: "NewTerm",
                                fields: [
                                    Field {
                                        name: Some(
                                            "new_members",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 71,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "Vec<(<T as frame_system::Config>::AccountId, BalanceOf<T>)>",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 0,
                                docs: [
                                    "A new term with new_members. This indicates that enough candidates existed to run",
                                    "the election, not that enough have has been elected. The inner value must be examined",
                                    "for this purpose. A `NewTerm(\\[\\])` indicates that some candidates got their bond",
                                    "slashed and none were elected, whilst `EmptyTerm` means that no candidates existed to",
                                    "begin with.",
                                ],
                            },
                            Variant {
                                name: "EmptyTerm",
                                fields: [],
                                index: 1,
                                docs: [
                                    "No (or not enough) candidates existed for this round. This is different from",
                                    "`NewTerm(\\[\\])`. See the description of `NewTerm`.",
                                ],
                            },
                            Variant {
                                name: "ElectionError",
                                fields: [],
                                index: 2,
                                docs: [
                                    "Internal error happened while trying to perform election.",
                                ],
                            },
                            Variant {
                                name: "MemberKicked",
                                fields: [
                                    Field {
                                        name: Some(
                                            "member",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 0,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "<T as frame_system::Config>::AccountId",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 3,
                                docs: [
                                    "A member has been removed. This should always be followed by either `NewTerm` or",
                                    "`EmptyTerm`.",
                                ],
                            },
                            Variant {
                                name: "Renounced",
                                fields: [
                                    Field {
                                        name: Some(
                                            "candidate",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 0,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "<T as frame_system::Config>::AccountId",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 4,
                                docs: [
                                    "Someone has renounced their candidacy.",
                                ],
                            },
                            Variant {
                                name: "CandidateSlashed",
                                fields: [
                                    Field {
                                        name: Some(
                                            "candidate",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 0,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "<T as frame_system::Config>::AccountId",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "amount",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 6,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "BalanceOf<T>",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 5,
                                docs: [
                                    "A candidate was slashed by amount due to failing to obtain a seat as member or",
                                    "runner-up.",
                                    "",
                                    "Note that old members and runners-up are also candidates.",
                                ],
                            },
                            Variant {
                                name: "SeatHolderSlashed",
                                fields: [
                                    Field {
                                        name: Some(
                                            "seat_holder",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 0,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "<T as frame_system::Config>::AccountId",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "amount",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 6,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "BalanceOf<T>",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 6,
                                docs: [
                                    "A seat holder was slashed by amount by being forcefully removed from the set.",
                                ],
                            },
                        ],
                    },
                ),
                docs: [
                    "The `Event` enum of this pallet",
                ],
            },
        },
        PortableType {
            id: 71,
            ty: Type {
                path: Path {
                    segments: [],
                },
                type_params: [],
                type_def: Sequence(
                    TypeDefSequence {
                        type_param: UntrackedSymbol {
                            id: 72,
                            marker: PhantomData<fn() -> core::any::TypeId>,
                        },
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 72,
            ty: Type {
                path: Path {
                    segments: [],
                },
                type_params: [],
                type_def: Tuple(
                    TypeDefTuple {
                        fields: [
                            UntrackedSymbol {
                                id: 0,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                            UntrackedSymbol {
                                id: 6,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 73,
            ty: Type {
                path: Path {
                    segments: [
                        "pallet_membership",
                        "pallet",
                        "Event",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "T",
                        ty: None,
                    },
                    TypeParameter {
                        name: "I",
                        ty: None,
                    },
                ],
                type_def: Variant(
                    TypeDefVariant {
                        variants: [
                            Variant {
                                name: "MemberAdded",
                                fields: [],
                                index: 0,
                                docs: [
                                    "The given member was added; see the transaction for who.",
                                ],
                            },
                            Variant {
                                name: "MemberRemoved",
                                fields: [],
                                index: 1,
                                docs: [
                                    "The given member was removed; see the transaction for who.",
                                ],
                            },
                            Variant {
                                name: "MembersSwapped",
                                fields: [],
                                index: 2,
                                docs: [
                                    "Two members were swapped; see the transaction for who.",
                                ],
                            },
                            Variant {
                                name: "MembersReset",
                                fields: [],
                                index: 3,
                                docs: [
                                    "The membership was reset; see the transaction for who the new set is.",
                                ],
                            },
                            Variant {
                                name: "KeyChanged",
                                fields: [],
                                index: 4,
                                docs: [
                                    "One of the members' keys changed.",
                                ],
                            },
                            Variant {
                                name: "Dummy",
                                fields: [],
                                index: 5,
                                docs: [
                                    "Phantom member, never used.",
                                ],
                            },
                        ],
                    },
                ),
                docs: [
                    "The `Event` enum of this pallet",
                ],
            },
        },
        PortableType {
            id: 74,
            ty: Type {
                path: Path {
                    segments: [
                        "pallet_treasury",
                        "pallet",
                        "Event",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "T",
                        ty: None,
                    },
                    TypeParameter {
                        name: "I",
                        ty: None,
                    },
                ],
                type_def: Variant(
                    TypeDefVariant {
                        variants: [
                            Variant {
                                name: "Proposed",
                                fields: [
                                    Field {
                                        name: Some(
                                            "proposal_index",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 4,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "ProposalIndex",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 0,
                                docs: [
                                    "New proposal.",
                                ],
                            },
                            Variant {
                                name: "Spending",
                                fields: [
                                    Field {
                                        name: Some(
                                            "budget_remaining",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 6,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "BalanceOf<T, I>",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 1,
                                docs: [
                                    "We have ended a spend period and will now allocate funds.",
                                ],
                            },
                            Variant {
                                name: "Awarded",
                                fields: [
                                    Field {
                                        name: Some(
                                            "proposal_index",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 4,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "ProposalIndex",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "award",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 6,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "BalanceOf<T, I>",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "account",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 0,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "T::AccountId",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 2,
                                docs: [
                                    "Some funds have been allocated.",
                                ],
                            },
                            Variant {
                                name: "Rejected",
                                fields: [
                                    Field {
                                        name: Some(
                                            "proposal_index",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 4,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "ProposalIndex",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "slashed",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 6,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "BalanceOf<T, I>",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 3,
                                docs: [
                                    "A proposal was rejected; funds were slashed.",
                                ],
                            },
                            Variant {
                                name: "Burnt",
                                fields: [
                                    Field {
                                        name: Some(
                                            "burnt_funds",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 6,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "BalanceOf<T, I>",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 4,
                                docs: [
                                    "Some of our funds have been burnt.",
                                ],
                            },
                            Variant {
                                name: "Rollover",
                                fields: [
                                    Field {
                                        name: Some(
                                            "rollover_balance",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 6,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "BalanceOf<T, I>",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 5,
                                docs: [
                                    "Spending has finished; this is the amount that rolls over until next spend.",
                                ],
                            },
                            Variant {
                                name: "Deposit",
                                fields: [
                                    Field {
                                        name: Some(
                                            "value",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 6,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "BalanceOf<T, I>",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 6,
                                docs: [
                                    "Some funds have been deposited.",
                                ],
                            },
                            Variant {
                                name: "SpendApproved",
                                fields: [
                                    Field {
                                        name: Some(
                                            "proposal_index",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 4,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "ProposalIndex",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "amount",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 6,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "BalanceOf<T, I>",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "beneficiary",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 0,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "T::AccountId",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 7,
                                docs: [
                                    "A new spend proposal has been approved.",
                                ],
                            },
                            Variant {
                                name: "UpdatedInactive",
                                fields: [
                                    Field {
                                        name: Some(
                                            "reactivated",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 6,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "BalanceOf<T, I>",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "deactivated",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 6,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "BalanceOf<T, I>",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 8,
                                docs: [
                                    "The inactive funds of the pallet have been updated.",
                                ],
                            },
                        ],
                    },
                ),
                docs: [
                    "The `Event` enum of this pallet",
                ],
            },
        },
        PortableType {
            id: 75,
            ty: Type {
                path: Path {
                    segments: [
                        "pallet_conviction_voting",
                        "pallet",
                        "Event",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "T",
                        ty: None,
                    },
                    TypeParameter {
                        name: "I",
                        ty: None,
                    },
                ],
                type_def: Variant(
                    TypeDefVariant {
                        variants: [
                            Variant {
                                name: "Delegated",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 0,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "T::AccountId",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 0,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "T::AccountId",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 0,
                                docs: [
                                    "An account has delegated their vote to another account. \\[who, target\\]",
                                ],
                            },
                            Variant {
                                name: "Undelegated",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 0,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "T::AccountId",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 1,
                                docs: [
                                    "An \\[account\\] has cancelled a previous delegation operation.",
                                ],
                            },
                        ],
                    },
                ),
                docs: [
                    "The `Event` enum of this pallet",
                ],
            },
        },
        PortableType {
            id: 76,
            ty: Type {
                path: Path {
                    segments: [
                        "pallet_referenda",
                        "pallet",
                        "Event",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "T",
                        ty: None,
                    },
                    TypeParameter {
                        name: "I",
                        ty: None,
                    },
                ],
                type_def: Variant(
                    TypeDefVariant {
                        variants: [
                            Variant {
                                name: "Submitted",
                                fields: [
                                    Field {
                                        name: Some(
                                            "index",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 4,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "ReferendumIndex",
                                        ),
                                        docs: [
                                            "Index of the referendum.",
                                        ],
                                    },
                                    Field {
                                        name: Some(
                                            "track",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 77,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "TrackIdOf<T, I>",
                                        ),
                                        docs: [
                                            "The track (and by extension proposal dispatch origin) of this referendum.",
                                        ],
                                    },
                                    Field {
                                        name: Some(
                                            "proposal",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 78,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "BoundedCallOf<T, I>",
                                        ),
                                        docs: [
                                            "The proposal for the referendum.",
                                        ],
                                    },
                                ],
                                index: 0,
                                docs: [
                                    "A referendum has been submitted.",
                                ],
                            },
                            Variant {
                                name: "DecisionDepositPlaced",
                                fields: [
                                    Field {
                                        name: Some(
                                            "index",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 4,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "ReferendumIndex",
                                        ),
                                        docs: [
                                            "Index of the referendum.",
                                        ],
                                    },
                                    Field {
                                        name: Some(
                                            "who",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 0,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "T::AccountId",
                                        ),
                                        docs: [
                                            "The account who placed the deposit.",
                                        ],
                                    },
                                    Field {
                                        name: Some(
                                            "amount",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 6,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "BalanceOf<T, I>",
                                        ),
                                        docs: [
                                            "The amount placed by the account.",
                                        ],
                                    },
                                ],
                                index: 1,
                                docs: [
                                    "The decision deposit has been placed.",
                                ],
                            },
                            Variant {
                                name: "DecisionDepositRefunded",
                                fields: [
                                    Field {
                                        name: Some(
                                            "index",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 4,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "ReferendumIndex",
                                        ),
                                        docs: [
                                            "Index of the referendum.",
                                        ],
                                    },
                                    Field {
                                        name: Some(
                                            "who",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 0,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "T::AccountId",
                                        ),
                                        docs: [
                                            "The account who placed the deposit.",
                                        ],
                                    },
                                    Field {
                                        name: Some(
                                            "amount",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 6,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "BalanceOf<T, I>",
                                        ),
                                        docs: [
                                            "The amount placed by the account.",
                                        ],
                                    },
                                ],
                                index: 2,
                                docs: [
                                    "The decision deposit has been refunded.",
                                ],
                            },
                            Variant {
                                name: "DepositSlashed",
                                fields: [
                                    Field {
                                        name: Some(
                                            "who",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 0,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "T::AccountId",
                                        ),
                                        docs: [
                                            "The account who placed the deposit.",
                                        ],
                                    },
                                    Field {
                                        name: Some(
                                            "amount",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 6,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "BalanceOf<T, I>",
                                        ),
                                        docs: [
                                            "The amount placed by the account.",
                                        ],
                                    },
                                ],
                                index: 3,
                                docs: [
                                    "A deposit has been slashaed.",
                                ],
                            },
                            Variant {
                                name: "DecisionStarted",
                                fields: [
                                    Field {
                                        name: Some(
                                            "index",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 4,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "ReferendumIndex",
                                        ),
                                        docs: [
                                            "Index of the referendum.",
                                        ],
                                    },
                                    Field {
                                        name: Some(
                                            "track",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 77,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "TrackIdOf<T, I>",
                                        ),
                                        docs: [
                                            "The track (and by extension proposal dispatch origin) of this referendum.",
                                        ],
                                    },
                                    Field {
                                        name: Some(
                                            "proposal",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 78,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "BoundedCallOf<T, I>",
                                        ),
                                        docs: [
                                            "The proposal for the referendum.",
                                        ],
                                    },
                                    Field {
                                        name: Some(
                                            "tally",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 436,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "T::Tally",
                                        ),
                                        docs: [
                                            "The current tally of votes in this referendum.",
                                        ],
                                    },
                                ],
                                index: 4,
                                docs: [
                                    "A referendum has moved into the deciding phase.",
                                ],
                            },
                            Variant {
                                name: "ConfirmStarted",
                                fields: [
                                    Field {
                                        name: Some(
                                            "index",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 4,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "ReferendumIndex",
                                        ),
                                        docs: [
                                            "Index of the referendum.",
                                        ],
                                    },
                                ],
                                index: 5,
                                docs: [],
                            },
                            Variant {
                                name: "ConfirmAborted",
                                fields: [
                                    Field {
                                        name: Some(
                                            "index",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 4,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "ReferendumIndex",
                                        ),
                                        docs: [
                                            "Index of the referendum.",
                                        ],
                                    },
                                ],
                                index: 6,
                                docs: [],
                            },
                            Variant {
                                name: "Confirmed",
                                fields: [
                                    Field {
                                        name: Some(
                                            "index",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 4,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "ReferendumIndex",
                                        ),
                                        docs: [
                                            "Index of the referendum.",
                                        ],
                                    },
                                    Field {
                                        name: Some(
                                            "tally",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 436,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "T::Tally",
                                        ),
                                        docs: [
                                            "The final tally of votes in this referendum.",
                                        ],
                                    },
                                ],
                                index: 7,
                                docs: [
                                    "A referendum has ended its confirmation phase and is ready for approval.",
                                ],
                            },
                            Variant {
                                name: "Approved",
                                fields: [
                                    Field {
                                        name: Some(
                                            "index",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 4,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "ReferendumIndex",
                                        ),
                                        docs: [
                                            "Index of the referendum.",
                                        ],
                                    },
                                ],
                                index: 8,
                                docs: [
                                    "A referendum has been approved and its proposal has been scheduled.",
                                ],
                            },
                            Variant {
                                name: "Rejected",
                                fields: [
                                    Field {
                                        name: Some(
                                            "index",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 4,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "ReferendumIndex",
                                        ),
                                        docs: [
                                            "Index of the referendum.",
                                        ],
                                    },
                                    Field {
                                        name: Some(
                                            "tally",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 436,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "T::Tally",
                                        ),
                                        docs: [
                                            "The final tally of votes in this referendum.",
                                        ],
                                    },
                                ],
                                index: 9,
                                docs: [
                                    "A proposal has been rejected by referendum.",
                                ],
                            },
                            Variant {
                                name: "TimedOut",
                                fields: [
                                    Field {
                                        name: Some(
                                            "index",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 4,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "ReferendumIndex",
                                        ),
                                        docs: [
                                            "Index of the referendum.",
                                        ],
                                    },
                                    Field {
                                        name: Some(
                                            "tally",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 436,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "T::Tally",
                                        ),
                                        docs: [
                                            "The final tally of votes in this referendum.",
                                        ],
                                    },
                                ],
                                index: 10,
                                docs: [
                                    "A referendum has been timed out without being decided.",
                                ],
                            },
                            Variant {
                                name: "Cancelled",
                                fields: [
                                    Field {
                                        name: Some(
                                            "index",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 4,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "ReferendumIndex",
                                        ),
                                        docs: [
                                            "Index of the referendum.",
                                        ],
                                    },
                                    Field {
                                        name: Some(
                                            "tally",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 436,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "T::Tally",
                                        ),
                                        docs: [
                                            "The final tally of votes in this referendum.",
                                        ],
                                    },
                                ],
                                index: 11,
                                docs: [
                                    "A referendum has been cancelled.",
                                ],
                            },
                            Variant {
                                name: "Killed",
                                fields: [
                                    Field {
                                        name: Some(
                                            "index",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 4,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "ReferendumIndex",
                                        ),
                                        docs: [
                                            "Index of the referendum.",
                                        ],
                                    },
                                    Field {
                                        name: Some(
                                            "tally",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 436,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "T::Tally",
                                        ),
                                        docs: [
                                            "The final tally of votes in this referendum.",
                                        ],
                                    },
                                ],
                                index: 12,
                                docs: [
                                    "A referendum has been killed.",
                                ],
                            },
                            Variant {
                                name: "SubmissionDepositRefunded",
                                fields: [
                                    Field {
                                        name: Some(
                                            "index",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 4,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "ReferendumIndex",
                                        ),
                                        docs: [
                                            "Index of the referendum.",
                                        ],
                                    },
                                    Field {
                                        name: Some(
                                            "who",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 0,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "T::AccountId",
                                        ),
                                        docs: [
                                            "The account who placed the deposit.",
                                        ],
                                    },
                                    Field {
                                        name: Some(
                                            "amount",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 6,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "BalanceOf<T, I>",
                                        ),
                                        docs: [
                                            "The amount placed by the account.",
                                        ],
                                    },
                                ],
                                index: 13,
                                docs: [
                                    "The submission deposit has been refunded.",
                                ],
                            },
                            Variant {
                                name: "MetadataSet",
                                fields: [
                                    Field {
                                        name: Some(
                                            "index",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 4,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "ReferendumIndex",
                                        ),
                                        docs: [
                                            "Index of the referendum.",
                                        ],
                                    },
                                    Field {
                                        name: Some(
                                            "hash",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 12,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "PreimageHash",
                                        ),
                                        docs: [
                                            "Preimage hash.",
                                        ],
                                    },
                                ],
                                index: 14,
                                docs: [
                                    "Metadata for a referendum has been set.",
                                ],
                            },
                            Variant {
                                name: "MetadataCleared",
                                fields: [
                                    Field {
                                        name: Some(
                                            "index",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 4,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "ReferendumIndex",
                                        ),
                                        docs: [
                                            "Index of the referendum.",
                                        ],
                                    },
                                    Field {
                                        name: Some(
                                            "hash",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 12,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "PreimageHash",
                                        ),
                                        docs: [
                                            "Preimage hash.",
                                        ],
                                    },
                                ],
                                index: 15,
                                docs: [
                                    "Metadata for a referendum has been cleared.",
                                ],
                            },
                        ],
                    },
                ),
                docs: [
                    "The `Event` enum of this pallet",
                ],
            },
        },
        PortableType {
            id: 77,
            ty: Type {
                path: Path {
                    segments: [],
                },
                type_params: [],
                type_def: Primitive(
                    U16,
                ),
                docs: [],
            },
        },
        PortableType {
            id: 78,
            ty: Type {
                path: Path {
                    segments: [
                        "frame_support",
                        "traits",
                        "preimages",
                        "Bounded",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "T",
                        ty: Some(
                            UntrackedSymbol {
                                id: 79,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ),
                    },
                ],
                type_def: Variant(
                    TypeDefVariant {
                        variants: [
                            Variant {
                                name: "Legacy",
                                fields: [
                                    Field {
                                        name: Some(
                                            "hash",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 12,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "Hash",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 0,
                                docs: [],
                            },
                            Variant {
                                name: "Inline",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 435,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "BoundedInline",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 1,
                                docs: [],
                            },
                            Variant {
                                name: "Lookup",
                                fields: [
                                    Field {
                                        name: Some(
                                            "hash",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 12,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "Hash",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "len",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 4,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "u32",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 2,
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 79,
            ty: Type {
                path: Path {
                    segments: [
                        "polkadot_runtime",
                        "RuntimeCall",
                    ],
                },
                type_params: [],
                type_def: Variant(
                    TypeDefVariant {
                        variants: [
                            Variant {
                                name: "System",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 80,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<System, Runtime>",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 0,
                                docs: [],
                            },
                            Variant {
                                name: "Scheduler",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 84,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<Scheduler, Runtime>",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 1,
                                docs: [],
                            },
                            Variant {
                                name: "Preimage",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 86,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<Preimage, Runtime>",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 10,
                                docs: [],
                            },
                            Variant {
                                name: "Babe",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 87,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<Babe, Runtime>",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 2,
                                docs: [],
                            },
                            Variant {
                                name: "Timestamp",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 98,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<Timestamp, Runtime>",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 3,
                                docs: [],
                            },
                            Variant {
                                name: "Indices",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 99,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<Indices, Runtime>",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 4,
                                docs: [],
                            },
                            Variant {
                                name: "Balances",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 103,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<Balances, Runtime>",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 5,
                                docs: [],
                            },
                            Variant {
                                name: "Staking",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 105,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<Staking, Runtime>",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 7,
                                docs: [],
                            },
                            Variant {
                                name: "Session",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 114,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<Session, Runtime>",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 9,
                                docs: [],
                            },
                            Variant {
                                name: "Grandpa",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 119,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<Grandpa, Runtime>",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 11,
                                docs: [],
                            },
                            Variant {
                                name: "ImOnline",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 131,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<ImOnline, Runtime>",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 12,
                                docs: [],
                            },
                            Variant {
                                name: "Democracy",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 135,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<Democracy, Runtime>",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 14,
                                docs: [],
                            },
                            Variant {
                                name: "Council",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 139,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<Council, Runtime>",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 15,
                                docs: [],
                            },
                            Variant {
                                name: "TechnicalCommittee",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 141,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<TechnicalCommittee, Runtime>",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 16,
                                docs: [],
                            },
                            Variant {
                                name: "PhragmenElection",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 142,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<PhragmenElection, Runtime>",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 17,
                                docs: [],
                            },
                            Variant {
                                name: "TechnicalMembership",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 144,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<TechnicalMembership, Runtime>",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 18,
                                docs: [],
                            },
                            Variant {
                                name: "Treasury",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 145,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<Treasury, Runtime>",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 19,
                                docs: [],
                            },
                            Variant {
                                name: "ConvictionVoting",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 146,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<ConvictionVoting, Runtime>",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 20,
                                docs: [],
                            },
                            Variant {
                                name: "Referenda",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 151,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<Referenda, Runtime>",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 21,
                                docs: [],
                            },
                            Variant {
                                name: "Whitelist",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 169,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<Whitelist, Runtime>",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 23,
                                docs: [],
                            },
                            Variant {
                                name: "Claims",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 170,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<Claims, Runtime>",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 24,
                                docs: [],
                            },
                            Variant {
                                name: "Vesting",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 178,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<Vesting, Runtime>",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 25,
                                docs: [],
                            },
                            Variant {
                                name: "Utility",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 180,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<Utility, Runtime>",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 26,
                                docs: [],
                            },
                            Variant {
                                name: "Identity",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 182,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<Identity, Runtime>",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 28,
                                docs: [],
                            },
                            Variant {
                                name: "Proxy",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 223,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<Proxy, Runtime>",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 29,
                                docs: [],
                            },
                            Variant {
                                name: "Multisig",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 226,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<Multisig, Runtime>",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 30,
                                docs: [],
                            },
                            Variant {
                                name: "Bounties",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 229,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<Bounties, Runtime>",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 34,
                                docs: [],
                            },
                            Variant {
                                name: "ChildBounties",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 230,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<ChildBounties, Runtime>",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 38,
                                docs: [],
                            },
                            Variant {
                                name: "Tips",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 231,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<Tips, Runtime>",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 35,
                                docs: [],
                            },
                            Variant {
                                name: "ElectionProviderMultiPhase",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 232,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<ElectionProviderMultiPhase, Runtime>",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 36,
                                docs: [],
                            },
                            Variant {
                                name: "VoterList",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 291,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<VoterList, Runtime>",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 37,
                                docs: [],
                            },
                            Variant {
                                name: "NominationPools",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 292,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<NominationPools, Runtime>",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 39,
                                docs: [],
                            },
                            Variant {
                                name: "FastUnstake",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 303,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<FastUnstake, Runtime>",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 40,
                                docs: [],
                            },
                            Variant {
                                name: "Configuration",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 304,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<Configuration, Runtime>",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 51,
                                docs: [],
                            },
                            Variant {
                                name: "ParasShared",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 311,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<ParasShared, Runtime>",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 52,
                                docs: [],
                            },
                            Variant {
                                name: "ParaInclusion",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 312,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<ParaInclusion, Runtime>",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 53,
                                docs: [],
                            },
                            Variant {
                                name: "ParaInherent",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 313,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<ParaInherent, Runtime>",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 54,
                                docs: [],
                            },
                            Variant {
                                name: "Paras",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 347,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<Paras, Runtime>",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 56,
                                docs: [],
                            },
                            Variant {
                                name: "Initializer",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 349,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<Initializer, Runtime>",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 57,
                                docs: [],
                            },
                            Variant {
                                name: "Hrmp",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 350,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<Hrmp, Runtime>",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 60,
                                docs: [],
                            },
                            Variant {
                                name: "ParasDisputes",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 352,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<ParasDisputes, Runtime>",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 62,
                                docs: [],
                            },
                            Variant {
                                name: "ParasSlashing",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 353,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<ParasSlashing, Runtime>",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 63,
                                docs: [],
                            },
                            Variant {
                                name: "Registrar",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 357,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<Registrar, Runtime>",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 70,
                                docs: [],
                            },
                            Variant {
                                name: "Slots",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 358,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<Slots, Runtime>",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 71,
                                docs: [],
                            },
                            Variant {
                                name: "Auctions",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 359,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<Auctions, Runtime>",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 72,
                                docs: [],
                            },
                            Variant {
                                name: "Crowdloan",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 361,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<Crowdloan, Runtime>",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 73,
                                docs: [],
                            },
                            Variant {
                                name: "XcmPallet",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 369,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<XcmPallet, Runtime>",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 99,
                                docs: [],
                            },
                            Variant {
                                name: "MessageQueue",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 432,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<MessageQueue, Runtime>",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 100,
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 80,
            ty: Type {
                path: Path {
                    segments: [
                        "frame_system",
                        "pallet",
                        "Call",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "T",
                        ty: None,
                    },
                ],
                type_def: Variant(
                    TypeDefVariant {
                        variants: [
                            Variant {
                                name: "remark",
                                fields: [
                                    Field {
                                        name: Some(
                                            "remark",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 13,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "Vec<u8>",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 0,
                                docs: [
                                    "See [`Pallet::remark`].",
                                ],
                            },
                            Variant {
                                name: "set_heap_pages",
                                fields: [
                                    Field {
                                        name: Some(
                                            "pages",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 11,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "u64",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 1,
                                docs: [
                                    "See [`Pallet::set_heap_pages`].",
                                ],
                            },
                            Variant {
                                name: "set_code",
                                fields: [
                                    Field {
                                        name: Some(
                                            "code",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 13,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "Vec<u8>",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 2,
                                docs: [
                                    "See [`Pallet::set_code`].",
                                ],
                            },
                            Variant {
                                name: "set_code_without_checks",
                                fields: [
                                    Field {
                                        name: Some(
                                            "code",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 13,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "Vec<u8>",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 3,
                                docs: [
                                    "See [`Pallet::set_code_without_checks`].",
                                ],
                            },
                            Variant {
                                name: "set_storage",
                                fields: [
                                    Field {
                                        name: Some(
                                            "items",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 81,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "Vec<KeyValue>",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 4,
                                docs: [
                                    "See [`Pallet::set_storage`].",
                                ],
                            },
                            Variant {
                                name: "kill_storage",
                                fields: [
                                    Field {
                                        name: Some(
                                            "keys",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 83,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "Vec<Key>",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 5,
                                docs: [
                                    "See [`Pallet::kill_storage`].",
                                ],
                            },
                            Variant {
                                name: "kill_prefix",
                                fields: [
                                    Field {
                                        name: Some(
                                            "prefix",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 13,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "Key",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "subkeys",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 4,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "u32",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 6,
                                docs: [
                                    "See [`Pallet::kill_prefix`].",
                                ],
                            },
                            Variant {
                                name: "remark_with_event",
                                fields: [
                                    Field {
                                        name: Some(
                                            "remark",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 13,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "Vec<u8>",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 7,
                                docs: [
                                    "See [`Pallet::remark_with_event`].",
                                ],
                            },
                        ],
                    },
                ),
                docs: [
                    "Contains a variant per dispatchable extrinsic that this pallet has.",
                ],
            },
        },
        PortableType {
            id: 81,
            ty: Type {
                path: Path {
                    segments: [],
                },
                type_params: [],
                type_def: Sequence(
                    TypeDefSequence {
                        type_param: UntrackedSymbol {
                            id: 82,
                            marker: PhantomData<fn() -> core::any::TypeId>,
                        },
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 82,
            ty: Type {
                path: Path {
                    segments: [],
                },
                type_params: [],
                type_def: Tuple(
                    TypeDefTuple {
                        fields: [
                            UntrackedSymbol {
                                id: 13,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                            UntrackedSymbol {
                                id: 13,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 83,
            ty: Type {
                path: Path {
                    segments: [],
                },
                type_params: [],
                type_def: Sequence(
                    TypeDefSequence {
                        type_param: UntrackedSymbol {
                            id: 13,
                            marker: PhantomData<fn() -> core::any::TypeId>,
                        },
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 84,
            ty: Type {
                path: Path {
                    segments: [
                        "pallet_scheduler",
                        "pallet",
                        "Call",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "T",
                        ty: None,
                    },
                ],
                type_def: Variant(
                    TypeDefVariant {
                        variants: [
                            Variant {
                                name: "schedule",
                                fields: [
                                    Field {
                                        name: Some(
                                            "when",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 4,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "T::BlockNumber",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "maybe_periodic",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 85,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "Option<schedule::Period<T::BlockNumber>>",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "priority",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 2,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "schedule::Priority",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "call",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 79,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "Box<<T as Config>::RuntimeCall>",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 0,
                                docs: [
                                    "See [`Pallet::schedule`].",
                                ],
                            },
                            Variant {
                                name: "cancel",
                                fields: [
                                    Field {
                                        name: Some(
                                            "when",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 4,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "T::BlockNumber",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "index",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 4,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "u32",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 1,
                                docs: [
                                    "See [`Pallet::cancel`].",
                                ],
                            },
                            Variant {
                                name: "schedule_named",
                                fields: [
                                    Field {
                                        name: Some(
                                            "id",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 1,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "TaskName",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "when",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 4,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "T::BlockNumber",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "maybe_periodic",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 85,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "Option<schedule::Period<T::BlockNumber>>",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "priority",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 2,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "schedule::Priority",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "call",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 79,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "Box<<T as Config>::RuntimeCall>",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 2,
                                docs: [
                                    "See [`Pallet::schedule_named`].",
                                ],
                            },
                            Variant {
                                name: "cancel_named",
                                fields: [
                                    Field {
                                        name: Some(
                                            "id",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 1,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "TaskName",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 3,
                                docs: [
                                    "See [`Pallet::cancel_named`].",
                                ],
                            },
                            Variant {
                                name: "schedule_after",
                                fields: [
                                    Field {
                                        name: Some(
                                            "after",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 4,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "T::BlockNumber",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "maybe_periodic",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 85,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "Option<schedule::Period<T::BlockNumber>>",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "priority",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 2,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "schedule::Priority",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "call",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 79,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "Box<<T as Config>::RuntimeCall>",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 4,
                                docs: [
                                    "See [`Pallet::schedule_after`].",
                                ],
                            },
                            Variant {
                                name: "schedule_named_after",
                                fields: [
                                    Field {
                                        name: Some(
                                            "id",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 1,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "TaskName",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "after",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 4,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "T::BlockNumber",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "maybe_periodic",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 85,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "Option<schedule::Period<T::BlockNumber>>",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "priority",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 2,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "schedule::Priority",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "call",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 79,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "Box<<T as Config>::RuntimeCall>",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 5,
                                docs: [
                                    "See [`Pallet::schedule_named_after`].",
                                ],
                            },
                        ],
                    },
                ),
                docs: [
                    "Contains a variant per dispatchable extrinsic that this pallet has.",
                ],
            },
        },
        PortableType {
            id: 85,
            ty: Type {
                path: Path {
                    segments: [
                        "Option",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "T",
                        ty: Some(
                            UntrackedSymbol {
                                id: 31,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ),
                    },
                ],
                type_def: Variant(
                    TypeDefVariant {
                        variants: [
                            Variant {
                                name: "None",
                                fields: [],
                                index: 0,
                                docs: [],
                            },
                            Variant {
                                name: "Some",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 31,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: None,
                                        docs: [],
                                    },
                                ],
                                index: 1,
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 86,
            ty: Type {
                path: Path {
                    segments: [
                        "pallet_preimage",
                        "pallet",
                        "Call",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "T",
                        ty: None,
                    },
                ],
                type_def: Variant(
                    TypeDefVariant {
                        variants: [
                            Variant {
                                name: "note_preimage",
                                fields: [
                                    Field {
                                        name: Some(
                                            "bytes",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 13,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "Vec<u8>",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 0,
                                docs: [
                                    "See [`Pallet::note_preimage`].",
                                ],
                            },
                            Variant {
                                name: "unnote_preimage",
                                fields: [
                                    Field {
                                        name: Some(
                                            "hash",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 12,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "T::Hash",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 1,
                                docs: [
                                    "See [`Pallet::unnote_preimage`].",
                                ],
                            },
                            Variant {
                                name: "request_preimage",
                                fields: [
                                    Field {
                                        name: Some(
                                            "hash",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 12,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "T::Hash",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 2,
                                docs: [
                                    "See [`Pallet::request_preimage`].",
                                ],
                            },
                            Variant {
                                name: "unrequest_preimage",
                                fields: [
                                    Field {
                                        name: Some(
                                            "hash",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 12,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "T::Hash",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 3,
                                docs: [
                                    "See [`Pallet::unrequest_preimage`].",
                                ],
                            },
                        ],
                    },
                ),
                docs: [
                    "Contains a variant per dispatchable extrinsic that this pallet has.",
                ],
            },
        },
        PortableType {
            id: 87,
            ty: Type {
                path: Path {
                    segments: [
                        "pallet_babe",
                        "pallet",
                        "Call",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "T",
                        ty: None,
                    },
                ],
                type_def: Variant(
                    TypeDefVariant {
                        variants: [
                            Variant {
                                name: "report_equivocation",
                                fields: [
                                    Field {
                                        name: Some(
                                            "equivocation_proof",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 88,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "Box<EquivocationProof<T::Header>>",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "key_owner_proof",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 94,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "T::KeyOwnerProof",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 0,
                                docs: [
                                    "See [`Pallet::report_equivocation`].",
                                ],
                            },
                            Variant {
                                name: "report_equivocation_unsigned",
                                fields: [
                                    Field {
                                        name: Some(
                                            "equivocation_proof",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 88,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "Box<EquivocationProof<T::Header>>",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "key_owner_proof",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 94,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "T::KeyOwnerProof",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 1,
                                docs: [
                                    "See [`Pallet::report_equivocation_unsigned`].",
                                ],
                            },
                            Variant {
                                name: "plan_config_change",
                                fields: [
                                    Field {
                                        name: Some(
                                            "config",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 95,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "NextConfigDescriptor",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 2,
                                docs: [
                                    "See [`Pallet::plan_config_change`].",
                                ],
                            },
                        ],
                    },
                ),
                docs: [
                    "Contains a variant per dispatchable extrinsic that this pallet has.",
                ],
            },
        },
        PortableType {
            id: 88,
            ty: Type {
                path: Path {
                    segments: [
                        "sp_consensus_slots",
                        "EquivocationProof",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "Header",
                        ty: Some(
                            UntrackedSymbol {
                                id: 89,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ),
                    },
                    TypeParameter {
                        name: "Id",
                        ty: Some(
                            UntrackedSymbol {
                                id: 92,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ),
                    },
                ],
                type_def: Composite(
                    TypeDefComposite {
                        fields: [
                            Field {
                                name: Some(
                                    "offender",
                                ),
                                ty: UntrackedSymbol {
                                    id: 92,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "Id",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "slot",
                                ),
                                ty: UntrackedSymbol {
                                    id: 93,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "Slot",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "first_header",
                                ),
                                ty: UntrackedSymbol {
                                    id: 89,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "Header",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "second_header",
                                ),
                                ty: UntrackedSymbol {
                                    id: 89,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "Header",
                                ),
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 89,
            ty: Type {
                path: Path {
                    segments: [
                        "sp_runtime",
                        "generic",
                        "header",
                        "Header",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "Number",
                        ty: Some(
                            UntrackedSymbol {
                                id: 4,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ),
                    },
                    TypeParameter {
                        name: "Hash",
                        ty: Some(
                            UntrackedSymbol {
                                id: 90,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ),
                    },
                ],
                type_def: Composite(
                    TypeDefComposite {
                        fields: [
                            Field {
                                name: Some(
                                    "parent_hash",
                                ),
                                ty: UntrackedSymbol {
                                    id: 12,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "Hash::Output",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "number",
                                ),
                                ty: UntrackedSymbol {
                                    id: 91,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "Number",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "state_root",
                                ),
                                ty: UntrackedSymbol {
                                    id: 12,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "Hash::Output",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "extrinsics_root",
                                ),
                                ty: UntrackedSymbol {
                                    id: 12,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "Hash::Output",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "digest",
                                ),
                                ty: UntrackedSymbol {
                                    id: 14,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "Digest",
                                ),
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 90,
            ty: Type {
                path: Path {
                    segments: [
                        "sp_runtime",
                        "traits",
                        "BlakeTwo256",
                    ],
                },
                type_params: [],
                type_def: Composite(
                    TypeDefComposite {
                        fields: [],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 91,
            ty: Type {
                path: Path {
                    segments: [],
                },
                type_params: [],
                type_def: Compact(
                    TypeDefCompact {
                        type_param: UntrackedSymbol {
                            id: 4,
                            marker: PhantomData<fn() -> core::any::TypeId>,
                        },
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 92,
            ty: Type {
                path: Path {
                    segments: [
                        "sp_consensus_babe",
                        "app",
                        "Public",
                    ],
                },
                type_params: [],
                type_def: Composite(
                    TypeDefComposite {
                        fields: [
                            Field {
                                name: None,
                                ty: UntrackedSymbol {
                                    id: 56,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "sr25519::Public",
                                ),
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 93,
            ty: Type {
                path: Path {
                    segments: [
                        "sp_consensus_slots",
                        "Slot",
                    ],
                },
                type_params: [],
                type_def: Composite(
                    TypeDefComposite {
                        fields: [
                            Field {
                                name: None,
                                ty: UntrackedSymbol {
                                    id: 11,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "u64",
                                ),
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 94,
            ty: Type {
                path: Path {
                    segments: [
                        "sp_session",
                        "MembershipProof",
                    ],
                },
                type_params: [],
                type_def: Composite(
                    TypeDefComposite {
                        fields: [
                            Field {
                                name: Some(
                                    "session",
                                ),
                                ty: UntrackedSymbol {
                                    id: 4,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "SessionIndex",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "trie_nodes",
                                ),
                                ty: UntrackedSymbol {
                                    id: 83,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "Vec<Vec<u8>>",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "validator_count",
                                ),
                                ty: UntrackedSymbol {
                                    id: 4,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "ValidatorCount",
                                ),
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 95,
            ty: Type {
                path: Path {
                    segments: [
                        "sp_consensus_babe",
                        "digests",
                        "NextConfigDescriptor",
                    ],
                },
                type_params: [],
                type_def: Variant(
                    TypeDefVariant {
                        variants: [
                            Variant {
                                name: "V1",
                                fields: [
                                    Field {
                                        name: Some(
                                            "c",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 96,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "(u64, u64)",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "allowed_slots",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 97,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "AllowedSlots",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 1,
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 96,
            ty: Type {
                path: Path {
                    segments: [],
                },
                type_params: [],
                type_def: Tuple(
                    TypeDefTuple {
                        fields: [
                            UntrackedSymbol {
                                id: 11,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                            UntrackedSymbol {
                                id: 11,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 97,
            ty: Type {
                path: Path {
                    segments: [
                        "sp_consensus_babe",
                        "AllowedSlots",
                    ],
                },
                type_params: [],
                type_def: Variant(
                    TypeDefVariant {
                        variants: [
                            Variant {
                                name: "PrimarySlots",
                                fields: [],
                                index: 0,
                                docs: [],
                            },
                            Variant {
                                name: "PrimaryAndSecondaryPlainSlots",
                                fields: [],
                                index: 1,
                                docs: [],
                            },
                            Variant {
                                name: "PrimaryAndSecondaryVRFSlots",
                                fields: [],
                                index: 2,
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 98,
            ty: Type {
                path: Path {
                    segments: [
                        "pallet_timestamp",
                        "pallet",
                        "Call",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "T",
                        ty: None,
                    },
                ],
                type_def: Variant(
                    TypeDefVariant {
                        variants: [
                            Variant {
                                name: "set",
                                fields: [
                                    Field {
                                        name: Some(
                                            "now",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 10,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "T::Moment",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 0,
                                docs: [
                                    "See [`Pallet::set`].",
                                ],
                            },
                        ],
                    },
                ),
                docs: [
                    "Contains a variant per dispatchable extrinsic that this pallet has.",
                ],
            },
        },
        PortableType {
            id: 99,
            ty: Type {
                path: Path {
                    segments: [
                        "pallet_indices",
                        "pallet",
                        "Call",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "T",
                        ty: None,
                    },
                ],
                type_def: Variant(
                    TypeDefVariant {
                        variants: [
                            Variant {
                                name: "claim",
                                fields: [
                                    Field {
                                        name: Some(
                                            "index",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 4,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "T::AccountIndex",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 0,
                                docs: [
                                    "See [`Pallet::claim`].",
                                ],
                            },
                            Variant {
                                name: "transfer",
                                fields: [
                                    Field {
                                        name: Some(
                                            "new",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 100,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "AccountIdLookupOf<T>",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "index",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 4,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "T::AccountIndex",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 1,
                                docs: [
                                    "See [`Pallet::transfer`].",
                                ],
                            },
                            Variant {
                                name: "free",
                                fields: [
                                    Field {
                                        name: Some(
                                            "index",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 4,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "T::AccountIndex",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 2,
                                docs: [
                                    "See [`Pallet::free`].",
                                ],
                            },
                            Variant {
                                name: "force_transfer",
                                fields: [
                                    Field {
                                        name: Some(
                                            "new",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 100,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "AccountIdLookupOf<T>",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "index",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 4,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "T::AccountIndex",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "freeze",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 44,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "bool",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 3,
                                docs: [
                                    "See [`Pallet::force_transfer`].",
                                ],
                            },
                            Variant {
                                name: "freeze",
                                fields: [
                                    Field {
                                        name: Some(
                                            "index",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 4,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "T::AccountIndex",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 4,
                                docs: [
                                    "See [`Pallet::freeze`].",
                                ],
                            },
                        ],
                    },
                ),
                docs: [
                    "Contains a variant per dispatchable extrinsic that this pallet has.",
                ],
            },
        },
        PortableType {
            id: 100,
            ty: Type {
                path: Path {
                    segments: [
                        "sp_runtime",
                        "multiaddress",
                        "MultiAddress",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "AccountId",
                        ty: Some(
                            UntrackedSymbol {
                                id: 0,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ),
                    },
                    TypeParameter {
                        name: "AccountIndex",
                        ty: Some(
                            UntrackedSymbol {
                                id: 34,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ),
                    },
                ],
                type_def: Variant(
                    TypeDefVariant {
                        variants: [
                            Variant {
                                name: "Id",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 0,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "AccountId",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 0,
                                docs: [],
                            },
                            Variant {
                                name: "Index",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 101,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "AccountIndex",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 1,
                                docs: [],
                            },
                            Variant {
                                name: "Raw",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 13,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "Vec<u8>",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 2,
                                docs: [],
                            },
                            Variant {
                                name: "Address32",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 1,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "[u8; 32]",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 3,
                                docs: [],
                            },
                            Variant {
                                name: "Address20",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 102,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "[u8; 20]",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 4,
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 101,
            ty: Type {
                path: Path {
                    segments: [],
                },
                type_params: [],
                type_def: Compact(
                    TypeDefCompact {
                        type_param: UntrackedSymbol {
                            id: 34,
                            marker: PhantomData<fn() -> core::any::TypeId>,
                        },
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 102,
            ty: Type {
                path: Path {
                    segments: [],
                },
                type_params: [],
                type_def: Array(
                    TypeDefArray {
                        len: 20,
                        type_param: UntrackedSymbol {
                            id: 2,
                            marker: PhantomData<fn() -> core::any::TypeId>,
                        },
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 103,
            ty: Type {
                path: Path {
                    segments: [
                        "pallet_balances",
                        "pallet",
                        "Call",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "T",
                        ty: None,
                    },
                    TypeParameter {
                        name: "I",
                        ty: None,
                    },
                ],
                type_def: Variant(
                    TypeDefVariant {
                        variants: [
                            Variant {
                                name: "transfer_allow_death",
                                fields: [
                                    Field {
                                        name: Some(
                                            "dest",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 100,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "AccountIdLookupOf<T>",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "value",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 60,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "T::Balance",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 0,
                                docs: [
                                    "See [`Pallet::transfer_allow_death`].",
                                ],
                            },
                            Variant {
                                name: "set_balance_deprecated",
                                fields: [
                                    Field {
                                        name: Some(
                                            "who",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 100,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "AccountIdLookupOf<T>",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "new_free",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 60,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "T::Balance",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "old_reserved",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 60,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "T::Balance",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 1,
                                docs: [
                                    "See [`Pallet::set_balance_deprecated`].",
                                ],
                            },
                            Variant {
                                name: "force_transfer",
                                fields: [
                                    Field {
                                        name: Some(
                                            "source",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 100,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "AccountIdLookupOf<T>",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "dest",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 100,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "AccountIdLookupOf<T>",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "value",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 60,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "T::Balance",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 2,
                                docs: [
                                    "See [`Pallet::force_transfer`].",
                                ],
                            },
                            Variant {
                                name: "transfer_keep_alive",
                                fields: [
                                    Field {
                                        name: Some(
                                            "dest",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 100,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "AccountIdLookupOf<T>",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "value",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 60,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "T::Balance",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 3,
                                docs: [
                                    "See [`Pallet::transfer_keep_alive`].",
                                ],
                            },
                            Variant {
                                name: "transfer_all",
                                fields: [
                                    Field {
                                        name: Some(
                                            "dest",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 100,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "AccountIdLookupOf<T>",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "keep_alive",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 44,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "bool",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 4,
                                docs: [
                                    "See [`Pallet::transfer_all`].",
                                ],
                            },
                            Variant {
                                name: "force_unreserve",
                                fields: [
                                    Field {
                                        name: Some(
                                            "who",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 100,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "AccountIdLookupOf<T>",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "amount",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 6,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "T::Balance",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 5,
                                docs: [
                                    "See [`Pallet::force_unreserve`].",
                                ],
                            },
                            Variant {
                                name: "upgrade_accounts",
                                fields: [
                                    Field {
                                        name: Some(
                                            "who",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 104,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "Vec<T::AccountId>",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 6,
                                docs: [
                                    "See [`Pallet::upgrade_accounts`].",
                                ],
                            },
                            Variant {
                                name: "transfer",
                                fields: [
                                    Field {
                                        name: Some(
                                            "dest",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 100,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "AccountIdLookupOf<T>",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "value",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 60,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "T::Balance",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 7,
                                docs: [
                                    "See [`Pallet::transfer`].",
                                ],
                            },
                            Variant {
                                name: "force_set_balance",
                                fields: [
                                    Field {
                                        name: Some(
                                            "who",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 100,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "AccountIdLookupOf<T>",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "new_free",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 60,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "T::Balance",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 8,
                                docs: [
                                    "See [`Pallet::force_set_balance`].",
                                ],
                            },
                        ],
                    },
                ),
                docs: [
                    "Contains a variant per dispatchable extrinsic that this pallet has.",
                ],
            },
        },
        PortableType {
            id: 104,
            ty: Type {
                path: Path {
                    segments: [],
                },
                type_params: [],
                type_def: Sequence(
                    TypeDefSequence {
                        type_param: UntrackedSymbol {
                            id: 0,
                            marker: PhantomData<fn() -> core::any::TypeId>,
                        },
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 105,
            ty: Type {
                path: Path {
                    segments: [
                        "pallet_staking",
                        "pallet",
                        "pallet",
                        "Call",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "T",
                        ty: None,
                    },
                ],
                type_def: Variant(
                    TypeDefVariant {
                        variants: [
                            Variant {
                                name: "bond",
                                fields: [
                                    Field {
                                        name: Some(
                                            "value",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 60,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "BalanceOf<T>",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "payee",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 106,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "RewardDestination<T::AccountId>",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 0,
                                docs: [
                                    "See [`Pallet::bond`].",
                                ],
                            },
                            Variant {
                                name: "bond_extra",
                                fields: [
                                    Field {
                                        name: Some(
                                            "max_additional",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 60,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "BalanceOf<T>",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 1,
                                docs: [
                                    "See [`Pallet::bond_extra`].",
                                ],
                            },
                            Variant {
                                name: "unbond",
                                fields: [
                                    Field {
                                        name: Some(
                                            "value",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 60,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "BalanceOf<T>",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 2,
                                docs: [
                                    "See [`Pallet::unbond`].",
                                ],
                            },
                            Variant {
                                name: "withdraw_unbonded",
                                fields: [
                                    Field {
                                        name: Some(
                                            "num_slashing_spans",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 4,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "u32",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 3,
                                docs: [
                                    "See [`Pallet::withdraw_unbonded`].",
                                ],
                            },
                            Variant {
                                name: "validate",
                                fields: [
                                    Field {
                                        name: Some(
                                            "prefs",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 42,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "ValidatorPrefs",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 4,
                                docs: [
                                    "See [`Pallet::validate`].",
                                ],
                            },
                            Variant {
                                name: "nominate",
                                fields: [
                                    Field {
                                        name: Some(
                                            "targets",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 107,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "Vec<AccountIdLookupOf<T>>",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 5,
                                docs: [
                                    "See [`Pallet::nominate`].",
                                ],
                            },
                            Variant {
                                name: "chill",
                                fields: [],
                                index: 6,
                                docs: [
                                    "See [`Pallet::chill`].",
                                ],
                            },
                            Variant {
                                name: "set_payee",
                                fields: [
                                    Field {
                                        name: Some(
                                            "payee",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 106,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "RewardDestination<T::AccountId>",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 7,
                                docs: [
                                    "See [`Pallet::set_payee`].",
                                ],
                            },
                            Variant {
                                name: "set_controller",
                                fields: [],
                                index: 8,
                                docs: [
                                    "See [`Pallet::set_controller`].",
                                ],
                            },
                            Variant {
                                name: "set_validator_count",
                                fields: [
                                    Field {
                                        name: Some(
                                            "new",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 91,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "u32",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 9,
                                docs: [
                                    "See [`Pallet::set_validator_count`].",
                                ],
                            },
                            Variant {
                                name: "increase_validator_count",
                                fields: [
                                    Field {
                                        name: Some(
                                            "additional",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 91,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "u32",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 10,
                                docs: [
                                    "See [`Pallet::increase_validator_count`].",
                                ],
                            },
                            Variant {
                                name: "scale_validator_count",
                                fields: [
                                    Field {
                                        name: Some(
                                            "factor",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 108,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "Percent",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 11,
                                docs: [
                                    "See [`Pallet::scale_validator_count`].",
                                ],
                            },
                            Variant {
                                name: "force_no_eras",
                                fields: [],
                                index: 12,
                                docs: [
                                    "See [`Pallet::force_no_eras`].",
                                ],
                            },
                            Variant {
                                name: "force_new_era",
                                fields: [],
                                index: 13,
                                docs: [
                                    "See [`Pallet::force_new_era`].",
                                ],
                            },
                            Variant {
                                name: "set_invulnerables",
                                fields: [
                                    Field {
                                        name: Some(
                                            "invulnerables",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 104,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "Vec<T::AccountId>",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 14,
                                docs: [
                                    "See [`Pallet::set_invulnerables`].",
                                ],
                            },
                            Variant {
                                name: "force_unstake",
                                fields: [
                                    Field {
                                        name: Some(
                                            "stash",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 0,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "T::AccountId",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "num_slashing_spans",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 4,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "u32",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 15,
                                docs: [
                                    "See [`Pallet::force_unstake`].",
                                ],
                            },
                            Variant {
                                name: "force_new_era_always",
                                fields: [],
                                index: 16,
                                docs: [
                                    "See [`Pallet::force_new_era_always`].",
                                ],
                            },
                            Variant {
                                name: "cancel_deferred_slash",
                                fields: [
                                    Field {
                                        name: Some(
                                            "era",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 4,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "EraIndex",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "slash_indices",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 109,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "Vec<u32>",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 17,
                                docs: [
                                    "See [`Pallet::cancel_deferred_slash`].",
                                ],
                            },
                            Variant {
                                name: "payout_stakers",
                                fields: [
                                    Field {
                                        name: Some(
                                            "validator_stash",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 0,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "T::AccountId",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "era",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 4,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "EraIndex",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 18,
                                docs: [
                                    "See [`Pallet::payout_stakers`].",
                                ],
                            },
                            Variant {
                                name: "rebond",
                                fields: [
                                    Field {
                                        name: Some(
                                            "value",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 60,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "BalanceOf<T>",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 19,
                                docs: [
                                    "See [`Pallet::rebond`].",
                                ],
                            },
                            Variant {
                                name: "reap_stash",
                                fields: [
                                    Field {
                                        name: Some(
                                            "stash",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 0,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "T::AccountId",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "num_slashing_spans",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 4,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "u32",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 20,
                                docs: [
                                    "See [`Pallet::reap_stash`].",
                                ],
                            },
                            Variant {
                                name: "kick",
                                fields: [
                                    Field {
                                        name: Some(
                                            "who",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 107,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "Vec<AccountIdLookupOf<T>>",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 21,
                                docs: [
                                    "See [`Pallet::kick`].",
                                ],
                            },
                            Variant {
                                name: "set_staking_configs",
                                fields: [
                                    Field {
                                        name: Some(
                                            "min_nominator_bond",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 110,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "ConfigOp<BalanceOf<T>>",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "min_validator_bond",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 110,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "ConfigOp<BalanceOf<T>>",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "max_nominator_count",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 111,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "ConfigOp<u32>",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "max_validator_count",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 111,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "ConfigOp<u32>",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "chill_threshold",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 112,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "ConfigOp<Percent>",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "min_commission",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 113,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "ConfigOp<Perbill>",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 22,
                                docs: [
                                    "See [`Pallet::set_staking_configs`].",
                                ],
                            },
                            Variant {
                                name: "chill_other",
                                fields: [
                                    Field {
                                        name: Some(
                                            "controller",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 0,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "T::AccountId",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 23,
                                docs: [
                                    "See [`Pallet::chill_other`].",
                                ],
                            },
                            Variant {
                                name: "force_apply_min_commission",
                                fields: [
                                    Field {
                                        name: Some(
                                            "validator_stash",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 0,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "T::AccountId",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 24,
                                docs: [
                                    "See [`Pallet::force_apply_min_commission`].",
                                ],
                            },
                            Variant {
                                name: "set_min_commission",
                                fields: [
                                    Field {
                                        name: Some(
                                            "new",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 41,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "Perbill",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 25,
                                docs: [
                                    "See [`Pallet::set_min_commission`].",
                                ],
                            },
                        ],
                    },
                ),
                docs: [
                    "Contains a variant per dispatchable extrinsic that this pallet has.",
                ],
            },
        },
        PortableType {
            id: 106,
            ty: Type {
                path: Path {
                    segments: [
                        "pallet_staking",
                        "RewardDestination",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "AccountId",
                        ty: Some(
                            UntrackedSymbol {
                                id: 0,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ),
                    },
                ],
                type_def: Variant(
                    TypeDefVariant {
                        variants: [
                            Variant {
                                name: "Staked",
                                fields: [],
                                index: 0,
                                docs: [],
                            },
                            Variant {
                                name: "Stash",
                                fields: [],
                                index: 1,
                                docs: [],
                            },
                            Variant {
                                name: "Controller",
                                fields: [],
                                index: 2,
                                docs: [],
                            },
                            Variant {
                                name: "Account",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 0,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "AccountId",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 3,
                                docs: [],
                            },
                            Variant {
                                name: "None",
                                fields: [],
                                index: 4,
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 107,
            ty: Type {
                path: Path {
                    segments: [],
                },
                type_params: [],
                type_def: Sequence(
                    TypeDefSequence {
                        type_param: UntrackedSymbol {
                            id: 100,
                            marker: PhantomData<fn() -> core::any::TypeId>,
                        },
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 108,
            ty: Type {
                path: Path {
                    segments: [
                        "sp_arithmetic",
                        "per_things",
                        "Percent",
                    ],
                },
                type_params: [],
                type_def: Composite(
                    TypeDefComposite {
                        fields: [
                            Field {
                                name: None,
                                ty: UntrackedSymbol {
                                    id: 2,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "u8",
                                ),
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 109,
            ty: Type {
                path: Path {
                    segments: [],
                },
                type_params: [],
                type_def: Sequence(
                    TypeDefSequence {
                        type_param: UntrackedSymbol {
                            id: 4,
                            marker: PhantomData<fn() -> core::any::TypeId>,
                        },
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 110,
            ty: Type {
                path: Path {
                    segments: [
                        "pallet_staking",
                        "pallet",
                        "pallet",
                        "ConfigOp",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "T",
                        ty: Some(
                            UntrackedSymbol {
                                id: 6,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ),
                    },
                ],
                type_def: Variant(
                    TypeDefVariant {
                        variants: [
                            Variant {
                                name: "Noop",
                                fields: [],
                                index: 0,
                                docs: [],
                            },
                            Variant {
                                name: "Set",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 6,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "T",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 1,
                                docs: [],
                            },
                            Variant {
                                name: "Remove",
                                fields: [],
                                index: 2,
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 111,
            ty: Type {
                path: Path {
                    segments: [
                        "pallet_staking",
                        "pallet",
                        "pallet",
                        "ConfigOp",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "T",
                        ty: Some(
                            UntrackedSymbol {
                                id: 4,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ),
                    },
                ],
                type_def: Variant(
                    TypeDefVariant {
                        variants: [
                            Variant {
                                name: "Noop",
                                fields: [],
                                index: 0,
                                docs: [],
                            },
                            Variant {
                                name: "Set",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 4,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "T",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 1,
                                docs: [],
                            },
                            Variant {
                                name: "Remove",
                                fields: [],
                                index: 2,
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 112,
            ty: Type {
                path: Path {
                    segments: [
                        "pallet_staking",
                        "pallet",
                        "pallet",
                        "ConfigOp",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "T",
                        ty: Some(
                            UntrackedSymbol {
                                id: 108,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ),
                    },
                ],
                type_def: Variant(
                    TypeDefVariant {
                        variants: [
                            Variant {
                                name: "Noop",
                                fields: [],
                                index: 0,
                                docs: [],
                            },
                            Variant {
                                name: "Set",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 108,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "T",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 1,
                                docs: [],
                            },
                            Variant {
                                name: "Remove",
                                fields: [],
                                index: 2,
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 113,
            ty: Type {
                path: Path {
                    segments: [
                        "pallet_staking",
                        "pallet",
                        "pallet",
                        "ConfigOp",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "T",
                        ty: Some(
                            UntrackedSymbol {
                                id: 41,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ),
                    },
                ],
                type_def: Variant(
                    TypeDefVariant {
                        variants: [
                            Variant {
                                name: "Noop",
                                fields: [],
                                index: 0,
                                docs: [],
                            },
                            Variant {
                                name: "Set",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 41,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "T",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 1,
                                docs: [],
                            },
                            Variant {
                                name: "Remove",
                                fields: [],
                                index: 2,
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 114,
            ty: Type {
                path: Path {
                    segments: [
                        "pallet_session",
                        "pallet",
                        "Call",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "T",
                        ty: None,
                    },
                ],
                type_def: Variant(
                    TypeDefVariant {
                        variants: [
                            Variant {
                                name: "set_keys",
                                fields: [
                                    Field {
                                        name: Some(
                                            "keys",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 115,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "T::Keys",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "proof",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 13,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "Vec<u8>",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 0,
                                docs: [
                                    "See [`Pallet::set_keys`].",
                                ],
                            },
                            Variant {
                                name: "purge_keys",
                                fields: [],
                                index: 1,
                                docs: [
                                    "See [`Pallet::purge_keys`].",
                                ],
                            },
                        ],
                    },
                ),
                docs: [
                    "Contains a variant per dispatchable extrinsic that this pallet has.",
                ],
            },
        },
        PortableType {
            id: 115,
            ty: Type {
                path: Path {
                    segments: [
                        "polkadot_runtime",
                        "SessionKeys",
                    ],
                },
                type_params: [],
                type_def: Composite(
                    TypeDefComposite {
                        fields: [
                            Field {
                                name: Some(
                                    "grandpa",
                                ),
                                ty: UntrackedSymbol {
                                    id: 52,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "<Grandpa as $crate::BoundToRuntimeAppPublic>::Public",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "babe",
                                ),
                                ty: UntrackedSymbol {
                                    id: 92,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "<Babe as $crate::BoundToRuntimeAppPublic>::Public",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "im_online",
                                ),
                                ty: UntrackedSymbol {
                                    id: 55,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "<ImOnline as $crate::BoundToRuntimeAppPublic>::Public",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "para_validator",
                                ),
                                ty: UntrackedSymbol {
                                    id: 116,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "<Initializer as $crate::BoundToRuntimeAppPublic>::Public",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "para_assignment",
                                ),
                                ty: UntrackedSymbol {
                                    id: 117,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "<ParaSessionInfo as $crate::BoundToRuntimeAppPublic>::Public",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "authority_discovery",
                                ),
                                ty: UntrackedSymbol {
                                    id: 118,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "<AuthorityDiscovery as $crate::BoundToRuntimeAppPublic>::Public",
                                ),
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 116,
            ty: Type {
                path: Path {
                    segments: [
                        "polkadot_primitives",
                        "v5",
                        "validator_app",
                        "Public",
                    ],
                },
                type_params: [],
                type_def: Composite(
                    TypeDefComposite {
                        fields: [
                            Field {
                                name: None,
                                ty: UntrackedSymbol {
                                    id: 56,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "sr25519::Public",
                                ),
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 117,
            ty: Type {
                path: Path {
                    segments: [
                        "polkadot_primitives",
                        "v5",
                        "assignment_app",
                        "Public",
                    ],
                },
                type_params: [],
                type_def: Composite(
                    TypeDefComposite {
                        fields: [
                            Field {
                                name: None,
                                ty: UntrackedSymbol {
                                    id: 56,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "sr25519::Public",
                                ),
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 118,
            ty: Type {
                path: Path {
                    segments: [
                        "sp_authority_discovery",
                        "app",
                        "Public",
                    ],
                },
                type_params: [],
                type_def: Composite(
                    TypeDefComposite {
                        fields: [
                            Field {
                                name: None,
                                ty: UntrackedSymbol {
                                    id: 56,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "sr25519::Public",
                                ),
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 119,
            ty: Type {
                path: Path {
                    segments: [
                        "pallet_grandpa",
                        "pallet",
                        "Call",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "T",
                        ty: None,
                    },
                ],
                type_def: Variant(
                    TypeDefVariant {
                        variants: [
                            Variant {
                                name: "report_equivocation",
                                fields: [
                                    Field {
                                        name: Some(
                                            "equivocation_proof",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 120,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "Box<EquivocationProof<T::Hash, T::BlockNumber>>",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "key_owner_proof",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 94,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "T::KeyOwnerProof",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 0,
                                docs: [
                                    "See [`Pallet::report_equivocation`].",
                                ],
                            },
                            Variant {
                                name: "report_equivocation_unsigned",
                                fields: [
                                    Field {
                                        name: Some(
                                            "equivocation_proof",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 120,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "Box<EquivocationProof<T::Hash, T::BlockNumber>>",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "key_owner_proof",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 94,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "T::KeyOwnerProof",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 1,
                                docs: [
                                    "See [`Pallet::report_equivocation_unsigned`].",
                                ],
                            },
                            Variant {
                                name: "note_stalled",
                                fields: [
                                    Field {
                                        name: Some(
                                            "delay",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 4,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "T::BlockNumber",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "best_finalized_block_number",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 4,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "T::BlockNumber",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 2,
                                docs: [
                                    "See [`Pallet::note_stalled`].",
                                ],
                            },
                        ],
                    },
                ),
                docs: [
                    "Contains a variant per dispatchable extrinsic that this pallet has.",
                ],
            },
        },
        PortableType {
            id: 120,
            ty: Type {
                path: Path {
                    segments: [
                        "sp_consensus_grandpa",
                        "EquivocationProof",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "H",
                        ty: Some(
                            UntrackedSymbol {
                                id: 12,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ),
                    },
                    TypeParameter {
                        name: "N",
                        ty: Some(
                            UntrackedSymbol {
                                id: 4,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ),
                    },
                ],
                type_def: Composite(
                    TypeDefComposite {
                        fields: [
                            Field {
                                name: Some(
                                    "set_id",
                                ),
                                ty: UntrackedSymbol {
                                    id: 11,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "SetId",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "equivocation",
                                ),
                                ty: UntrackedSymbol {
                                    id: 121,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "Equivocation<H, N>",
                                ),
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 121,
            ty: Type {
                path: Path {
                    segments: [
                        "sp_consensus_grandpa",
                        "Equivocation",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "H",
                        ty: Some(
                            UntrackedSymbol {
                                id: 12,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ),
                    },
                    TypeParameter {
                        name: "N",
                        ty: Some(
                            UntrackedSymbol {
                                id: 4,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ),
                    },
                ],
                type_def: Variant(
                    TypeDefVariant {
                        variants: [
                            Variant {
                                name: "Prevote",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 122,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "grandpa::Equivocation<AuthorityId, grandpa::Prevote<H, N>,\nAuthoritySignature>",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 0,
                                docs: [],
                            },
                            Variant {
                                name: "Precommit",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 128,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "grandpa::Equivocation<AuthorityId, grandpa::Precommit<H, N>,\nAuthoritySignature>",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 1,
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 122,
            ty: Type {
                path: Path {
                    segments: [
                        "finality_grandpa",
                        "Equivocation",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "Id",
                        ty: Some(
                            UntrackedSymbol {
                                id: 52,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ),
                    },
                    TypeParameter {
                        name: "V",
                        ty: Some(
                            UntrackedSymbol {
                                id: 123,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ),
                    },
                    TypeParameter {
                        name: "S",
                        ty: Some(
                            UntrackedSymbol {
                                id: 124,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ),
                    },
                ],
                type_def: Composite(
                    TypeDefComposite {
                        fields: [
                            Field {
                                name: Some(
                                    "round_number",
                                ),
                                ty: UntrackedSymbol {
                                    id: 11,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "u64",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "identity",
                                ),
                                ty: UntrackedSymbol {
                                    id: 52,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "Id",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "first",
                                ),
                                ty: UntrackedSymbol {
                                    id: 127,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "(V, S)",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "second",
                                ),
                                ty: UntrackedSymbol {
                                    id: 127,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "(V, S)",
                                ),
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 123,
            ty: Type {
                path: Path {
                    segments: [
                        "finality_grandpa",
                        "Prevote",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "H",
                        ty: Some(
                            UntrackedSymbol {
                                id: 12,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ),
                    },
                    TypeParameter {
                        name: "N",
                        ty: Some(
                            UntrackedSymbol {
                                id: 4,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ),
                    },
                ],
                type_def: Composite(
                    TypeDefComposite {
                        fields: [
                            Field {
                                name: Some(
                                    "target_hash",
                                ),
                                ty: UntrackedSymbol {
                                    id: 12,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "H",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "target_number",
                                ),
                                ty: UntrackedSymbol {
                                    id: 4,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "N",
                                ),
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 124,
            ty: Type {
                path: Path {
                    segments: [
                        "sp_consensus_grandpa",
                        "app",
                        "Signature",
                    ],
                },
                type_params: [],
                type_def: Composite(
                    TypeDefComposite {
                        fields: [
                            Field {
                                name: None,
                                ty: UntrackedSymbol {
                                    id: 125,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "ed25519::Signature",
                                ),
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 125,
            ty: Type {
                path: Path {
                    segments: [
                        "sp_core",
                        "ed25519",
                        "Signature",
                    ],
                },
                type_params: [],
                type_def: Composite(
                    TypeDefComposite {
                        fields: [
                            Field {
                                name: None,
                                ty: UntrackedSymbol {
                                    id: 126,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "[u8; 64]",
                                ),
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 126,
            ty: Type {
                path: Path {
                    segments: [],
                },
                type_params: [],
                type_def: Array(
                    TypeDefArray {
                        len: 64,
                        type_param: UntrackedSymbol {
                            id: 2,
                            marker: PhantomData<fn() -> core::any::TypeId>,
                        },
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 127,
            ty: Type {
                path: Path {
                    segments: [],
                },
                type_params: [],
                type_def: Tuple(
                    TypeDefTuple {
                        fields: [
                            UntrackedSymbol {
                                id: 123,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                            UntrackedSymbol {
                                id: 124,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 128,
            ty: Type {
                path: Path {
                    segments: [
                        "finality_grandpa",
                        "Equivocation",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "Id",
                        ty: Some(
                            UntrackedSymbol {
                                id: 52,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ),
                    },
                    TypeParameter {
                        name: "V",
                        ty: Some(
                            UntrackedSymbol {
                                id: 129,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ),
                    },
                    TypeParameter {
                        name: "S",
                        ty: Some(
                            UntrackedSymbol {
                                id: 124,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ),
                    },
                ],
                type_def: Composite(
                    TypeDefComposite {
                        fields: [
                            Field {
                                name: Some(
                                    "round_number",
                                ),
                                ty: UntrackedSymbol {
                                    id: 11,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "u64",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "identity",
                                ),
                                ty: UntrackedSymbol {
                                    id: 52,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "Id",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "first",
                                ),
                                ty: UntrackedSymbol {
                                    id: 130,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "(V, S)",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "second",
                                ),
                                ty: UntrackedSymbol {
                                    id: 130,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "(V, S)",
                                ),
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 129,
            ty: Type {
                path: Path {
                    segments: [
                        "finality_grandpa",
                        "Precommit",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "H",
                        ty: Some(
                            UntrackedSymbol {
                                id: 12,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ),
                    },
                    TypeParameter {
                        name: "N",
                        ty: Some(
                            UntrackedSymbol {
                                id: 4,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ),
                    },
                ],
                type_def: Composite(
                    TypeDefComposite {
                        fields: [
                            Field {
                                name: Some(
                                    "target_hash",
                                ),
                                ty: UntrackedSymbol {
                                    id: 12,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "H",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "target_number",
                                ),
                                ty: UntrackedSymbol {
                                    id: 4,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "N",
                                ),
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 130,
            ty: Type {
                path: Path {
                    segments: [],
                },
                type_params: [],
                type_def: Tuple(
                    TypeDefTuple {
                        fields: [
                            UntrackedSymbol {
                                id: 129,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                            UntrackedSymbol {
                                id: 124,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 131,
            ty: Type {
                path: Path {
                    segments: [
                        "pallet_im_online",
                        "pallet",
                        "Call",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "T",
                        ty: None,
                    },
                ],
                type_def: Variant(
                    TypeDefVariant {
                        variants: [
                            Variant {
                                name: "heartbeat",
                                fields: [
                                    Field {
                                        name: Some(
                                            "heartbeat",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 132,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "Heartbeat<T::BlockNumber>",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "signature",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 133,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "<T::AuthorityId as RuntimeAppPublic>::Signature",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 0,
                                docs: [
                                    "See [`Pallet::heartbeat`].",
                                ],
                            },
                        ],
                    },
                ),
                docs: [
                    "Contains a variant per dispatchable extrinsic that this pallet has.",
                ],
            },
        },
        PortableType {
            id: 132,
            ty: Type {
                path: Path {
                    segments: [
                        "pallet_im_online",
                        "Heartbeat",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "BlockNumber",
                        ty: Some(
                            UntrackedSymbol {
                                id: 4,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ),
                    },
                ],
                type_def: Composite(
                    TypeDefComposite {
                        fields: [
                            Field {
                                name: Some(
                                    "block_number",
                                ),
                                ty: UntrackedSymbol {
                                    id: 4,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "BlockNumber",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "session_index",
                                ),
                                ty: UntrackedSymbol {
                                    id: 4,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "SessionIndex",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "authority_index",
                                ),
                                ty: UntrackedSymbol {
                                    id: 4,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "AuthIndex",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "validators_len",
                                ),
                                ty: UntrackedSymbol {
                                    id: 4,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "u32",
                                ),
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 133,
            ty: Type {
                path: Path {
                    segments: [
                        "pallet_im_online",
                        "sr25519",
                        "app_sr25519",
                        "Signature",
                    ],
                },
                type_params: [],
                type_def: Composite(
                    TypeDefComposite {
                        fields: [
                            Field {
                                name: None,
                                ty: UntrackedSymbol {
                                    id: 134,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "sr25519::Signature",
                                ),
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 134,
            ty: Type {
                path: Path {
                    segments: [
                        "sp_core",
                        "sr25519",
                        "Signature",
                    ],
                },
                type_params: [],
                type_def: Composite(
                    TypeDefComposite {
                        fields: [
                            Field {
                                name: None,
                                ty: UntrackedSymbol {
                                    id: 126,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "[u8; 64]",
                                ),
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 135,
            ty: Type {
                path: Path {
                    segments: [
                        "pallet_democracy",
                        "pallet",
                        "Call",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "T",
                        ty: None,
                    },
                ],
                type_def: Variant(
                    TypeDefVariant {
                        variants: [
                            Variant {
                                name: "propose",
                                fields: [
                                    Field {
                                        name: Some(
                                            "proposal",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 78,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "BoundedCallOf<T>",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "value",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 60,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "BalanceOf<T>",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 0,
                                docs: [
                                    "See [`Pallet::propose`].",
                                ],
                            },
                            Variant {
                                name: "second",
                                fields: [
                                    Field {
                                        name: Some(
                                            "proposal",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 91,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "PropIndex",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 1,
                                docs: [
                                    "See [`Pallet::second`].",
                                ],
                            },
                            Variant {
                                name: "vote",
                                fields: [
                                    Field {
                                        name: Some(
                                            "ref_index",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 91,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "ReferendumIndex",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "vote",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 65,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "AccountVote<BalanceOf<T>>",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 2,
                                docs: [
                                    "See [`Pallet::vote`].",
                                ],
                            },
                            Variant {
                                name: "emergency_cancel",
                                fields: [
                                    Field {
                                        name: Some(
                                            "ref_index",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 4,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "ReferendumIndex",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 3,
                                docs: [
                                    "See [`Pallet::emergency_cancel`].",
                                ],
                            },
                            Variant {
                                name: "external_propose",
                                fields: [
                                    Field {
                                        name: Some(
                                            "proposal",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 78,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "BoundedCallOf<T>",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 4,
                                docs: [
                                    "See [`Pallet::external_propose`].",
                                ],
                            },
                            Variant {
                                name: "external_propose_majority",
                                fields: [
                                    Field {
                                        name: Some(
                                            "proposal",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 78,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "BoundedCallOf<T>",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 5,
                                docs: [
                                    "See [`Pallet::external_propose_majority`].",
                                ],
                            },
                            Variant {
                                name: "external_propose_default",
                                fields: [
                                    Field {
                                        name: Some(
                                            "proposal",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 78,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "BoundedCallOf<T>",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 6,
                                docs: [
                                    "See [`Pallet::external_propose_default`].",
                                ],
                            },
                            Variant {
                                name: "fast_track",
                                fields: [
                                    Field {
                                        name: Some(
                                            "proposal_hash",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 12,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "H256",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "voting_period",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 4,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "T::BlockNumber",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "delay",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 4,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "T::BlockNumber",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 7,
                                docs: [
                                    "See [`Pallet::fast_track`].",
                                ],
                            },
                            Variant {
                                name: "veto_external",
                                fields: [
                                    Field {
                                        name: Some(
                                            "proposal_hash",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 12,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "H256",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 8,
                                docs: [
                                    "See [`Pallet::veto_external`].",
                                ],
                            },
                            Variant {
                                name: "cancel_referendum",
                                fields: [
                                    Field {
                                        name: Some(
                                            "ref_index",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 91,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "ReferendumIndex",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 9,
                                docs: [
                                    "See [`Pallet::cancel_referendum`].",
                                ],
                            },
                            Variant {
                                name: "delegate",
                                fields: [
                                    Field {
                                        name: Some(
                                            "to",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 100,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "AccountIdLookupOf<T>",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "conviction",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 136,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "Conviction",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "balance",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 6,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "BalanceOf<T>",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 10,
                                docs: [
                                    "See [`Pallet::delegate`].",
                                ],
                            },
                            Variant {
                                name: "undelegate",
                                fields: [],
                                index: 11,
                                docs: [
                                    "See [`Pallet::undelegate`].",
                                ],
                            },
                            Variant {
                                name: "clear_public_proposals",
                                fields: [],
                                index: 12,
                                docs: [
                                    "See [`Pallet::clear_public_proposals`].",
                                ],
                            },
                            Variant {
                                name: "unlock",
                                fields: [
                                    Field {
                                        name: Some(
                                            "target",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 100,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "AccountIdLookupOf<T>",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 13,
                                docs: [
                                    "See [`Pallet::unlock`].",
                                ],
                            },
                            Variant {
                                name: "remove_vote",
                                fields: [
                                    Field {
                                        name: Some(
                                            "index",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 4,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "ReferendumIndex",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 14,
                                docs: [
                                    "See [`Pallet::remove_vote`].",
                                ],
                            },
                            Variant {
                                name: "remove_other_vote",
                                fields: [
                                    Field {
                                        name: Some(
                                            "target",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 100,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "AccountIdLookupOf<T>",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "index",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 4,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "ReferendumIndex",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 15,
                                docs: [
                                    "See [`Pallet::remove_other_vote`].",
                                ],
                            },
                            Variant {
                                name: "blacklist",
                                fields: [
                                    Field {
                                        name: Some(
                                            "proposal_hash",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 12,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "H256",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "maybe_ref_index",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 137,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "Option<ReferendumIndex>",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 16,
                                docs: [
                                    "See [`Pallet::blacklist`].",
                                ],
                            },
                            Variant {
                                name: "cancel_proposal",
                                fields: [
                                    Field {
                                        name: Some(
                                            "prop_index",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 91,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "PropIndex",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 17,
                                docs: [
                                    "See [`Pallet::cancel_proposal`].",
                                ],
                            },
                            Variant {
                                name: "set_metadata",
                                fields: [
                                    Field {
                                        name: Some(
                                            "owner",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 67,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "MetadataOwner",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "maybe_hash",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 138,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "Option<PreimageHash>",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 18,
                                docs: [
                                    "See [`Pallet::set_metadata`].",
                                ],
                            },
                        ],
                    },
                ),
                docs: [
                    "Contains a variant per dispatchable extrinsic that this pallet has.",
                ],
            },
        },
        PortableType {
            id: 136,
            ty: Type {
                path: Path {
                    segments: [
                        "pallet_democracy",
                        "conviction",
                        "Conviction",
                    ],
                },
                type_params: [],
                type_def: Variant(
                    TypeDefVariant {
                        variants: [
                            Variant {
                                name: "None",
                                fields: [],
                                index: 0,
                                docs: [],
                            },
                            Variant {
                                name: "Locked1x",
                                fields: [],
                                index: 1,
                                docs: [],
                            },
                            Variant {
                                name: "Locked2x",
                                fields: [],
                                index: 2,
                                docs: [],
                            },
                            Variant {
                                name: "Locked3x",
                                fields: [],
                                index: 3,
                                docs: [],
                            },
                            Variant {
                                name: "Locked4x",
                                fields: [],
                                index: 4,
                                docs: [],
                            },
                            Variant {
                                name: "Locked5x",
                                fields: [],
                                index: 5,
                                docs: [],
                            },
                            Variant {
                                name: "Locked6x",
                                fields: [],
                                index: 6,
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 137,
            ty: Type {
                path: Path {
                    segments: [
                        "Option",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "T",
                        ty: Some(
                            UntrackedSymbol {
                                id: 4,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ),
                    },
                ],
                type_def: Variant(
                    TypeDefVariant {
                        variants: [
                            Variant {
                                name: "None",
                                fields: [],
                                index: 0,
                                docs: [],
                            },
                            Variant {
                                name: "Some",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 4,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: None,
                                        docs: [],
                                    },
                                ],
                                index: 1,
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 138,
            ty: Type {
                path: Path {
                    segments: [
                        "Option",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "T",
                        ty: Some(
                            UntrackedSymbol {
                                id: 12,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ),
                    },
                ],
                type_def: Variant(
                    TypeDefVariant {
                        variants: [
                            Variant {
                                name: "None",
                                fields: [],
                                index: 0,
                                docs: [],
                            },
                            Variant {
                                name: "Some",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 12,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: None,
                                        docs: [],
                                    },
                                ],
                                index: 1,
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 139,
            ty: Type {
                path: Path {
                    segments: [
                        "pallet_collective",
                        "pallet",
                        "Call",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "T",
                        ty: None,
                    },
                    TypeParameter {
                        name: "I",
                        ty: None,
                    },
                ],
                type_def: Variant(
                    TypeDefVariant {
                        variants: [
                            Variant {
                                name: "set_members",
                                fields: [
                                    Field {
                                        name: Some(
                                            "new_members",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 104,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "Vec<T::AccountId>",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "prime",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 140,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "Option<T::AccountId>",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "old_count",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 4,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "MemberCount",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 0,
                                docs: [
                                    "See [`Pallet::set_members`].",
                                ],
                            },
                            Variant {
                                name: "execute",
                                fields: [
                                    Field {
                                        name: Some(
                                            "proposal",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 79,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "Box<<T as Config<I>>::Proposal>",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "length_bound",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 91,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "u32",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 1,
                                docs: [
                                    "See [`Pallet::execute`].",
                                ],
                            },
                            Variant {
                                name: "propose",
                                fields: [
                                    Field {
                                        name: Some(
                                            "threshold",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 91,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "MemberCount",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "proposal",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 79,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "Box<<T as Config<I>>::Proposal>",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "length_bound",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 91,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "u32",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 2,
                                docs: [
                                    "See [`Pallet::propose`].",
                                ],
                            },
                            Variant {
                                name: "vote",
                                fields: [
                                    Field {
                                        name: Some(
                                            "proposal",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 12,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "T::Hash",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "index",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 91,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "ProposalIndex",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "approve",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 44,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "bool",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 3,
                                docs: [
                                    "See [`Pallet::vote`].",
                                ],
                            },
                            Variant {
                                name: "disapprove_proposal",
                                fields: [
                                    Field {
                                        name: Some(
                                            "proposal_hash",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 12,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "T::Hash",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 5,
                                docs: [
                                    "See [`Pallet::disapprove_proposal`].",
                                ],
                            },
                            Variant {
                                name: "close",
                                fields: [
                                    Field {
                                        name: Some(
                                            "proposal_hash",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 12,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "T::Hash",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "index",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 91,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "ProposalIndex",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "proposal_weight_bound",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 9,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "Weight",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "length_bound",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 91,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "u32",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 6,
                                docs: [
                                    "See [`Pallet::close`].",
                                ],
                            },
                        ],
                    },
                ),
                docs: [
                    "Contains a variant per dispatchable extrinsic that this pallet has.",
                ],
            },
        },
        PortableType {
            id: 140,
            ty: Type {
                path: Path {
                    segments: [
                        "Option",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "T",
                        ty: Some(
                            UntrackedSymbol {
                                id: 0,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ),
                    },
                ],
                type_def: Variant(
                    TypeDefVariant {
                        variants: [
                            Variant {
                                name: "None",
                                fields: [],
                                index: 0,
                                docs: [],
                            },
                            Variant {
                                name: "Some",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 0,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: None,
                                        docs: [],
                                    },
                                ],
                                index: 1,
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 141,
            ty: Type {
                path: Path {
                    segments: [
                        "pallet_collective",
                        "pallet",
                        "Call2",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "T",
                        ty: None,
                    },
                    TypeParameter {
                        name: "I",
                        ty: None,
                    },
                ],
                type_def: Variant(
                    TypeDefVariant {
                        variants: [
                            Variant {
                                name: "set_members",
                                fields: [
                                    Field {
                                        name: Some(
                                            "new_members",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 104,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "Vec<T::AccountId>",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "prime",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 140,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "Option<T::AccountId>",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "old_count",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 4,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "MemberCount",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 0,
                                docs: [
                                    "See [`Pallet::set_members`].",
                                ],
                            },
                            Variant {
                                name: "execute",
                                fields: [
                                    Field {
                                        name: Some(
                                            "proposal",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 79,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "Box<<T as Config<I>>::Proposal>",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "length_bound",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 91,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "u32",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 1,
                                docs: [
                                    "See [`Pallet::execute`].",
                                ],
                            },
                            Variant {
                                name: "propose",
                                fields: [
                                    Field {
                                        name: Some(
                                            "threshold",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 91,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "MemberCount",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "proposal",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 79,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "Box<<T as Config<I>>::Proposal>",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "length_bound",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 91,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "u32",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 2,
                                docs: [
                                    "See [`Pallet::propose`].",
                                ],
                            },
                            Variant {
                                name: "vote",
                                fields: [
                                    Field {
                                        name: Some(
                                            "proposal",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 12,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "T::Hash",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "index",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 91,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "ProposalIndex",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "approve",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 44,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "bool",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 3,
                                docs: [
                                    "See [`Pallet::vote`].",
                                ],
                            },
                            Variant {
                                name: "disapprove_proposal",
                                fields: [
                                    Field {
                                        name: Some(
                                            "proposal_hash",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 12,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "T::Hash",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 5,
                                docs: [
                                    "See [`Pallet::disapprove_proposal`].",
                                ],
                            },
                            Variant {
                                name: "close",
                                fields: [
                                    Field {
                                        name: Some(
                                            "proposal_hash",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 12,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "T::Hash",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "index",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 91,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "ProposalIndex",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "proposal_weight_bound",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 9,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "Weight",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "length_bound",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 91,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "u32",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 6,
                                docs: [
                                    "See [`Pallet::close`].",
                                ],
                            },
                        ],
                    },
                ),
                docs: [
                    "Contains a variant per dispatchable extrinsic that this pallet has.",
                ],
            },
        },
        PortableType {
            id: 142,
            ty: Type {
                path: Path {
                    segments: [
                        "pallet_elections_phragmen",
                        "pallet",
                        "Call",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "T",
                        ty: None,
                    },
                ],
                type_def: Variant(
                    TypeDefVariant {
                        variants: [
                            Variant {
                                name: "vote",
                                fields: [
                                    Field {
                                        name: Some(
                                            "votes",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 104,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "Vec<T::AccountId>",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "value",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 60,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "BalanceOf<T>",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 0,
                                docs: [
                                    "See [`Pallet::vote`].",
                                ],
                            },
                            Variant {
                                name: "remove_voter",
                                fields: [],
                                index: 1,
                                docs: [
                                    "See [`Pallet::remove_voter`].",
                                ],
                            },
                            Variant {
                                name: "submit_candidacy",
                                fields: [
                                    Field {
                                        name: Some(
                                            "candidate_count",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 91,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "u32",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 2,
                                docs: [
                                    "See [`Pallet::submit_candidacy`].",
                                ],
                            },
                            Variant {
                                name: "renounce_candidacy",
                                fields: [
                                    Field {
                                        name: Some(
                                            "renouncing",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 143,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "Renouncing",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 3,
                                docs: [
                                    "See [`Pallet::renounce_candidacy`].",
                                ],
                            },
                            Variant {
                                name: "remove_member",
                                fields: [
                                    Field {
                                        name: Some(
                                            "who",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 100,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "AccountIdLookupOf<T>",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "slash_bond",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 44,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "bool",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "rerun_election",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 44,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "bool",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 4,
                                docs: [
                                    "See [`Pallet::remove_member`].",
                                ],
                            },
                            Variant {
                                name: "clean_defunct_voters",
                                fields: [
                                    Field {
                                        name: Some(
                                            "num_voters",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 4,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "u32",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "num_defunct",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 4,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "u32",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 5,
                                docs: [
                                    "See [`Pallet::clean_defunct_voters`].",
                                ],
                            },
                        ],
                    },
                ),
                docs: [
                    "Contains a variant per dispatchable extrinsic that this pallet has.",
                ],
            },
        },
        PortableType {
            id: 143,
            ty: Type {
                path: Path {
                    segments: [
                        "pallet_elections_phragmen",
                        "Renouncing",
                    ],
                },
                type_params: [],
                type_def: Variant(
                    TypeDefVariant {
                        variants: [
                            Variant {
                                name: "Member",
                                fields: [],
                                index: 0,
                                docs: [],
                            },
                            Variant {
                                name: "RunnerUp",
                                fields: [],
                                index: 1,
                                docs: [],
                            },
                            Variant {
                                name: "Candidate",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 91,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "u32",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 2,
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 144,
            ty: Type {
                path: Path {
                    segments: [
                        "pallet_membership",
                        "pallet",
                        "Call",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "T",
                        ty: None,
                    },
                    TypeParameter {
                        name: "I",
                        ty: None,
                    },
                ],
                type_def: Variant(
                    TypeDefVariant {
                        variants: [
                            Variant {
                                name: "add_member",
                                fields: [
                                    Field {
                                        name: Some(
                                            "who",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 100,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "AccountIdLookupOf<T>",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 0,
                                docs: [
                                    "See [`Pallet::add_member`].",
                                ],
                            },
                            Variant {
                                name: "remove_member",
                                fields: [
                                    Field {
                                        name: Some(
                                            "who",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 100,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "AccountIdLookupOf<T>",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 1,
                                docs: [
                                    "See [`Pallet::remove_member`].",
                                ],
                            },
                            Variant {
                                name: "swap_member",
                                fields: [
                                    Field {
                                        name: Some(
                                            "remove",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 100,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "AccountIdLookupOf<T>",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "add",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 100,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "AccountIdLookupOf<T>",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 2,
                                docs: [
                                    "See [`Pallet::swap_member`].",
                                ],
                            },
                            Variant {
                                name: "reset_members",
                                fields: [
                                    Field {
                                        name: Some(
                                            "members",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 104,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "Vec<T::AccountId>",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 3,
                                docs: [
                                    "See [`Pallet::reset_members`].",
                                ],
                            },
                            Variant {
                                name: "change_key",
                                fields: [
                                    Field {
                                        name: Some(
                                            "new",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 100,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "AccountIdLookupOf<T>",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 4,
                                docs: [
                                    "See [`Pallet::change_key`].",
                                ],
                            },
                            Variant {
                                name: "set_prime",
                                fields: [
                                    Field {
                                        name: Some(
                                            "who",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 100,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "AccountIdLookupOf<T>",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 5,
                                docs: [
                                    "See [`Pallet::set_prime`].",
                                ],
                            },
                            Variant {
                                name: "clear_prime",
                                fields: [],
                                index: 6,
                                docs: [
                                    "See [`Pallet::clear_prime`].",
                                ],
                            },
                        ],
                    },
                ),
                docs: [
                    "Contains a variant per dispatchable extrinsic that this pallet has.",
                ],
            },
        },
        PortableType {
            id: 145,
            ty: Type {
                path: Path {
                    segments: [
                        "pallet_treasury",
                        "pallet",
                        "Call",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "T",
                        ty: None,
                    },
                    TypeParameter {
                        name: "I",
                        ty: None,
                    },
                ],
                type_def: Variant(
                    TypeDefVariant {
                        variants: [
                            Variant {
                                name: "propose_spend",
                                fields: [
                                    Field {
                                        name: Some(
                                            "value",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 60,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "BalanceOf<T, I>",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "beneficiary",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 100,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "AccountIdLookupOf<T>",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 0,
                                docs: [
                                    "See [`Pallet::propose_spend`].",
                                ],
                            },
                            Variant {
                                name: "reject_proposal",
                                fields: [
                                    Field {
                                        name: Some(
                                            "proposal_id",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 91,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "ProposalIndex",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 1,
                                docs: [
                                    "See [`Pallet::reject_proposal`].",
                                ],
                            },
                            Variant {
                                name: "approve_proposal",
                                fields: [
                                    Field {
                                        name: Some(
                                            "proposal_id",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 91,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "ProposalIndex",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 2,
                                docs: [
                                    "See [`Pallet::approve_proposal`].",
                                ],
                            },
                            Variant {
                                name: "spend",
                                fields: [
                                    Field {
                                        name: Some(
                                            "amount",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 60,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "BalanceOf<T, I>",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "beneficiary",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 100,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "AccountIdLookupOf<T>",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 3,
                                docs: [
                                    "See [`Pallet::spend`].",
                                ],
                            },
                            Variant {
                                name: "remove_approval",
                                fields: [
                                    Field {
                                        name: Some(
                                            "proposal_id",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 91,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "ProposalIndex",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 4,
                                docs: [
                                    "See [`Pallet::remove_approval`].",
                                ],
                            },
                        ],
                    },
                ),
                docs: [
                    "Contains a variant per dispatchable extrinsic that this pallet has.",
                ],
            },
        },
        PortableType {
            id: 146,
            ty: Type {
                path: Path {
                    segments: [
                        "pallet_conviction_voting",
                        "pallet",
                        "Call",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "T",
                        ty: None,
                    },
                    TypeParameter {
                        name: "I",
                        ty: None,
                    },
                ],
                type_def: Variant(
                    TypeDefVariant {
                        variants: [
                            Variant {
                                name: "vote",
                                fields: [
                                    Field {
                                        name: Some(
                                            "poll_index",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 91,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "PollIndexOf<T, I>",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "vote",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 147,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "AccountVote<BalanceOf<T, I>>",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 0,
                                docs: [
                                    "See [`Pallet::vote`].",
                                ],
                            },
                            Variant {
                                name: "delegate",
                                fields: [
                                    Field {
                                        name: Some(
                                            "class",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 77,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "ClassOf<T, I>",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "to",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 100,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "AccountIdLookupOf<T>",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "conviction",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 149,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "Conviction",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "balance",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 6,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "BalanceOf<T, I>",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 1,
                                docs: [
                                    "See [`Pallet::delegate`].",
                                ],
                            },
                            Variant {
                                name: "undelegate",
                                fields: [
                                    Field {
                                        name: Some(
                                            "class",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 77,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "ClassOf<T, I>",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 2,
                                docs: [
                                    "See [`Pallet::undelegate`].",
                                ],
                            },
                            Variant {
                                name: "unlock",
                                fields: [
                                    Field {
                                        name: Some(
                                            "class",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 77,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "ClassOf<T, I>",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "target",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 100,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "AccountIdLookupOf<T>",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 3,
                                docs: [
                                    "See [`Pallet::unlock`].",
                                ],
                            },
                            Variant {
                                name: "remove_vote",
                                fields: [
                                    Field {
                                        name: Some(
                                            "class",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 150,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "Option<ClassOf<T, I>>",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "index",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 4,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "PollIndexOf<T, I>",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 4,
                                docs: [
                                    "See [`Pallet::remove_vote`].",
                                ],
                            },
                            Variant {
                                name: "remove_other_vote",
                                fields: [
                                    Field {
                                        name: Some(
                                            "target",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 100,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "AccountIdLookupOf<T>",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "class",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 77,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "ClassOf<T, I>",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "index",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 4,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "PollIndexOf<T, I>",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 5,
                                docs: [
                                    "See [`Pallet::remove_other_vote`].",
                                ],
                            },
                        ],
                    },
                ),
                docs: [
                    "Contains a variant per dispatchable extrinsic that this pallet has.",
                ],
            },
        },
        PortableType {
            id: 147,
            ty: Type {
                path: Path {
                    segments: [
                        "pallet_conviction_voting",
                        "vote",
                        "AccountVote",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "Balance",
                        ty: Some(
                            UntrackedSymbol {
                                id: 6,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ),
                    },
                ],
                type_def: Variant(
                    TypeDefVariant {
                        variants: [
                            Variant {
                                name: "Standard",
                                fields: [
                                    Field {
                                        name: Some(
                                            "vote",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 148,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "Vote",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "balance",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 6,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "Balance",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 0,
                                docs: [],
                            },
                            Variant {
                                name: "Split",
                                fields: [
                                    Field {
                                        name: Some(
                                            "aye",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 6,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "Balance",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "nay",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 6,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "Balance",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 1,
                                docs: [],
                            },
                            Variant {
                                name: "SplitAbstain",
                                fields: [
                                    Field {
                                        name: Some(
                                            "aye",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 6,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "Balance",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "nay",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 6,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "Balance",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "abstain",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 6,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "Balance",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 2,
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 148,
            ty: Type {
                path: Path {
                    segments: [
                        "pallet_conviction_voting",
                        "vote",
                        "Vote",
                    ],
                },
                type_params: [],
                type_def: Composite(
                    TypeDefComposite {
                        fields: [
                            Field {
                                name: None,
                                ty: UntrackedSymbol {
                                    id: 2,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: None,
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 149,
            ty: Type {
                path: Path {
                    segments: [
                        "pallet_conviction_voting",
                        "conviction",
                        "Conviction",
                    ],
                },
                type_params: [],
                type_def: Variant(
                    TypeDefVariant {
                        variants: [
                            Variant {
                                name: "None",
                                fields: [],
                                index: 0,
                                docs: [],
                            },
                            Variant {
                                name: "Locked1x",
                                fields: [],
                                index: 1,
                                docs: [],
                            },
                            Variant {
                                name: "Locked2x",
                                fields: [],
                                index: 2,
                                docs: [],
                            },
                            Variant {
                                name: "Locked3x",
                                fields: [],
                                index: 3,
                                docs: [],
                            },
                            Variant {
                                name: "Locked4x",
                                fields: [],
                                index: 4,
                                docs: [],
                            },
                            Variant {
                                name: "Locked5x",
                                fields: [],
                                index: 5,
                                docs: [],
                            },
                            Variant {
                                name: "Locked6x",
                                fields: [],
                                index: 6,
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 150,
            ty: Type {
                path: Path {
                    segments: [
                        "Option",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "T",
                        ty: Some(
                            UntrackedSymbol {
                                id: 77,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ),
                    },
                ],
                type_def: Variant(
                    TypeDefVariant {
                        variants: [
                            Variant {
                                name: "None",
                                fields: [],
                                index: 0,
                                docs: [],
                            },
                            Variant {
                                name: "Some",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 77,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: None,
                                        docs: [],
                                    },
                                ],
                                index: 1,
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 151,
            ty: Type {
                path: Path {
                    segments: [
                        "pallet_referenda",
                        "pallet",
                        "Call",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "T",
                        ty: None,
                    },
                    TypeParameter {
                        name: "I",
                        ty: None,
                    },
                ],
                type_def: Variant(
                    TypeDefVariant {
                        variants: [
                            Variant {
                                name: "submit",
                                fields: [
                                    Field {
                                        name: Some(
                                            "proposal_origin",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 152,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "Box<PalletsOriginOf<T>>",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "proposal",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 78,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "BoundedCallOf<T, I>",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "enactment_moment",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 168,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "DispatchTime<T::BlockNumber>",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 0,
                                docs: [
                                    "See [`Pallet::submit`].",
                                ],
                            },
                            Variant {
                                name: "place_decision_deposit",
                                fields: [
                                    Field {
                                        name: Some(
                                            "index",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 4,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "ReferendumIndex",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 1,
                                docs: [
                                    "See [`Pallet::place_decision_deposit`].",
                                ],
                            },
                            Variant {
                                name: "refund_decision_deposit",
                                fields: [
                                    Field {
                                        name: Some(
                                            "index",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 4,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "ReferendumIndex",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 2,
                                docs: [
                                    "See [`Pallet::refund_decision_deposit`].",
                                ],
                            },
                            Variant {
                                name: "cancel",
                                fields: [
                                    Field {
                                        name: Some(
                                            "index",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 4,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "ReferendumIndex",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 3,
                                docs: [
                                    "See [`Pallet::cancel`].",
                                ],
                            },
                            Variant {
                                name: "kill",
                                fields: [
                                    Field {
                                        name: Some(
                                            "index",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 4,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "ReferendumIndex",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 4,
                                docs: [
                                    "See [`Pallet::kill`].",
                                ],
                            },
                            Variant {
                                name: "nudge_referendum",
                                fields: [
                                    Field {
                                        name: Some(
                                            "index",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 4,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "ReferendumIndex",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 5,
                                docs: [
                                    "See [`Pallet::nudge_referendum`].",
                                ],
                            },
                            Variant {
                                name: "one_fewer_deciding",
                                fields: [
                                    Field {
                                        name: Some(
                                            "track",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 77,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "TrackIdOf<T, I>",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 6,
                                docs: [
                                    "See [`Pallet::one_fewer_deciding`].",
                                ],
                            },
                            Variant {
                                name: "refund_submission_deposit",
                                fields: [
                                    Field {
                                        name: Some(
                                            "index",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 4,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "ReferendumIndex",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 7,
                                docs: [
                                    "See [`Pallet::refund_submission_deposit`].",
                                ],
                            },
                            Variant {
                                name: "set_metadata",
                                fields: [
                                    Field {
                                        name: Some(
                                            "index",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 4,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "ReferendumIndex",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "maybe_hash",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 138,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "Option<PreimageHash>",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 8,
                                docs: [
                                    "See [`Pallet::set_metadata`].",
                                ],
                            },
                        ],
                    },
                ),
                docs: [
                    "Contains a variant per dispatchable extrinsic that this pallet has.",
                ],
            },
        },
        PortableType {
            id: 152,
            ty: Type {
                path: Path {
                    segments: [
                        "polkadot_runtime",
                        "OriginCaller",
                    ],
                },
                type_params: [],
                type_def: Variant(
                    TypeDefVariant {
                        variants: [
                            Variant {
                                name: "system",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 153,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "frame_system::Origin<Runtime>",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 0,
                                docs: [],
                            },
                            Variant {
                                name: "Council",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 154,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "pallet_collective::Origin<Runtime, pallet_collective::Instance1>",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 15,
                                docs: [],
                            },
                            Variant {
                                name: "TechnicalCommittee",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 155,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "pallet_collective::Origin<Runtime, pallet_collective::Instance2>",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 16,
                                docs: [],
                            },
                            Variant {
                                name: "Origins",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 156,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "pallet_custom_origins::Origin",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 22,
                                docs: [],
                            },
                            Variant {
                                name: "ParachainsOrigin",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 157,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "parachains_origin::Origin",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 50,
                                docs: [],
                            },
                            Variant {
                                name: "XcmPallet",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 159,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "pallet_xcm::Origin",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 99,
                                docs: [],
                            },
                            Variant {
                                name: "Void",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 167,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "self::sp_api_hidden_includes_construct_runtime::hidden_include::Void",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 6,
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 153,
            ty: Type {
                path: Path {
                    segments: [
                        "frame_support",
                        "dispatch",
                        "RawOrigin",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "AccountId",
                        ty: Some(
                            UntrackedSymbol {
                                id: 0,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ),
                    },
                ],
                type_def: Variant(
                    TypeDefVariant {
                        variants: [
                            Variant {
                                name: "Root",
                                fields: [],
                                index: 0,
                                docs: [],
                            },
                            Variant {
                                name: "Signed",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 0,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "AccountId",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 1,
                                docs: [],
                            },
                            Variant {
                                name: "None",
                                fields: [],
                                index: 2,
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 154,
            ty: Type {
                path: Path {
                    segments: [
                        "pallet_collective",
                        "RawOrigin",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "AccountId",
                        ty: Some(
                            UntrackedSymbol {
                                id: 0,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ),
                    },
                    TypeParameter {
                        name: "I",
                        ty: None,
                    },
                ],
                type_def: Variant(
                    TypeDefVariant {
                        variants: [
                            Variant {
                                name: "Members",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 4,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "MemberCount",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 4,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "MemberCount",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 0,
                                docs: [],
                            },
                            Variant {
                                name: "Member",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 0,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "AccountId",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 1,
                                docs: [],
                            },
                            Variant {
                                name: "_Phantom",
                                fields: [],
                                index: 2,
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 155,
            ty: Type {
                path: Path {
                    segments: [
                        "pallet_collective",
                        "RawOrigin",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "AccountId",
                        ty: Some(
                            UntrackedSymbol {
                                id: 0,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ),
                    },
                    TypeParameter {
                        name: "I",
                        ty: None,
                    },
                ],
                type_def: Variant(
                    TypeDefVariant {
                        variants: [
                            Variant {
                                name: "Members",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 4,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "MemberCount",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 4,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "MemberCount",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 0,
                                docs: [],
                            },
                            Variant {
                                name: "Member",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 0,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "AccountId",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 1,
                                docs: [],
                            },
                            Variant {
                                name: "_Phantom",
                                fields: [],
                                index: 2,
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 156,
            ty: Type {
                path: Path {
                    segments: [
                        "polkadot_runtime",
                        "governance",
                        "origins",
                        "pallet_custom_origins",
                        "Origin",
                    ],
                },
                type_params: [],
                type_def: Variant(
                    TypeDefVariant {
                        variants: [
                            Variant {
                                name: "StakingAdmin",
                                fields: [],
                                index: 0,
                                docs: [],
                            },
                            Variant {
                                name: "Treasurer",
                                fields: [],
                                index: 1,
                                docs: [],
                            },
                            Variant {
                                name: "FellowshipAdmin",
                                fields: [],
                                index: 2,
                                docs: [],
                            },
                            Variant {
                                name: "GeneralAdmin",
                                fields: [],
                                index: 3,
                                docs: [],
                            },
                            Variant {
                                name: "AuctionAdmin",
                                fields: [],
                                index: 4,
                                docs: [],
                            },
                            Variant {
                                name: "LeaseAdmin",
                                fields: [],
                                index: 5,
                                docs: [],
                            },
                            Variant {
                                name: "ReferendumCanceller",
                                fields: [],
                                index: 6,
                                docs: [],
                            },
                            Variant {
                                name: "ReferendumKiller",
                                fields: [],
                                index: 7,
                                docs: [],
                            },
                            Variant {
                                name: "SmallTipper",
                                fields: [],
                                index: 8,
                                docs: [],
                            },
                            Variant {
                                name: "BigTipper",
                                fields: [],
                                index: 9,
                                docs: [],
                            },
                            Variant {
                                name: "SmallSpender",
                                fields: [],
                                index: 10,
                                docs: [],
                            },
                            Variant {
                                name: "MediumSpender",
                                fields: [],
                                index: 11,
                                docs: [],
                            },
                            Variant {
                                name: "BigSpender",
                                fields: [],
                                index: 12,
                                docs: [],
                            },
                            Variant {
                                name: "WhitelistedCaller",
                                fields: [],
                                index: 13,
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 157,
            ty: Type {
                path: Path {
                    segments: [
                        "polkadot_runtime_parachains",
                        "origin",
                        "pallet",
                        "Origin",
                    ],
                },
                type_params: [],
                type_def: Variant(
                    TypeDefVariant {
                        variants: [
                            Variant {
                                name: "Parachain",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 158,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "ParaId",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 0,
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 158,
            ty: Type {
                path: Path {
                    segments: [
                        "polkadot_parachain",
                        "primitives",
                        "Id",
                    ],
                },
                type_params: [],
                type_def: Composite(
                    TypeDefComposite {
                        fields: [
                            Field {
                                name: None,
                                ty: UntrackedSymbol {
                                    id: 4,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "u32",
                                ),
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 159,
            ty: Type {
                path: Path {
                    segments: [
                        "pallet_xcm",
                        "pallet",
                        "Origin",
                    ],
                },
                type_params: [],
                type_def: Variant(
                    TypeDefVariant {
                        variants: [
                            Variant {
                                name: "Xcm",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 160,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "MultiLocation",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 0,
                                docs: [],
                            },
                            Variant {
                                name: "Response",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 160,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "MultiLocation",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 1,
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 160,
            ty: Type {
                path: Path {
                    segments: [
                        "xcm",
                        "v3",
                        "multilocation",
                        "MultiLocation",
                    ],
                },
                type_params: [],
                type_def: Composite(
                    TypeDefComposite {
                        fields: [
                            Field {
                                name: Some(
                                    "parents",
                                ),
                                ty: UntrackedSymbol {
                                    id: 2,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "u8",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "interior",
                                ),
                                ty: UntrackedSymbol {
                                    id: 161,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "Junctions",
                                ),
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 161,
            ty: Type {
                path: Path {
                    segments: [
                        "xcm",
                        "v3",
                        "junctions",
                        "Junctions",
                    ],
                },
                type_params: [],
                type_def: Variant(
                    TypeDefVariant {
                        variants: [
                            Variant {
                                name: "Here",
                                fields: [],
                                index: 0,
                                docs: [],
                            },
                            Variant {
                                name: "X1",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 162,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "Junction",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 1,
                                docs: [],
                            },
                            Variant {
                                name: "X2",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 162,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "Junction",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 162,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "Junction",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 2,
                                docs: [],
                            },
                            Variant {
                                name: "X3",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 162,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "Junction",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 162,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "Junction",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 162,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "Junction",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 3,
                                docs: [],
                            },
                            Variant {
                                name: "X4",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 162,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "Junction",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 162,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "Junction",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 162,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "Junction",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 162,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "Junction",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 4,
                                docs: [],
                            },
                            Variant {
                                name: "X5",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 162,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "Junction",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 162,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "Junction",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 162,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "Junction",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 162,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "Junction",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 162,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "Junction",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 5,
                                docs: [],
                            },
                            Variant {
                                name: "X6",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 162,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "Junction",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 162,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "Junction",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 162,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "Junction",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 162,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "Junction",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 162,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "Junction",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 162,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "Junction",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 6,
                                docs: [],
                            },
                            Variant {
                                name: "X7",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 162,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "Junction",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 162,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "Junction",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 162,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "Junction",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 162,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "Junction",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 162,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "Junction",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 162,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "Junction",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 162,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "Junction",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 7,
                                docs: [],
                            },
                            Variant {
                                name: "X8",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 162,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "Junction",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 162,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "Junction",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 162,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "Junction",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 162,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "Junction",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 162,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "Junction",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 162,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "Junction",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 162,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "Junction",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 162,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "Junction",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 8,
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 162,
            ty: Type {
                path: Path {
                    segments: [
                        "xcm",
                        "v3",
                        "junction",
                        "Junction",
                    ],
                },
                type_params: [],
                type_def: Variant(
                    TypeDefVariant {
                        variants: [
                            Variant {
                                name: "Parachain",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 91,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "u32",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 0,
                                docs: [],
                            },
                            Variant {
                                name: "AccountId32",
                                fields: [
                                    Field {
                                        name: Some(
                                            "network",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 163,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "Option<NetworkId>",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "id",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 1,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "[u8; 32]",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 1,
                                docs: [],
                            },
                            Variant {
                                name: "AccountIndex64",
                                fields: [
                                    Field {
                                        name: Some(
                                            "network",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 163,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "Option<NetworkId>",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "index",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 10,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "u64",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 2,
                                docs: [],
                            },
                            Variant {
                                name: "AccountKey20",
                                fields: [
                                    Field {
                                        name: Some(
                                            "network",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 163,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "Option<NetworkId>",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "key",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 102,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "[u8; 20]",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 3,
                                docs: [],
                            },
                            Variant {
                                name: "PalletInstance",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 2,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "u8",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 4,
                                docs: [],
                            },
                            Variant {
                                name: "GeneralIndex",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 60,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "u128",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 5,
                                docs: [],
                            },
                            Variant {
                                name: "GeneralKey",
                                fields: [
                                    Field {
                                        name: Some(
                                            "length",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 2,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "u8",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "data",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 1,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "[u8; 32]",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 6,
                                docs: [],
                            },
                            Variant {
                                name: "OnlyChild",
                                fields: [],
                                index: 7,
                                docs: [],
                            },
                            Variant {
                                name: "Plurality",
                                fields: [
                                    Field {
                                        name: Some(
                                            "id",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 165,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "BodyId",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "part",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 166,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "BodyPart",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 8,
                                docs: [],
                            },
                            Variant {
                                name: "GlobalConsensus",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 164,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "NetworkId",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 9,
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 163,
            ty: Type {
                path: Path {
                    segments: [
                        "Option",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "T",
                        ty: Some(
                            UntrackedSymbol {
                                id: 164,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ),
                    },
                ],
                type_def: Variant(
                    TypeDefVariant {
                        variants: [
                            Variant {
                                name: "None",
                                fields: [],
                                index: 0,
                                docs: [],
                            },
                            Variant {
                                name: "Some",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 164,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: None,
                                        docs: [],
                                    },
                                ],
                                index: 1,
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 164,
            ty: Type {
                path: Path {
                    segments: [
                        "xcm",
                        "v3",
                        "junction",
                        "NetworkId",
                    ],
                },
                type_params: [],
                type_def: Variant(
                    TypeDefVariant {
                        variants: [
                            Variant {
                                name: "ByGenesis",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 1,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "[u8; 32]",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 0,
                                docs: [],
                            },
                            Variant {
                                name: "ByFork",
                                fields: [
                                    Field {
                                        name: Some(
                                            "block_number",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 11,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "u64",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "block_hash",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 1,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "[u8; 32]",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 1,
                                docs: [],
                            },
                            Variant {
                                name: "Polkadot",
                                fields: [],
                                index: 2,
                                docs: [],
                            },
                            Variant {
                                name: "Kusama",
                                fields: [],
                                index: 3,
                                docs: [],
                            },
                            Variant {
                                name: "Westend",
                                fields: [],
                                index: 4,
                                docs: [],
                            },
                            Variant {
                                name: "Rococo",
                                fields: [],
                                index: 5,
                                docs: [],
                            },
                            Variant {
                                name: "Wococo",
                                fields: [],
                                index: 6,
                                docs: [],
                            },
                            Variant {
                                name: "Ethereum",
                                fields: [
                                    Field {
                                        name: Some(
                                            "chain_id",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 10,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "u64",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 7,
                                docs: [],
                            },
                            Variant {
                                name: "BitcoinCore",
                                fields: [],
                                index: 8,
                                docs: [],
                            },
                            Variant {
                                name: "BitcoinCash",
                                fields: [],
                                index: 9,
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 165,
            ty: Type {
                path: Path {
                    segments: [
                        "xcm",
                        "v3",
                        "junction",
                        "BodyId",
                    ],
                },
                type_params: [],
                type_def: Variant(
                    TypeDefVariant {
                        variants: [
                            Variant {
                                name: "Unit",
                                fields: [],
                                index: 0,
                                docs: [],
                            },
                            Variant {
                                name: "Moniker",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 17,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "[u8; 4]",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 1,
                                docs: [],
                            },
                            Variant {
                                name: "Index",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 91,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "u32",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 2,
                                docs: [],
                            },
                            Variant {
                                name: "Executive",
                                fields: [],
                                index: 3,
                                docs: [],
                            },
                            Variant {
                                name: "Technical",
                                fields: [],
                                index: 4,
                                docs: [],
                            },
                            Variant {
                                name: "Legislative",
                                fields: [],
                                index: 5,
                                docs: [],
                            },
                            Variant {
                                name: "Judicial",
                                fields: [],
                                index: 6,
                                docs: [],
                            },
                            Variant {
                                name: "Defense",
                                fields: [],
                                index: 7,
                                docs: [],
                            },
                            Variant {
                                name: "Administration",
                                fields: [],
                                index: 8,
                                docs: [],
                            },
                            Variant {
                                name: "Treasury",
                                fields: [],
                                index: 9,
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 166,
            ty: Type {
                path: Path {
                    segments: [
                        "xcm",
                        "v3",
                        "junction",
                        "BodyPart",
                    ],
                },
                type_params: [],
                type_def: Variant(
                    TypeDefVariant {
                        variants: [
                            Variant {
                                name: "Voice",
                                fields: [],
                                index: 0,
                                docs: [],
                            },
                            Variant {
                                name: "Members",
                                fields: [
                                    Field {
                                        name: Some(
                                            "count",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 91,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "u32",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 1,
                                docs: [],
                            },
                            Variant {
                                name: "Fraction",
                                fields: [
                                    Field {
                                        name: Some(
                                            "nom",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 91,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "u32",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "denom",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 91,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "u32",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 2,
                                docs: [],
                            },
                            Variant {
                                name: "AtLeastProportion",
                                fields: [
                                    Field {
                                        name: Some(
                                            "nom",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 91,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "u32",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "denom",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 91,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "u32",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 3,
                                docs: [],
                            },
                            Variant {
                                name: "MoreThanProportion",
                                fields: [
                                    Field {
                                        name: Some(
                                            "nom",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 91,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "u32",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "denom",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 91,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "u32",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 4,
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 167,
            ty: Type {
                path: Path {
                    segments: [
                        "sp_core",
                        "Void",
                    ],
                },
                type_params: [],
                type_def: Variant(
                    TypeDefVariant {
                        variants: [],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 168,
            ty: Type {
                path: Path {
                    segments: [
                        "frame_support",
                        "traits",
                        "schedule",
                        "DispatchTime",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "BlockNumber",
                        ty: Some(
                            UntrackedSymbol {
                                id: 4,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ),
                    },
                ],
                type_def: Variant(
                    TypeDefVariant {
                        variants: [
                            Variant {
                                name: "At",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 4,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "BlockNumber",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 0,
                                docs: [],
                            },
                            Variant {
                                name: "After",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 4,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "BlockNumber",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 1,
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 169,
            ty: Type {
                path: Path {
                    segments: [
                        "pallet_whitelist",
                        "pallet",
                        "Call",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "T",
                        ty: None,
                    },
                ],
                type_def: Variant(
                    TypeDefVariant {
                        variants: [
                            Variant {
                                name: "whitelist_call",
                                fields: [
                                    Field {
                                        name: Some(
                                            "call_hash",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 12,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "PreimageHash",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 0,
                                docs: [
                                    "See [`Pallet::whitelist_call`].",
                                ],
                            },
                            Variant {
                                name: "remove_whitelisted_call",
                                fields: [
                                    Field {
                                        name: Some(
                                            "call_hash",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 12,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "PreimageHash",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 1,
                                docs: [
                                    "See [`Pallet::remove_whitelisted_call`].",
                                ],
                            },
                            Variant {
                                name: "dispatch_whitelisted_call",
                                fields: [
                                    Field {
                                        name: Some(
                                            "call_hash",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 12,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "PreimageHash",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "call_encoded_len",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 4,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "u32",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "call_weight_witness",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 9,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "Weight",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 2,
                                docs: [
                                    "See [`Pallet::dispatch_whitelisted_call`].",
                                ],
                            },
                            Variant {
                                name: "dispatch_whitelisted_call_with_preimage",
                                fields: [
                                    Field {
                                        name: Some(
                                            "call",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 79,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "Box<<T as Config>::RuntimeCall>",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 3,
                                docs: [
                                    "See [`Pallet::dispatch_whitelisted_call_with_preimage`].",
                                ],
                            },
                        ],
                    },
                ),
                docs: [
                    "Contains a variant per dispatchable extrinsic that this pallet has.",
                ],
            },
        },
        PortableType {
            id: 170,
            ty: Type {
                path: Path {
                    segments: [
                        "polkadot_runtime_common",
                        "claims",
                        "pallet",
                        "Call",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "T",
                        ty: None,
                    },
                ],
                type_def: Variant(
                    TypeDefVariant {
                        variants: [
                            Variant {
                                name: "claim",
                                fields: [
                                    Field {
                                        name: Some(
                                            "dest",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 0,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "T::AccountId",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "ethereum_signature",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 171,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "EcdsaSignature",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 0,
                                docs: [
                                    "See [`Pallet::claim`].",
                                ],
                            },
                            Variant {
                                name: "mint_claim",
                                fields: [
                                    Field {
                                        name: Some(
                                            "who",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 173,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "EthereumAddress",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "value",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 6,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "BalanceOf<T>",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "vesting_schedule",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 174,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "Option<(BalanceOf<T>, BalanceOf<T>, T::BlockNumber)>",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "statement",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 176,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "Option<StatementKind>",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 1,
                                docs: [
                                    "See [`Pallet::mint_claim`].",
                                ],
                            },
                            Variant {
                                name: "claim_attest",
                                fields: [
                                    Field {
                                        name: Some(
                                            "dest",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 0,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "T::AccountId",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "ethereum_signature",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 171,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "EcdsaSignature",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "statement",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 13,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "Vec<u8>",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 2,
                                docs: [
                                    "See [`Pallet::claim_attest`].",
                                ],
                            },
                            Variant {
                                name: "attest",
                                fields: [
                                    Field {
                                        name: Some(
                                            "statement",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 13,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "Vec<u8>",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 3,
                                docs: [
                                    "See [`Pallet::attest`].",
                                ],
                            },
                            Variant {
                                name: "move_claim",
                                fields: [
                                    Field {
                                        name: Some(
                                            "old",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 173,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "EthereumAddress",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "new",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 173,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "EthereumAddress",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "maybe_preclaim",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 140,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "Option<T::AccountId>",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 4,
                                docs: [
                                    "See [`Pallet::move_claim`].",
                                ],
                            },
                        ],
                    },
                ),
                docs: [
                    "Contains a variant per dispatchable extrinsic that this pallet has.",
                ],
            },
        },
        PortableType {
            id: 171,
            ty: Type {
                path: Path {
                    segments: [
                        "polkadot_runtime_common",
                        "claims",
                        "EcdsaSignature",
                    ],
                },
                type_params: [],
                type_def: Composite(
                    TypeDefComposite {
                        fields: [
                            Field {
                                name: None,
                                ty: UntrackedSymbol {
                                    id: 172,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "[u8; 65]",
                                ),
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 172,
            ty: Type {
                path: Path {
                    segments: [],
                },
                type_params: [],
                type_def: Array(
                    TypeDefArray {
                        len: 65,
                        type_param: UntrackedSymbol {
                            id: 2,
                            marker: PhantomData<fn() -> core::any::TypeId>,
                        },
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 173,
            ty: Type {
                path: Path {
                    segments: [
                        "polkadot_runtime_common",
                        "claims",
                        "EthereumAddress",
                    ],
                },
                type_params: [],
                type_def: Composite(
                    TypeDefComposite {
                        fields: [
                            Field {
                                name: None,
                                ty: UntrackedSymbol {
                                    id: 102,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "[u8; 20]",
                                ),
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 174,
            ty: Type {
                path: Path {
                    segments: [
                        "Option",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "T",
                        ty: Some(
                            UntrackedSymbol {
                                id: 175,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ),
                    },
                ],
                type_def: Variant(
                    TypeDefVariant {
                        variants: [
                            Variant {
                                name: "None",
                                fields: [],
                                index: 0,
                                docs: [],
                            },
                            Variant {
                                name: "Some",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 175,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: None,
                                        docs: [],
                                    },
                                ],
                                index: 1,
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 175,
            ty: Type {
                path: Path {
                    segments: [],
                },
                type_params: [],
                type_def: Tuple(
                    TypeDefTuple {
                        fields: [
                            UntrackedSymbol {
                                id: 6,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                            UntrackedSymbol {
                                id: 6,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                            UntrackedSymbol {
                                id: 4,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 176,
            ty: Type {
                path: Path {
                    segments: [
                        "Option",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "T",
                        ty: Some(
                            UntrackedSymbol {
                                id: 177,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ),
                    },
                ],
                type_def: Variant(
                    TypeDefVariant {
                        variants: [
                            Variant {
                                name: "None",
                                fields: [],
                                index: 0,
                                docs: [],
                            },
                            Variant {
                                name: "Some",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 177,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: None,
                                        docs: [],
                                    },
                                ],
                                index: 1,
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 177,
            ty: Type {
                path: Path {
                    segments: [
                        "polkadot_runtime_common",
                        "claims",
                        "StatementKind",
                    ],
                },
                type_params: [],
                type_def: Variant(
                    TypeDefVariant {
                        variants: [
                            Variant {
                                name: "Regular",
                                fields: [],
                                index: 0,
                                docs: [],
                            },
                            Variant {
                                name: "Saft",
                                fields: [],
                                index: 1,
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 178,
            ty: Type {
                path: Path {
                    segments: [
                        "pallet_vesting",
                        "pallet",
                        "Call",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "T",
                        ty: None,
                    },
                ],
                type_def: Variant(
                    TypeDefVariant {
                        variants: [
                            Variant {
                                name: "vest",
                                fields: [],
                                index: 0,
                                docs: [
                                    "See [`Pallet::vest`].",
                                ],
                            },
                            Variant {
                                name: "vest_other",
                                fields: [
                                    Field {
                                        name: Some(
                                            "target",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 100,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "AccountIdLookupOf<T>",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 1,
                                docs: [
                                    "See [`Pallet::vest_other`].",
                                ],
                            },
                            Variant {
                                name: "vested_transfer",
                                fields: [
                                    Field {
                                        name: Some(
                                            "target",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 100,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "AccountIdLookupOf<T>",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "schedule",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 179,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "VestingInfo<BalanceOf<T>, T::BlockNumber>",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 2,
                                docs: [
                                    "See [`Pallet::vested_transfer`].",
                                ],
                            },
                            Variant {
                                name: "force_vested_transfer",
                                fields: [
                                    Field {
                                        name: Some(
                                            "source",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 100,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "AccountIdLookupOf<T>",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "target",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 100,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "AccountIdLookupOf<T>",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "schedule",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 179,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "VestingInfo<BalanceOf<T>, T::BlockNumber>",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 3,
                                docs: [
                                    "See [`Pallet::force_vested_transfer`].",
                                ],
                            },
                            Variant {
                                name: "merge_schedules",
                                fields: [
                                    Field {
                                        name: Some(
                                            "schedule1_index",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 4,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "u32",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "schedule2_index",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 4,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "u32",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 4,
                                docs: [
                                    "See [`Pallet::merge_schedules`].",
                                ],
                            },
                        ],
                    },
                ),
                docs: [
                    "Contains a variant per dispatchable extrinsic that this pallet has.",
                ],
            },
        },
        PortableType {
            id: 179,
            ty: Type {
                path: Path {
                    segments: [
                        "pallet_vesting",
                        "vesting_info",
                        "VestingInfo",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "Balance",
                        ty: Some(
                            UntrackedSymbol {
                                id: 6,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ),
                    },
                    TypeParameter {
                        name: "BlockNumber",
                        ty: Some(
                            UntrackedSymbol {
                                id: 4,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ),
                    },
                ],
                type_def: Composite(
                    TypeDefComposite {
                        fields: [
                            Field {
                                name: Some(
                                    "locked",
                                ),
                                ty: UntrackedSymbol {
                                    id: 6,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "Balance",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "per_block",
                                ),
                                ty: UntrackedSymbol {
                                    id: 6,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "Balance",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "starting_block",
                                ),
                                ty: UntrackedSymbol {
                                    id: 4,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "BlockNumber",
                                ),
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 180,
            ty: Type {
                path: Path {
                    segments: [
                        "pallet_utility",
                        "pallet",
                        "Call",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "T",
                        ty: None,
                    },
                ],
                type_def: Variant(
                    TypeDefVariant {
                        variants: [
                            Variant {
                                name: "batch",
                                fields: [
                                    Field {
                                        name: Some(
                                            "calls",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 181,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "Vec<<T as Config>::RuntimeCall>",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 0,
                                docs: [
                                    "See [`Pallet::batch`].",
                                ],
                            },
                            Variant {
                                name: "as_derivative",
                                fields: [
                                    Field {
                                        name: Some(
                                            "index",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 77,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "u16",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "call",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 79,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "Box<<T as Config>::RuntimeCall>",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 1,
                                docs: [
                                    "See [`Pallet::as_derivative`].",
                                ],
                            },
                            Variant {
                                name: "batch_all",
                                fields: [
                                    Field {
                                        name: Some(
                                            "calls",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 181,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "Vec<<T as Config>::RuntimeCall>",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 2,
                                docs: [
                                    "See [`Pallet::batch_all`].",
                                ],
                            },
                            Variant {
                                name: "dispatch_as",
                                fields: [
                                    Field {
                                        name: Some(
                                            "as_origin",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 152,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "Box<T::PalletsOrigin>",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "call",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 79,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "Box<<T as Config>::RuntimeCall>",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 3,
                                docs: [
                                    "See [`Pallet::dispatch_as`].",
                                ],
                            },
                            Variant {
                                name: "force_batch",
                                fields: [
                                    Field {
                                        name: Some(
                                            "calls",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 181,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "Vec<<T as Config>::RuntimeCall>",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 4,
                                docs: [
                                    "See [`Pallet::force_batch`].",
                                ],
                            },
                            Variant {
                                name: "with_weight",
                                fields: [
                                    Field {
                                        name: Some(
                                            "call",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 79,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "Box<<T as Config>::RuntimeCall>",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "weight",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 9,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "Weight",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 5,
                                docs: [
                                    "See [`Pallet::with_weight`].",
                                ],
                            },
                        ],
                    },
                ),
                docs: [
                    "Contains a variant per dispatchable extrinsic that this pallet has.",
                ],
            },
        },
        PortableType {
            id: 181,
            ty: Type {
                path: Path {
                    segments: [],
                },
                type_params: [],
                type_def: Sequence(
                    TypeDefSequence {
                        type_param: UntrackedSymbol {
                            id: 79,
                            marker: PhantomData<fn() -> core::any::TypeId>,
                        },
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 182,
            ty: Type {
                path: Path {
                    segments: [
                        "pallet_identity",
                        "pallet",
                        "Call",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "T",
                        ty: None,
                    },
                ],
                type_def: Variant(
                    TypeDefVariant {
                        variants: [
                            Variant {
                                name: "add_registrar",
                                fields: [
                                    Field {
                                        name: Some(
                                            "account",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 100,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "AccountIdLookupOf<T>",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 0,
                                docs: [
                                    "See [`Pallet::add_registrar`].",
                                ],
                            },
                            Variant {
                                name: "set_identity",
                                fields: [
                                    Field {
                                        name: Some(
                                            "info",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 183,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "Box<IdentityInfo<T::MaxAdditionalFields>>",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 1,
                                docs: [
                                    "See [`Pallet::set_identity`].",
                                ],
                            },
                            Variant {
                                name: "set_subs",
                                fields: [
                                    Field {
                                        name: Some(
                                            "subs",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 218,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "Vec<(T::AccountId, Data)>",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 2,
                                docs: [
                                    "See [`Pallet::set_subs`].",
                                ],
                            },
                            Variant {
                                name: "clear_identity",
                                fields: [],
                                index: 3,
                                docs: [
                                    "See [`Pallet::clear_identity`].",
                                ],
                            },
                            Variant {
                                name: "request_judgement",
                                fields: [
                                    Field {
                                        name: Some(
                                            "reg_index",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 91,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "RegistrarIndex",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "max_fee",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 60,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "BalanceOf<T>",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 4,
                                docs: [
                                    "See [`Pallet::request_judgement`].",
                                ],
                            },
                            Variant {
                                name: "cancel_request",
                                fields: [
                                    Field {
                                        name: Some(
                                            "reg_index",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 4,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "RegistrarIndex",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 5,
                                docs: [
                                    "See [`Pallet::cancel_request`].",
                                ],
                            },
                            Variant {
                                name: "set_fee",
                                fields: [
                                    Field {
                                        name: Some(
                                            "index",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 91,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "RegistrarIndex",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "fee",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 60,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "BalanceOf<T>",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 6,
                                docs: [
                                    "See [`Pallet::set_fee`].",
                                ],
                            },
                            Variant {
                                name: "set_account_id",
                                fields: [
                                    Field {
                                        name: Some(
                                            "index",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 91,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "RegistrarIndex",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "new",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 100,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "AccountIdLookupOf<T>",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 7,
                                docs: [
                                    "See [`Pallet::set_account_id`].",
                                ],
                            },
                            Variant {
                                name: "set_fields",
                                fields: [
                                    Field {
                                        name: Some(
                                            "index",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 91,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "RegistrarIndex",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "fields",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 220,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "IdentityFields",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 8,
                                docs: [
                                    "See [`Pallet::set_fields`].",
                                ],
                            },
                            Variant {
                                name: "provide_judgement",
                                fields: [
                                    Field {
                                        name: Some(
                                            "reg_index",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 91,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "RegistrarIndex",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "target",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 100,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "AccountIdLookupOf<T>",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "judgement",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 222,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "Judgement<BalanceOf<T>>",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "identity",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 12,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "T::Hash",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 9,
                                docs: [
                                    "See [`Pallet::provide_judgement`].",
                                ],
                            },
                            Variant {
                                name: "kill_identity",
                                fields: [
                                    Field {
                                        name: Some(
                                            "target",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 100,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "AccountIdLookupOf<T>",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 10,
                                docs: [
                                    "See [`Pallet::kill_identity`].",
                                ],
                            },
                            Variant {
                                name: "add_sub",
                                fields: [
                                    Field {
                                        name: Some(
                                            "sub",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 100,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "AccountIdLookupOf<T>",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "data",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 186,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "Data",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 11,
                                docs: [
                                    "See [`Pallet::add_sub`].",
                                ],
                            },
                            Variant {
                                name: "rename_sub",
                                fields: [
                                    Field {
                                        name: Some(
                                            "sub",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 100,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "AccountIdLookupOf<T>",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "data",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 186,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "Data",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 12,
                                docs: [
                                    "See [`Pallet::rename_sub`].",
                                ],
                            },
                            Variant {
                                name: "remove_sub",
                                fields: [
                                    Field {
                                        name: Some(
                                            "sub",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 100,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "AccountIdLookupOf<T>",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 13,
                                docs: [
                                    "See [`Pallet::remove_sub`].",
                                ],
                            },
                            Variant {
                                name: "quit_sub",
                                fields: [],
                                index: 14,
                                docs: [
                                    "See [`Pallet::quit_sub`].",
                                ],
                            },
                        ],
                    },
                ),
                docs: [
                    "Identity pallet declaration.",
                ],
            },
        },
        PortableType {
            id: 183,
            ty: Type {
                path: Path {
                    segments: [
                        "pallet_identity",
                        "types",
                        "IdentityInfo",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "FieldLimit",
                        ty: None,
                    },
                ],
                type_def: Composite(
                    TypeDefComposite {
                        fields: [
                            Field {
                                name: Some(
                                    "additional",
                                ),
                                ty: UntrackedSymbol {
                                    id: 184,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "BoundedVec<(Data, Data), FieldLimit>",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "display",
                                ),
                                ty: UntrackedSymbol {
                                    id: 186,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "Data",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "legal",
                                ),
                                ty: UntrackedSymbol {
                                    id: 186,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "Data",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "web",
                                ),
                                ty: UntrackedSymbol {
                                    id: 186,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "Data",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "riot",
                                ),
                                ty: UntrackedSymbol {
                                    id: 186,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "Data",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "email",
                                ),
                                ty: UntrackedSymbol {
                                    id: 186,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "Data",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "pgp_fingerprint",
                                ),
                                ty: UntrackedSymbol {
                                    id: 217,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "Option<[u8; 20]>",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "image",
                                ),
                                ty: UntrackedSymbol {
                                    id: 186,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "Data",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "twitter",
                                ),
                                ty: UntrackedSymbol {
                                    id: 186,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "Data",
                                ),
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 184,
            ty: Type {
                path: Path {
                    segments: [
                        "bounded_collections",
                        "bounded_vec",
                        "BoundedVec",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "T",
                        ty: Some(
                            UntrackedSymbol {
                                id: 185,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ),
                    },
                    TypeParameter {
                        name: "S",
                        ty: None,
                    },
                ],
                type_def: Composite(
                    TypeDefComposite {
                        fields: [
                            Field {
                                name: None,
                                ty: UntrackedSymbol {
                                    id: 216,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "Vec<T>",
                                ),
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 185,
            ty: Type {
                path: Path {
                    segments: [],
                },
                type_params: [],
                type_def: Tuple(
                    TypeDefTuple {
                        fields: [
                            UntrackedSymbol {
                                id: 186,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                            UntrackedSymbol {
                                id: 186,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 186,
            ty: Type {
                path: Path {
                    segments: [
                        "pallet_identity",
                        "types",
                        "Data",
                    ],
                },
                type_params: [],
                type_def: Variant(
                    TypeDefVariant {
                        variants: [
                            Variant {
                                name: "None",
                                fields: [],
                                index: 0,
                                docs: [],
                            },
                            Variant {
                                name: "Raw0",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 187,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: None,
                                        docs: [],
                                    },
                                ],
                                index: 1,
                                docs: [],
                            },
                            Variant {
                                name: "Raw1",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 188,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: None,
                                        docs: [],
                                    },
                                ],
                                index: 2,
                                docs: [],
                            },
                            Variant {
                                name: "Raw2",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 189,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: None,
                                        docs: [],
                                    },
                                ],
                                index: 3,
                                docs: [],
                            },
                            Variant {
                                name: "Raw3",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 190,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: None,
                                        docs: [],
                                    },
                                ],
                                index: 4,
                                docs: [],
                            },
                            Variant {
                                name: "Raw4",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 17,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: None,
                                        docs: [],
                                    },
                                ],
                                index: 5,
                                docs: [],
                            },
                            Variant {
                                name: "Raw5",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 191,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: None,
                                        docs: [],
                                    },
                                ],
                                index: 6,
                                docs: [],
                            },
                            Variant {
                                name: "Raw6",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 192,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: None,
                                        docs: [],
                                    },
                                ],
                                index: 7,
                                docs: [],
                            },
                            Variant {
                                name: "Raw7",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 193,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: None,
                                        docs: [],
                                    },
                                ],
                                index: 8,
                                docs: [],
                            },
                            Variant {
                                name: "Raw8",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 194,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: None,
                                        docs: [],
                                    },
                                ],
                                index: 9,
                                docs: [],
                            },
                            Variant {
                                name: "Raw9",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 195,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: None,
                                        docs: [],
                                    },
                                ],
                                index: 10,
                                docs: [],
                            },
                            Variant {
                                name: "Raw10",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 196,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: None,
                                        docs: [],
                                    },
                                ],
                                index: 11,
                                docs: [],
                            },
                            Variant {
                                name: "Raw11",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 197,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: None,
                                        docs: [],
                                    },
                                ],
                                index: 12,
                                docs: [],
                            },
                            Variant {
                                name: "Raw12",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 198,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: None,
                                        docs: [],
                                    },
                                ],
                                index: 13,
                                docs: [],
                            },
                            Variant {
                                name: "Raw13",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 199,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: None,
                                        docs: [],
                                    },
                                ],
                                index: 14,
                                docs: [],
                            },
                            Variant {
                                name: "Raw14",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 200,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: None,
                                        docs: [],
                                    },
                                ],
                                index: 15,
                                docs: [],
                            },
                            Variant {
                                name: "Raw15",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 201,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: None,
                                        docs: [],
                                    },
                                ],
                                index: 16,
                                docs: [],
                            },
                            Variant {
                                name: "Raw16",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 47,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: None,
                                        docs: [],
                                    },
                                ],
                                index: 17,
                                docs: [],
                            },
                            Variant {
                                name: "Raw17",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 202,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: None,
                                        docs: [],
                                    },
                                ],
                                index: 18,
                                docs: [],
                            },
                            Variant {
                                name: "Raw18",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 203,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: None,
                                        docs: [],
                                    },
                                ],
                                index: 19,
                                docs: [],
                            },
                            Variant {
                                name: "Raw19",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 204,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: None,
                                        docs: [],
                                    },
                                ],
                                index: 20,
                                docs: [],
                            },
                            Variant {
                                name: "Raw20",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 102,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: None,
                                        docs: [],
                                    },
                                ],
                                index: 21,
                                docs: [],
                            },
                            Variant {
                                name: "Raw21",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 205,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: None,
                                        docs: [],
                                    },
                                ],
                                index: 22,
                                docs: [],
                            },
                            Variant {
                                name: "Raw22",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 206,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: None,
                                        docs: [],
                                    },
                                ],
                                index: 23,
                                docs: [],
                            },
                            Variant {
                                name: "Raw23",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 207,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: None,
                                        docs: [],
                                    },
                                ],
                                index: 24,
                                docs: [],
                            },
                            Variant {
                                name: "Raw24",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 208,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: None,
                                        docs: [],
                                    },
                                ],
                                index: 25,
                                docs: [],
                            },
                            Variant {
                                name: "Raw25",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 209,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: None,
                                        docs: [],
                                    },
                                ],
                                index: 26,
                                docs: [],
                            },
                            Variant {
                                name: "Raw26",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 210,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: None,
                                        docs: [],
                                    },
                                ],
                                index: 27,
                                docs: [],
                            },
                            Variant {
                                name: "Raw27",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 211,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: None,
                                        docs: [],
                                    },
                                ],
                                index: 28,
                                docs: [],
                            },
                            Variant {
                                name: "Raw28",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 212,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: None,
                                        docs: [],
                                    },
                                ],
                                index: 29,
                                docs: [],
                            },
                            Variant {
                                name: "Raw29",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 213,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: None,
                                        docs: [],
                                    },
                                ],
                                index: 30,
                                docs: [],
                            },
                            Variant {
                                name: "Raw30",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 214,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: None,
                                        docs: [],
                                    },
                                ],
                                index: 31,
                                docs: [],
                            },
                            Variant {
                                name: "Raw31",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 215,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: None,
                                        docs: [],
                                    },
                                ],
                                index: 32,
                                docs: [],
                            },
                            Variant {
                                name: "Raw32",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 1,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: None,
                                        docs: [],
                                    },
                                ],
                                index: 33,
                                docs: [],
                            },
                            Variant {
                                name: "BlakeTwo256",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 1,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: None,
                                        docs: [],
                                    },
                                ],
                                index: 34,
                                docs: [],
                            },
                            Variant {
                                name: "Sha256",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 1,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: None,
                                        docs: [],
                                    },
                                ],
                                index: 35,
                                docs: [],
                            },
                            Variant {
                                name: "Keccak256",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 1,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: None,
                                        docs: [],
                                    },
                                ],
                                index: 36,
                                docs: [],
                            },
                            Variant {
                                name: "ShaThree256",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 1,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: None,
                                        docs: [],
                                    },
                                ],
                                index: 37,
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 187,
            ty: Type {
                path: Path {
                    segments: [],
                },
                type_params: [],
                type_def: Array(
                    TypeDefArray {
                        len: 0,
                        type_param: UntrackedSymbol {
                            id: 2,
                            marker: PhantomData<fn() -> core::any::TypeId>,
                        },
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 188,
            ty: Type {
                path: Path {
                    segments: [],
                },
                type_params: [],
                type_def: Array(
                    TypeDefArray {
                        len: 1,
                        type_param: UntrackedSymbol {
                            id: 2,
                            marker: PhantomData<fn() -> core::any::TypeId>,
                        },
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 189,
            ty: Type {
                path: Path {
                    segments: [],
                },
                type_params: [],
                type_def: Array(
                    TypeDefArray {
                        len: 2,
                        type_param: UntrackedSymbol {
                            id: 2,
                            marker: PhantomData<fn() -> core::any::TypeId>,
                        },
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 190,
            ty: Type {
                path: Path {
                    segments: [],
                },
                type_params: [],
                type_def: Array(
                    TypeDefArray {
                        len: 3,
                        type_param: UntrackedSymbol {
                            id: 2,
                            marker: PhantomData<fn() -> core::any::TypeId>,
                        },
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 191,
            ty: Type {
                path: Path {
                    segments: [],
                },
                type_params: [],
                type_def: Array(
                    TypeDefArray {
                        len: 5,
                        type_param: UntrackedSymbol {
                            id: 2,
                            marker: PhantomData<fn() -> core::any::TypeId>,
                        },
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 192,
            ty: Type {
                path: Path {
                    segments: [],
                },
                type_params: [],
                type_def: Array(
                    TypeDefArray {
                        len: 6,
                        type_param: UntrackedSymbol {
                            id: 2,
                            marker: PhantomData<fn() -> core::any::TypeId>,
                        },
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 193,
            ty: Type {
                path: Path {
                    segments: [],
                },
                type_params: [],
                type_def: Array(
                    TypeDefArray {
                        len: 7,
                        type_param: UntrackedSymbol {
                            id: 2,
                            marker: PhantomData<fn() -> core::any::TypeId>,
                        },
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 194,
            ty: Type {
                path: Path {
                    segments: [],
                },
                type_params: [],
                type_def: Array(
                    TypeDefArray {
                        len: 8,
                        type_param: UntrackedSymbol {
                            id: 2,
                            marker: PhantomData<fn() -> core::any::TypeId>,
                        },
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 195,
            ty: Type {
                path: Path {
                    segments: [],
                },
                type_params: [],
                type_def: Array(
                    TypeDefArray {
                        len: 9,
                        type_param: UntrackedSymbol {
                            id: 2,
                            marker: PhantomData<fn() -> core::any::TypeId>,
                        },
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 196,
            ty: Type {
                path: Path {
                    segments: [],
                },
                type_params: [],
                type_def: Array(
                    TypeDefArray {
                        len: 10,
                        type_param: UntrackedSymbol {
                            id: 2,
                            marker: PhantomData<fn() -> core::any::TypeId>,
                        },
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 197,
            ty: Type {
                path: Path {
                    segments: [],
                },
                type_params: [],
                type_def: Array(
                    TypeDefArray {
                        len: 11,
                        type_param: UntrackedSymbol {
                            id: 2,
                            marker: PhantomData<fn() -> core::any::TypeId>,
                        },
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 198,
            ty: Type {
                path: Path {
                    segments: [],
                },
                type_params: [],
                type_def: Array(
                    TypeDefArray {
                        len: 12,
                        type_param: UntrackedSymbol {
                            id: 2,
                            marker: PhantomData<fn() -> core::any::TypeId>,
                        },
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 199,
            ty: Type {
                path: Path {
                    segments: [],
                },
                type_params: [],
                type_def: Array(
                    TypeDefArray {
                        len: 13,
                        type_param: UntrackedSymbol {
                            id: 2,
                            marker: PhantomData<fn() -> core::any::TypeId>,
                        },
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 200,
            ty: Type {
                path: Path {
                    segments: [],
                },
                type_params: [],
                type_def: Array(
                    TypeDefArray {
                        len: 14,
                        type_param: UntrackedSymbol {
                            id: 2,
                            marker: PhantomData<fn() -> core::any::TypeId>,
                        },
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 201,
            ty: Type {
                path: Path {
                    segments: [],
                },
                type_params: [],
                type_def: Array(
                    TypeDefArray {
                        len: 15,
                        type_param: UntrackedSymbol {
                            id: 2,
                            marker: PhantomData<fn() -> core::any::TypeId>,
                        },
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 202,
            ty: Type {
                path: Path {
                    segments: [],
                },
                type_params: [],
                type_def: Array(
                    TypeDefArray {
                        len: 17,
                        type_param: UntrackedSymbol {
                            id: 2,
                            marker: PhantomData<fn() -> core::any::TypeId>,
                        },
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 203,
            ty: Type {
                path: Path {
                    segments: [],
                },
                type_params: [],
                type_def: Array(
                    TypeDefArray {
                        len: 18,
                        type_param: UntrackedSymbol {
                            id: 2,
                            marker: PhantomData<fn() -> core::any::TypeId>,
                        },
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 204,
            ty: Type {
                path: Path {
                    segments: [],
                },
                type_params: [],
                type_def: Array(
                    TypeDefArray {
                        len: 19,
                        type_param: UntrackedSymbol {
                            id: 2,
                            marker: PhantomData<fn() -> core::any::TypeId>,
                        },
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 205,
            ty: Type {
                path: Path {
                    segments: [],
                },
                type_params: [],
                type_def: Array(
                    TypeDefArray {
                        len: 21,
                        type_param: UntrackedSymbol {
                            id: 2,
                            marker: PhantomData<fn() -> core::any::TypeId>,
                        },
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 206,
            ty: Type {
                path: Path {
                    segments: [],
                },
                type_params: [],
                type_def: Array(
                    TypeDefArray {
                        len: 22,
                        type_param: UntrackedSymbol {
                            id: 2,
                            marker: PhantomData<fn() -> core::any::TypeId>,
                        },
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 207,
            ty: Type {
                path: Path {
                    segments: [],
                },
                type_params: [],
                type_def: Array(
                    TypeDefArray {
                        len: 23,
                        type_param: UntrackedSymbol {
                            id: 2,
                            marker: PhantomData<fn() -> core::any::TypeId>,
                        },
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 208,
            ty: Type {
                path: Path {
                    segments: [],
                },
                type_params: [],
                type_def: Array(
                    TypeDefArray {
                        len: 24,
                        type_param: UntrackedSymbol {
                            id: 2,
                            marker: PhantomData<fn() -> core::any::TypeId>,
                        },
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 209,
            ty: Type {
                path: Path {
                    segments: [],
                },
                type_params: [],
                type_def: Array(
                    TypeDefArray {
                        len: 25,
                        type_param: UntrackedSymbol {
                            id: 2,
                            marker: PhantomData<fn() -> core::any::TypeId>,
                        },
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 210,
            ty: Type {
                path: Path {
                    segments: [],
                },
                type_params: [],
                type_def: Array(
                    TypeDefArray {
                        len: 26,
                        type_param: UntrackedSymbol {
                            id: 2,
                            marker: PhantomData<fn() -> core::any::TypeId>,
                        },
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 211,
            ty: Type {
                path: Path {
                    segments: [],
                },
                type_params: [],
                type_def: Array(
                    TypeDefArray {
                        len: 27,
                        type_param: UntrackedSymbol {
                            id: 2,
                            marker: PhantomData<fn() -> core::any::TypeId>,
                        },
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 212,
            ty: Type {
                path: Path {
                    segments: [],
                },
                type_params: [],
                type_def: Array(
                    TypeDefArray {
                        len: 28,
                        type_param: UntrackedSymbol {
                            id: 2,
                            marker: PhantomData<fn() -> core::any::TypeId>,
                        },
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 213,
            ty: Type {
                path: Path {
                    segments: [],
                },
                type_params: [],
                type_def: Array(
                    TypeDefArray {
                        len: 29,
                        type_param: UntrackedSymbol {
                            id: 2,
                            marker: PhantomData<fn() -> core::any::TypeId>,
                        },
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 214,
            ty: Type {
                path: Path {
                    segments: [],
                },
                type_params: [],
                type_def: Array(
                    TypeDefArray {
                        len: 30,
                        type_param: UntrackedSymbol {
                            id: 2,
                            marker: PhantomData<fn() -> core::any::TypeId>,
                        },
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 215,
            ty: Type {
                path: Path {
                    segments: [],
                },
                type_params: [],
                type_def: Array(
                    TypeDefArray {
                        len: 31,
                        type_param: UntrackedSymbol {
                            id: 2,
                            marker: PhantomData<fn() -> core::any::TypeId>,
                        },
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 216,
            ty: Type {
                path: Path {
                    segments: [],
                },
                type_params: [],
                type_def: Sequence(
                    TypeDefSequence {
                        type_param: UntrackedSymbol {
                            id: 185,
                            marker: PhantomData<fn() -> core::any::TypeId>,
                        },
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 217,
            ty: Type {
                path: Path {
                    segments: [
                        "Option",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "T",
                        ty: Some(
                            UntrackedSymbol {
                                id: 102,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ),
                    },
                ],
                type_def: Variant(
                    TypeDefVariant {
                        variants: [
                            Variant {
                                name: "None",
                                fields: [],
                                index: 0,
                                docs: [],
                            },
                            Variant {
                                name: "Some",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 102,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: None,
                                        docs: [],
                                    },
                                ],
                                index: 1,
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 218,
            ty: Type {
                path: Path {
                    segments: [],
                },
                type_params: [],
                type_def: Sequence(
                    TypeDefSequence {
                        type_param: UntrackedSymbol {
                            id: 219,
                            marker: PhantomData<fn() -> core::any::TypeId>,
                        },
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 219,
            ty: Type {
                path: Path {
                    segments: [],
                },
                type_params: [],
                type_def: Tuple(
                    TypeDefTuple {
                        fields: [
                            UntrackedSymbol {
                                id: 0,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                            UntrackedSymbol {
                                id: 186,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 220,
            ty: Type {
                path: Path {
                    segments: [
                        "pallet_identity",
                        "types",
                        "BitFlags",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "T",
                        ty: Some(
                            UntrackedSymbol {
                                id: 221,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ),
                    },
                ],
                type_def: Composite(
                    TypeDefComposite {
                        fields: [
                            Field {
                                name: None,
                                ty: UntrackedSymbol {
                                    id: 11,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "IdentityField",
                                ),
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 221,
            ty: Type {
                path: Path {
                    segments: [
                        "pallet_identity",
                        "types",
                        "IdentityField",
                    ],
                },
                type_params: [],
                type_def: Variant(
                    TypeDefVariant {
                        variants: [
                            Variant {
                                name: "Display",
                                fields: [],
                                index: 1,
                                docs: [],
                            },
                            Variant {
                                name: "Legal",
                                fields: [],
                                index: 2,
                                docs: [],
                            },
                            Variant {
                                name: "Web",
                                fields: [],
                                index: 4,
                                docs: [],
                            },
                            Variant {
                                name: "Riot",
                                fields: [],
                                index: 8,
                                docs: [],
                            },
                            Variant {
                                name: "Email",
                                fields: [],
                                index: 16,
                                docs: [],
                            },
                            Variant {
                                name: "PgpFingerprint",
                                fields: [],
                                index: 32,
                                docs: [],
                            },
                            Variant {
                                name: "Image",
                                fields: [],
                                index: 64,
                                docs: [],
                            },
                            Variant {
                                name: "Twitter",
                                fields: [],
                                index: 128,
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 222,
            ty: Type {
                path: Path {
                    segments: [
                        "pallet_identity",
                        "types",
                        "Judgement",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "Balance",
                        ty: Some(
                            UntrackedSymbol {
                                id: 6,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ),
                    },
                ],
                type_def: Variant(
                    TypeDefVariant {
                        variants: [
                            Variant {
                                name: "Unknown",
                                fields: [],
                                index: 0,
                                docs: [],
                            },
                            Variant {
                                name: "FeePaid",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 6,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "Balance",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 1,
                                docs: [],
                            },
                            Variant {
                                name: "Reasonable",
                                fields: [],
                                index: 2,
                                docs: [],
                            },
                            Variant {
                                name: "KnownGood",
                                fields: [],
                                index: 3,
                                docs: [],
                            },
                            Variant {
                                name: "OutOfDate",
                                fields: [],
                                index: 4,
                                docs: [],
                            },
                            Variant {
                                name: "LowQuality",
                                fields: [],
                                index: 5,
                                docs: [],
                            },
                            Variant {
                                name: "Erroneous",
                                fields: [],
                                index: 6,
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 223,
            ty: Type {
                path: Path {
                    segments: [
                        "pallet_proxy",
                        "pallet",
                        "Call",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "T",
                        ty: None,
                    },
                ],
                type_def: Variant(
                    TypeDefVariant {
                        variants: [
                            Variant {
                                name: "proxy",
                                fields: [
                                    Field {
                                        name: Some(
                                            "real",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 100,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "AccountIdLookupOf<T>",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "force_proxy_type",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 224,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "Option<T::ProxyType>",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "call",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 79,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "Box<<T as Config>::RuntimeCall>",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 0,
                                docs: [
                                    "See [`Pallet::proxy`].",
                                ],
                            },
                            Variant {
                                name: "add_proxy",
                                fields: [
                                    Field {
                                        name: Some(
                                            "delegate",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 100,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "AccountIdLookupOf<T>",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "proxy_type",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 225,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "T::ProxyType",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "delay",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 4,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "T::BlockNumber",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 1,
                                docs: [
                                    "See [`Pallet::add_proxy`].",
                                ],
                            },
                            Variant {
                                name: "remove_proxy",
                                fields: [
                                    Field {
                                        name: Some(
                                            "delegate",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 100,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "AccountIdLookupOf<T>",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "proxy_type",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 225,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "T::ProxyType",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "delay",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 4,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "T::BlockNumber",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 2,
                                docs: [
                                    "See [`Pallet::remove_proxy`].",
                                ],
                            },
                            Variant {
                                name: "remove_proxies",
                                fields: [],
                                index: 3,
                                docs: [
                                    "See [`Pallet::remove_proxies`].",
                                ],
                            },
                            Variant {
                                name: "create_pure",
                                fields: [
                                    Field {
                                        name: Some(
                                            "proxy_type",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 225,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "T::ProxyType",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "delay",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 4,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "T::BlockNumber",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "index",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 77,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "u16",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 4,
                                docs: [
                                    "See [`Pallet::create_pure`].",
                                ],
                            },
                            Variant {
                                name: "kill_pure",
                                fields: [
                                    Field {
                                        name: Some(
                                            "spawner",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 100,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "AccountIdLookupOf<T>",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "proxy_type",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 225,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "T::ProxyType",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "index",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 77,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "u16",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "height",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 91,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "T::BlockNumber",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "ext_index",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 91,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "u32",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 5,
                                docs: [
                                    "See [`Pallet::kill_pure`].",
                                ],
                            },
                            Variant {
                                name: "announce",
                                fields: [
                                    Field {
                                        name: Some(
                                            "real",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 100,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "AccountIdLookupOf<T>",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "call_hash",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 12,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "CallHashOf<T>",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 6,
                                docs: [
                                    "See [`Pallet::announce`].",
                                ],
                            },
                            Variant {
                                name: "remove_announcement",
                                fields: [
                                    Field {
                                        name: Some(
                                            "real",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 100,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "AccountIdLookupOf<T>",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "call_hash",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 12,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "CallHashOf<T>",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 7,
                                docs: [
                                    "See [`Pallet::remove_announcement`].",
                                ],
                            },
                            Variant {
                                name: "reject_announcement",
                                fields: [
                                    Field {
                                        name: Some(
                                            "delegate",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 100,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "AccountIdLookupOf<T>",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "call_hash",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 12,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "CallHashOf<T>",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 8,
                                docs: [
                                    "See [`Pallet::reject_announcement`].",
                                ],
                            },
                            Variant {
                                name: "proxy_announced",
                                fields: [
                                    Field {
                                        name: Some(
                                            "delegate",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 100,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "AccountIdLookupOf<T>",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "real",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 100,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "AccountIdLookupOf<T>",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "force_proxy_type",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 224,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "Option<T::ProxyType>",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "call",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 79,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "Box<<T as Config>::RuntimeCall>",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 9,
                                docs: [
                                    "See [`Pallet::proxy_announced`].",
                                ],
                            },
                        ],
                    },
                ),
                docs: [
                    "Contains a variant per dispatchable extrinsic that this pallet has.",
                ],
            },
        },
        PortableType {
            id: 224,
            ty: Type {
                path: Path {
                    segments: [
                        "Option",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "T",
                        ty: Some(
                            UntrackedSymbol {
                                id: 225,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ),
                    },
                ],
                type_def: Variant(
                    TypeDefVariant {
                        variants: [
                            Variant {
                                name: "None",
                                fields: [],
                                index: 0,
                                docs: [],
                            },
                            Variant {
                                name: "Some",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 225,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: None,
                                        docs: [],
                                    },
                                ],
                                index: 1,
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 225,
            ty: Type {
                path: Path {
                    segments: [
                        "polkadot_runtime",
                        "ProxyType",
                    ],
                },
                type_params: [],
                type_def: Variant(
                    TypeDefVariant {
                        variants: [
                            Variant {
                                name: "Any",
                                fields: [],
                                index: 0,
                                docs: [],
                            },
                            Variant {
                                name: "NonTransfer",
                                fields: [],
                                index: 1,
                                docs: [],
                            },
                            Variant {
                                name: "Governance",
                                fields: [],
                                index: 2,
                                docs: [],
                            },
                            Variant {
                                name: "Staking",
                                fields: [],
                                index: 3,
                                docs: [],
                            },
                            Variant {
                                name: "IdentityJudgement",
                                fields: [],
                                index: 5,
                                docs: [],
                            },
                            Variant {
                                name: "CancelProxy",
                                fields: [],
                                index: 6,
                                docs: [],
                            },
                            Variant {
                                name: "Auction",
                                fields: [],
                                index: 7,
                                docs: [],
                            },
                            Variant {
                                name: "NominationPools",
                                fields: [],
                                index: 8,
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 226,
            ty: Type {
                path: Path {
                    segments: [
                        "pallet_multisig",
                        "pallet",
                        "Call",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "T",
                        ty: None,
                    },
                ],
                type_def: Variant(
                    TypeDefVariant {
                        variants: [
                            Variant {
                                name: "as_multi_threshold_1",
                                fields: [
                                    Field {
                                        name: Some(
                                            "other_signatories",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 104,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "Vec<T::AccountId>",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "call",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 79,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "Box<<T as Config>::RuntimeCall>",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 0,
                                docs: [
                                    "See [`Pallet::as_multi_threshold_1`].",
                                ],
                            },
                            Variant {
                                name: "as_multi",
                                fields: [
                                    Field {
                                        name: Some(
                                            "threshold",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 77,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "u16",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "other_signatories",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 104,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "Vec<T::AccountId>",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "maybe_timepoint",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 227,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "Option<Timepoint<T::BlockNumber>>",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "call",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 79,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "Box<<T as Config>::RuntimeCall>",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "max_weight",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 9,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "Weight",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 1,
                                docs: [
                                    "See [`Pallet::as_multi`].",
                                ],
                            },
                            Variant {
                                name: "approve_as_multi",
                                fields: [
                                    Field {
                                        name: Some(
                                            "threshold",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 77,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "u16",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "other_signatories",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 104,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "Vec<T::AccountId>",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "maybe_timepoint",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 227,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "Option<Timepoint<T::BlockNumber>>",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "call_hash",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 1,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "[u8; 32]",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "max_weight",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 9,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "Weight",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 2,
                                docs: [
                                    "See [`Pallet::approve_as_multi`].",
                                ],
                            },
                            Variant {
                                name: "cancel_as_multi",
                                fields: [
                                    Field {
                                        name: Some(
                                            "threshold",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 77,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "u16",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "other_signatories",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 104,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "Vec<T::AccountId>",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "timepoint",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 228,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "Timepoint<T::BlockNumber>",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "call_hash",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 1,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "[u8; 32]",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 3,
                                docs: [
                                    "See [`Pallet::cancel_as_multi`].",
                                ],
                            },
                        ],
                    },
                ),
                docs: [
                    "Contains a variant per dispatchable extrinsic that this pallet has.",
                ],
            },
        },
        PortableType {
            id: 227,
            ty: Type {
                path: Path {
                    segments: [
                        "Option",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "T",
                        ty: Some(
                            UntrackedSymbol {
                                id: 228,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ),
                    },
                ],
                type_def: Variant(
                    TypeDefVariant {
                        variants: [
                            Variant {
                                name: "None",
                                fields: [],
                                index: 0,
                                docs: [],
                            },
                            Variant {
                                name: "Some",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 228,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: None,
                                        docs: [],
                                    },
                                ],
                                index: 1,
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 228,
            ty: Type {
                path: Path {
                    segments: [
                        "pallet_multisig",
                        "Timepoint",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "BlockNumber",
                        ty: Some(
                            UntrackedSymbol {
                                id: 4,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ),
                    },
                ],
                type_def: Composite(
                    TypeDefComposite {
                        fields: [
                            Field {
                                name: Some(
                                    "height",
                                ),
                                ty: UntrackedSymbol {
                                    id: 4,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "BlockNumber",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "index",
                                ),
                                ty: UntrackedSymbol {
                                    id: 4,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "u32",
                                ),
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 229,
            ty: Type {
                path: Path {
                    segments: [
                        "pallet_bounties",
                        "pallet",
                        "Call",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "T",
                        ty: None,
                    },
                    TypeParameter {
                        name: "I",
                        ty: None,
                    },
                ],
                type_def: Variant(
                    TypeDefVariant {
                        variants: [
                            Variant {
                                name: "propose_bounty",
                                fields: [
                                    Field {
                                        name: Some(
                                            "value",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 60,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "BalanceOf<T, I>",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "description",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 13,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "Vec<u8>",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 0,
                                docs: [
                                    "See [`Pallet::propose_bounty`].",
                                ],
                            },
                            Variant {
                                name: "approve_bounty",
                                fields: [
                                    Field {
                                        name: Some(
                                            "bounty_id",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 91,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "BountyIndex",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 1,
                                docs: [
                                    "See [`Pallet::approve_bounty`].",
                                ],
                            },
                            Variant {
                                name: "propose_curator",
                                fields: [
                                    Field {
                                        name: Some(
                                            "bounty_id",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 91,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "BountyIndex",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "curator",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 100,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "AccountIdLookupOf<T>",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "fee",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 60,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "BalanceOf<T, I>",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 2,
                                docs: [
                                    "See [`Pallet::propose_curator`].",
                                ],
                            },
                            Variant {
                                name: "unassign_curator",
                                fields: [
                                    Field {
                                        name: Some(
                                            "bounty_id",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 91,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "BountyIndex",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 3,
                                docs: [
                                    "See [`Pallet::unassign_curator`].",
                                ],
                            },
                            Variant {
                                name: "accept_curator",
                                fields: [
                                    Field {
                                        name: Some(
                                            "bounty_id",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 91,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "BountyIndex",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 4,
                                docs: [
                                    "See [`Pallet::accept_curator`].",
                                ],
                            },
                            Variant {
                                name: "award_bounty",
                                fields: [
                                    Field {
                                        name: Some(
                                            "bounty_id",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 91,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "BountyIndex",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "beneficiary",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 100,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "AccountIdLookupOf<T>",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 5,
                                docs: [
                                    "See [`Pallet::award_bounty`].",
                                ],
                            },
                            Variant {
                                name: "claim_bounty",
                                fields: [
                                    Field {
                                        name: Some(
                                            "bounty_id",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 91,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "BountyIndex",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 6,
                                docs: [
                                    "See [`Pallet::claim_bounty`].",
                                ],
                            },
                            Variant {
                                name: "close_bounty",
                                fields: [
                                    Field {
                                        name: Some(
                                            "bounty_id",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 91,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "BountyIndex",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 7,
                                docs: [
                                    "See [`Pallet::close_bounty`].",
                                ],
                            },
                            Variant {
                                name: "extend_bounty_expiry",
                                fields: [
                                    Field {
                                        name: Some(
                                            "bounty_id",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 91,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "BountyIndex",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "remark",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 13,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "Vec<u8>",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 8,
                                docs: [
                                    "See [`Pallet::extend_bounty_expiry`].",
                                ],
                            },
                        ],
                    },
                ),
                docs: [
                    "Contains a variant per dispatchable extrinsic that this pallet has.",
                ],
            },
        },
        PortableType {
            id: 230,
            ty: Type {
                path: Path {
                    segments: [
                        "pallet_child_bounties",
                        "pallet",
                        "Call",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "T",
                        ty: None,
                    },
                ],
                type_def: Variant(
                    TypeDefVariant {
                        variants: [
                            Variant {
                                name: "add_child_bounty",
                                fields: [
                                    Field {
                                        name: Some(
                                            "parent_bounty_id",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 91,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "BountyIndex",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "value",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 60,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "BalanceOf<T>",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "description",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 13,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "Vec<u8>",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 0,
                                docs: [
                                    "See [`Pallet::add_child_bounty`].",
                                ],
                            },
                            Variant {
                                name: "propose_curator",
                                fields: [
                                    Field {
                                        name: Some(
                                            "parent_bounty_id",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 91,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "BountyIndex",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "child_bounty_id",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 91,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "BountyIndex",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "curator",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 100,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "AccountIdLookupOf<T>",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "fee",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 60,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "BalanceOf<T>",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 1,
                                docs: [
                                    "See [`Pallet::propose_curator`].",
                                ],
                            },
                            Variant {
                                name: "accept_curator",
                                fields: [
                                    Field {
                                        name: Some(
                                            "parent_bounty_id",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 91,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "BountyIndex",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "child_bounty_id",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 91,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "BountyIndex",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 2,
                                docs: [
                                    "See [`Pallet::accept_curator`].",
                                ],
                            },
                            Variant {
                                name: "unassign_curator",
                                fields: [
                                    Field {
                                        name: Some(
                                            "parent_bounty_id",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 91,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "BountyIndex",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "child_bounty_id",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 91,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "BountyIndex",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 3,
                                docs: [
                                    "See [`Pallet::unassign_curator`].",
                                ],
                            },
                            Variant {
                                name: "award_child_bounty",
                                fields: [
                                    Field {
                                        name: Some(
                                            "parent_bounty_id",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 91,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "BountyIndex",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "child_bounty_id",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 91,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "BountyIndex",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "beneficiary",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 100,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "AccountIdLookupOf<T>",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 4,
                                docs: [
                                    "See [`Pallet::award_child_bounty`].",
                                ],
                            },
                            Variant {
                                name: "claim_child_bounty",
                                fields: [
                                    Field {
                                        name: Some(
                                            "parent_bounty_id",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 91,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "BountyIndex",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "child_bounty_id",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 91,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "BountyIndex",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 5,
                                docs: [
                                    "See [`Pallet::claim_child_bounty`].",
                                ],
                            },
                            Variant {
                                name: "close_child_bounty",
                                fields: [
                                    Field {
                                        name: Some(
                                            "parent_bounty_id",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 91,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "BountyIndex",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "child_bounty_id",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 91,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "BountyIndex",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 6,
                                docs: [
                                    "See [`Pallet::close_child_bounty`].",
                                ],
                            },
                        ],
                    },
                ),
                docs: [
                    "Contains a variant per dispatchable extrinsic that this pallet has.",
                ],
            },
        },
        PortableType {
            id: 231,
            ty: Type {
                path: Path {
                    segments: [
                        "pallet_tips",
                        "pallet",
                        "Call",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "T",
                        ty: None,
                    },
                    TypeParameter {
                        name: "I",
                        ty: None,
                    },
                ],
                type_def: Variant(
                    TypeDefVariant {
                        variants: [
                            Variant {
                                name: "report_awesome",
                                fields: [
                                    Field {
                                        name: Some(
                                            "reason",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 13,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "Vec<u8>",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "who",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 100,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "AccountIdLookupOf<T>",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 0,
                                docs: [
                                    "See [`Pallet::report_awesome`].",
                                ],
                            },
                            Variant {
                                name: "retract_tip",
                                fields: [
                                    Field {
                                        name: Some(
                                            "hash",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 12,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "T::Hash",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 1,
                                docs: [
                                    "See [`Pallet::retract_tip`].",
                                ],
                            },
                            Variant {
                                name: "tip_new",
                                fields: [
                                    Field {
                                        name: Some(
                                            "reason",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 13,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "Vec<u8>",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "who",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 100,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "AccountIdLookupOf<T>",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "tip_value",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 60,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "BalanceOf<T, I>",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 2,
                                docs: [
                                    "See [`Pallet::tip_new`].",
                                ],
                            },
                            Variant {
                                name: "tip",
                                fields: [
                                    Field {
                                        name: Some(
                                            "hash",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 12,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "T::Hash",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "tip_value",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 60,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "BalanceOf<T, I>",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 3,
                                docs: [
                                    "See [`Pallet::tip`].",
                                ],
                            },
                            Variant {
                                name: "close_tip",
                                fields: [
                                    Field {
                                        name: Some(
                                            "hash",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 12,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "T::Hash",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 4,
                                docs: [
                                    "See [`Pallet::close_tip`].",
                                ],
                            },
                            Variant {
                                name: "slash_tip",
                                fields: [
                                    Field {
                                        name: Some(
                                            "hash",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 12,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "T::Hash",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 5,
                                docs: [
                                    "See [`Pallet::slash_tip`].",
                                ],
                            },
                        ],
                    },
                ),
                docs: [
                    "Contains a variant per dispatchable extrinsic that this pallet has.",
                ],
            },
        },
        PortableType {
            id: 232,
            ty: Type {
                path: Path {
                    segments: [
                        "pallet_election_provider_multi_phase",
                        "pallet",
                        "Call",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "T",
                        ty: None,
                    },
                ],
                type_def: Variant(
                    TypeDefVariant {
                        variants: [
                            Variant {
                                name: "submit_unsigned",
                                fields: [
                                    Field {
                                        name: Some(
                                            "raw_solution",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 233,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "Box<RawSolution<SolutionOf<T::MinerConfig>>>",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "witness",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 286,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "SolutionOrSnapshotSize",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 0,
                                docs: [
                                    "See [`Pallet::submit_unsigned`].",
                                ],
                            },
                            Variant {
                                name: "set_minimum_untrusted_score",
                                fields: [
                                    Field {
                                        name: Some(
                                            "maybe_next_score",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 287,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "Option<ElectionScore>",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 1,
                                docs: [
                                    "See [`Pallet::set_minimum_untrusted_score`].",
                                ],
                            },
                            Variant {
                                name: "set_emergency_election_result",
                                fields: [
                                    Field {
                                        name: Some(
                                            "supports",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 288,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "Supports<T::AccountId>",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 2,
                                docs: [
                                    "See [`Pallet::set_emergency_election_result`].",
                                ],
                            },
                            Variant {
                                name: "submit",
                                fields: [
                                    Field {
                                        name: Some(
                                            "raw_solution",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 233,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "Box<RawSolution<SolutionOf<T::MinerConfig>>>",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 3,
                                docs: [
                                    "See [`Pallet::submit`].",
                                ],
                            },
                            Variant {
                                name: "governance_fallback",
                                fields: [
                                    Field {
                                        name: Some(
                                            "maybe_max_voters",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 137,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "Option<u32>",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "maybe_max_targets",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 137,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "Option<u32>",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 4,
                                docs: [
                                    "See [`Pallet::governance_fallback`].",
                                ],
                            },
                        ],
                    },
                ),
                docs: [
                    "Contains a variant per dispatchable extrinsic that this pallet has.",
                ],
            },
        },
        PortableType {
            id: 233,
            ty: Type {
                path: Path {
                    segments: [
                        "pallet_election_provider_multi_phase",
                        "RawSolution",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "S",
                        ty: Some(
                            UntrackedSymbol {
                                id: 234,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ),
                    },
                ],
                type_def: Composite(
                    TypeDefComposite {
                        fields: [
                            Field {
                                name: Some(
                                    "solution",
                                ),
                                ty: UntrackedSymbol {
                                    id: 234,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "S",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "score",
                                ),
                                ty: UntrackedSymbol {
                                    id: 285,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "ElectionScore",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "round",
                                ),
                                ty: UntrackedSymbol {
                                    id: 4,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "u32",
                                ),
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 234,
            ty: Type {
                path: Path {
                    segments: [
                        "polkadot_runtime",
                        "NposCompactSolution16",
                    ],
                },
                type_params: [],
                type_def: Composite(
                    TypeDefComposite {
                        fields: [
                            Field {
                                name: Some(
                                    "votes1",
                                ),
                                ty: UntrackedSymbol {
                                    id: 235,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: None,
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "votes2",
                                ),
                                ty: UntrackedSymbol {
                                    id: 238,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: None,
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "votes3",
                                ),
                                ty: UntrackedSymbol {
                                    id: 243,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: None,
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "votes4",
                                ),
                                ty: UntrackedSymbol {
                                    id: 246,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: None,
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "votes5",
                                ),
                                ty: UntrackedSymbol {
                                    id: 249,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: None,
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "votes6",
                                ),
                                ty: UntrackedSymbol {
                                    id: 252,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: None,
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "votes7",
                                ),
                                ty: UntrackedSymbol {
                                    id: 255,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: None,
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "votes8",
                                ),
                                ty: UntrackedSymbol {
                                    id: 258,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: None,
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "votes9",
                                ),
                                ty: UntrackedSymbol {
                                    id: 261,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: None,
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "votes10",
                                ),
                                ty: UntrackedSymbol {
                                    id: 264,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: None,
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "votes11",
                                ),
                                ty: UntrackedSymbol {
                                    id: 267,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: None,
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "votes12",
                                ),
                                ty: UntrackedSymbol {
                                    id: 270,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: None,
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "votes13",
                                ),
                                ty: UntrackedSymbol {
                                    id: 273,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: None,
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "votes14",
                                ),
                                ty: UntrackedSymbol {
                                    id: 276,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: None,
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "votes15",
                                ),
                                ty: UntrackedSymbol {
                                    id: 279,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: None,
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "votes16",
                                ),
                                ty: UntrackedSymbol {
                                    id: 282,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: None,
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 235,
            ty: Type {
                path: Path {
                    segments: [],
                },
                type_params: [],
                type_def: Sequence(
                    TypeDefSequence {
                        type_param: UntrackedSymbol {
                            id: 236,
                            marker: PhantomData<fn() -> core::any::TypeId>,
                        },
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 236,
            ty: Type {
                path: Path {
                    segments: [],
                },
                type_params: [],
                type_def: Tuple(
                    TypeDefTuple {
                        fields: [
                            UntrackedSymbol {
                                id: 91,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                            UntrackedSymbol {
                                id: 237,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 237,
            ty: Type {
                path: Path {
                    segments: [],
                },
                type_params: [],
                type_def: Compact(
                    TypeDefCompact {
                        type_param: UntrackedSymbol {
                            id: 77,
                            marker: PhantomData<fn() -> core::any::TypeId>,
                        },
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 238,
            ty: Type {
                path: Path {
                    segments: [],
                },
                type_params: [],
                type_def: Sequence(
                    TypeDefSequence {
                        type_param: UntrackedSymbol {
                            id: 239,
                            marker: PhantomData<fn() -> core::any::TypeId>,
                        },
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 239,
            ty: Type {
                path: Path {
                    segments: [],
                },
                type_params: [],
                type_def: Tuple(
                    TypeDefTuple {
                        fields: [
                            UntrackedSymbol {
                                id: 91,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                            UntrackedSymbol {
                                id: 240,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                            UntrackedSymbol {
                                id: 237,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 240,
            ty: Type {
                path: Path {
                    segments: [],
                },
                type_params: [],
                type_def: Tuple(
                    TypeDefTuple {
                        fields: [
                            UntrackedSymbol {
                                id: 237,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                            UntrackedSymbol {
                                id: 241,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 241,
            ty: Type {
                path: Path {
                    segments: [],
                },
                type_params: [],
                type_def: Compact(
                    TypeDefCompact {
                        type_param: UntrackedSymbol {
                            id: 242,
                            marker: PhantomData<fn() -> core::any::TypeId>,
                        },
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 242,
            ty: Type {
                path: Path {
                    segments: [
                        "sp_arithmetic",
                        "per_things",
                        "PerU16",
                    ],
                },
                type_params: [],
                type_def: Composite(
                    TypeDefComposite {
                        fields: [
                            Field {
                                name: None,
                                ty: UntrackedSymbol {
                                    id: 77,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "u16",
                                ),
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 243,
            ty: Type {
                path: Path {
                    segments: [],
                },
                type_params: [],
                type_def: Sequence(
                    TypeDefSequence {
                        type_param: UntrackedSymbol {
                            id: 244,
                            marker: PhantomData<fn() -> core::any::TypeId>,
                        },
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 244,
            ty: Type {
                path: Path {
                    segments: [],
                },
                type_params: [],
                type_def: Tuple(
                    TypeDefTuple {
                        fields: [
                            UntrackedSymbol {
                                id: 91,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                            UntrackedSymbol {
                                id: 245,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                            UntrackedSymbol {
                                id: 237,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 245,
            ty: Type {
                path: Path {
                    segments: [],
                },
                type_params: [],
                type_def: Array(
                    TypeDefArray {
                        len: 2,
                        type_param: UntrackedSymbol {
                            id: 240,
                            marker: PhantomData<fn() -> core::any::TypeId>,
                        },
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 246,
            ty: Type {
                path: Path {
                    segments: [],
                },
                type_params: [],
                type_def: Sequence(
                    TypeDefSequence {
                        type_param: UntrackedSymbol {
                            id: 247,
                            marker: PhantomData<fn() -> core::any::TypeId>,
                        },
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 247,
            ty: Type {
                path: Path {
                    segments: [],
                },
                type_params: [],
                type_def: Tuple(
                    TypeDefTuple {
                        fields: [
                            UntrackedSymbol {
                                id: 91,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                            UntrackedSymbol {
                                id: 248,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                            UntrackedSymbol {
                                id: 237,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 248,
            ty: Type {
                path: Path {
                    segments: [],
                },
                type_params: [],
                type_def: Array(
                    TypeDefArray {
                        len: 3,
                        type_param: UntrackedSymbol {
                            id: 240,
                            marker: PhantomData<fn() -> core::any::TypeId>,
                        },
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 249,
            ty: Type {
                path: Path {
                    segments: [],
                },
                type_params: [],
                type_def: Sequence(
                    TypeDefSequence {
                        type_param: UntrackedSymbol {
                            id: 250,
                            marker: PhantomData<fn() -> core::any::TypeId>,
                        },
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 250,
            ty: Type {
                path: Path {
                    segments: [],
                },
                type_params: [],
                type_def: Tuple(
                    TypeDefTuple {
                        fields: [
                            UntrackedSymbol {
                                id: 91,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                            UntrackedSymbol {
                                id: 251,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                            UntrackedSymbol {
                                id: 237,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 251,
            ty: Type {
                path: Path {
                    segments: [],
                },
                type_params: [],
                type_def: Array(
                    TypeDefArray {
                        len: 4,
                        type_param: UntrackedSymbol {
                            id: 240,
                            marker: PhantomData<fn() -> core::any::TypeId>,
                        },
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 252,
            ty: Type {
                path: Path {
                    segments: [],
                },
                type_params: [],
                type_def: Sequence(
                    TypeDefSequence {
                        type_param: UntrackedSymbol {
                            id: 253,
                            marker: PhantomData<fn() -> core::any::TypeId>,
                        },
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 253,
            ty: Type {
                path: Path {
                    segments: [],
                },
                type_params: [],
                type_def: Tuple(
                    TypeDefTuple {
                        fields: [
                            UntrackedSymbol {
                                id: 91,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                            UntrackedSymbol {
                                id: 254,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                            UntrackedSymbol {
                                id: 237,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 254,
            ty: Type {
                path: Path {
                    segments: [],
                },
                type_params: [],
                type_def: Array(
                    TypeDefArray {
                        len: 5,
                        type_param: UntrackedSymbol {
                            id: 240,
                            marker: PhantomData<fn() -> core::any::TypeId>,
                        },
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 255,
            ty: Type {
                path: Path {
                    segments: [],
                },
                type_params: [],
                type_def: Sequence(
                    TypeDefSequence {
                        type_param: UntrackedSymbol {
                            id: 256,
                            marker: PhantomData<fn() -> core::any::TypeId>,
                        },
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 256,
            ty: Type {
                path: Path {
                    segments: [],
                },
                type_params: [],
                type_def: Tuple(
                    TypeDefTuple {
                        fields: [
                            UntrackedSymbol {
                                id: 91,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                            UntrackedSymbol {
                                id: 257,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                            UntrackedSymbol {
                                id: 237,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 257,
            ty: Type {
                path: Path {
                    segments: [],
                },
                type_params: [],
                type_def: Array(
                    TypeDefArray {
                        len: 6,
                        type_param: UntrackedSymbol {
                            id: 240,
                            marker: PhantomData<fn() -> core::any::TypeId>,
                        },
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 258,
            ty: Type {
                path: Path {
                    segments: [],
                },
                type_params: [],
                type_def: Sequence(
                    TypeDefSequence {
                        type_param: UntrackedSymbol {
                            id: 259,
                            marker: PhantomData<fn() -> core::any::TypeId>,
                        },
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 259,
            ty: Type {
                path: Path {
                    segments: [],
                },
                type_params: [],
                type_def: Tuple(
                    TypeDefTuple {
                        fields: [
                            UntrackedSymbol {
                                id: 91,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                            UntrackedSymbol {
                                id: 260,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                            UntrackedSymbol {
                                id: 237,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 260,
            ty: Type {
                path: Path {
                    segments: [],
                },
                type_params: [],
                type_def: Array(
                    TypeDefArray {
                        len: 7,
                        type_param: UntrackedSymbol {
                            id: 240,
                            marker: PhantomData<fn() -> core::any::TypeId>,
                        },
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 261,
            ty: Type {
                path: Path {
                    segments: [],
                },
                type_params: [],
                type_def: Sequence(
                    TypeDefSequence {
                        type_param: UntrackedSymbol {
                            id: 262,
                            marker: PhantomData<fn() -> core::any::TypeId>,
                        },
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 262,
            ty: Type {
                path: Path {
                    segments: [],
                },
                type_params: [],
                type_def: Tuple(
                    TypeDefTuple {
                        fields: [
                            UntrackedSymbol {
                                id: 91,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                            UntrackedSymbol {
                                id: 263,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                            UntrackedSymbol {
                                id: 237,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 263,
            ty: Type {
                path: Path {
                    segments: [],
                },
                type_params: [],
                type_def: Array(
                    TypeDefArray {
                        len: 8,
                        type_param: UntrackedSymbol {
                            id: 240,
                            marker: PhantomData<fn() -> core::any::TypeId>,
                        },
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 264,
            ty: Type {
                path: Path {
                    segments: [],
                },
                type_params: [],
                type_def: Sequence(
                    TypeDefSequence {
                        type_param: UntrackedSymbol {
                            id: 265,
                            marker: PhantomData<fn() -> core::any::TypeId>,
                        },
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 265,
            ty: Type {
                path: Path {
                    segments: [],
                },
                type_params: [],
                type_def: Tuple(
                    TypeDefTuple {
                        fields: [
                            UntrackedSymbol {
                                id: 91,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                            UntrackedSymbol {
                                id: 266,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                            UntrackedSymbol {
                                id: 237,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 266,
            ty: Type {
                path: Path {
                    segments: [],
                },
                type_params: [],
                type_def: Array(
                    TypeDefArray {
                        len: 9,
                        type_param: UntrackedSymbol {
                            id: 240,
                            marker: PhantomData<fn() -> core::any::TypeId>,
                        },
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 267,
            ty: Type {
                path: Path {
                    segments: [],
                },
                type_params: [],
                type_def: Sequence(
                    TypeDefSequence {
                        type_param: UntrackedSymbol {
                            id: 268,
                            marker: PhantomData<fn() -> core::any::TypeId>,
                        },
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 268,
            ty: Type {
                path: Path {
                    segments: [],
                },
                type_params: [],
                type_def: Tuple(
                    TypeDefTuple {
                        fields: [
                            UntrackedSymbol {
                                id: 91,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                            UntrackedSymbol {
                                id: 269,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                            UntrackedSymbol {
                                id: 237,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 269,
            ty: Type {
                path: Path {
                    segments: [],
                },
                type_params: [],
                type_def: Array(
                    TypeDefArray {
                        len: 10,
                        type_param: UntrackedSymbol {
                            id: 240,
                            marker: PhantomData<fn() -> core::any::TypeId>,
                        },
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 270,
            ty: Type {
                path: Path {
                    segments: [],
                },
                type_params: [],
                type_def: Sequence(
                    TypeDefSequence {
                        type_param: UntrackedSymbol {
                            id: 271,
                            marker: PhantomData<fn() -> core::any::TypeId>,
                        },
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 271,
            ty: Type {
                path: Path {
                    segments: [],
                },
                type_params: [],
                type_def: Tuple(
                    TypeDefTuple {
                        fields: [
                            UntrackedSymbol {
                                id: 91,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                            UntrackedSymbol {
                                id: 272,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                            UntrackedSymbol {
                                id: 237,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 272,
            ty: Type {
                path: Path {
                    segments: [],
                },
                type_params: [],
                type_def: Array(
                    TypeDefArray {
                        len: 11,
                        type_param: UntrackedSymbol {
                            id: 240,
                            marker: PhantomData<fn() -> core::any::TypeId>,
                        },
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 273,
            ty: Type {
                path: Path {
                    segments: [],
                },
                type_params: [],
                type_def: Sequence(
                    TypeDefSequence {
                        type_param: UntrackedSymbol {
                            id: 274,
                            marker: PhantomData<fn() -> core::any::TypeId>,
                        },
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 274,
            ty: Type {
                path: Path {
                    segments: [],
                },
                type_params: [],
                type_def: Tuple(
                    TypeDefTuple {
                        fields: [
                            UntrackedSymbol {
                                id: 91,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                            UntrackedSymbol {
                                id: 275,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                            UntrackedSymbol {
                                id: 237,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 275,
            ty: Type {
                path: Path {
                    segments: [],
                },
                type_params: [],
                type_def: Array(
                    TypeDefArray {
                        len: 12,
                        type_param: UntrackedSymbol {
                            id: 240,
                            marker: PhantomData<fn() -> core::any::TypeId>,
                        },
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 276,
            ty: Type {
                path: Path {
                    segments: [],
                },
                type_params: [],
                type_def: Sequence(
                    TypeDefSequence {
                        type_param: UntrackedSymbol {
                            id: 277,
                            marker: PhantomData<fn() -> core::any::TypeId>,
                        },
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 277,
            ty: Type {
                path: Path {
                    segments: [],
                },
                type_params: [],
                type_def: Tuple(
                    TypeDefTuple {
                        fields: [
                            UntrackedSymbol {
                                id: 91,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                            UntrackedSymbol {
                                id: 278,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                            UntrackedSymbol {
                                id: 237,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 278,
            ty: Type {
                path: Path {
                    segments: [],
                },
                type_params: [],
                type_def: Array(
                    TypeDefArray {
                        len: 13,
                        type_param: UntrackedSymbol {
                            id: 240,
                            marker: PhantomData<fn() -> core::any::TypeId>,
                        },
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 279,
            ty: Type {
                path: Path {
                    segments: [],
                },
                type_params: [],
                type_def: Sequence(
                    TypeDefSequence {
                        type_param: UntrackedSymbol {
                            id: 280,
                            marker: PhantomData<fn() -> core::any::TypeId>,
                        },
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 280,
            ty: Type {
                path: Path {
                    segments: [],
                },
                type_params: [],
                type_def: Tuple(
                    TypeDefTuple {
                        fields: [
                            UntrackedSymbol {
                                id: 91,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                            UntrackedSymbol {
                                id: 281,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                            UntrackedSymbol {
                                id: 237,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 281,
            ty: Type {
                path: Path {
                    segments: [],
                },
                type_params: [],
                type_def: Array(
                    TypeDefArray {
                        len: 14,
                        type_param: UntrackedSymbol {
                            id: 240,
                            marker: PhantomData<fn() -> core::any::TypeId>,
                        },
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 282,
            ty: Type {
                path: Path {
                    segments: [],
                },
                type_params: [],
                type_def: Sequence(
                    TypeDefSequence {
                        type_param: UntrackedSymbol {
                            id: 283,
                            marker: PhantomData<fn() -> core::any::TypeId>,
                        },
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 283,
            ty: Type {
                path: Path {
                    segments: [],
                },
                type_params: [],
                type_def: Tuple(
                    TypeDefTuple {
                        fields: [
                            UntrackedSymbol {
                                id: 91,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                            UntrackedSymbol {
                                id: 284,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                            UntrackedSymbol {
                                id: 237,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 284,
            ty: Type {
                path: Path {
                    segments: [],
                },
                type_params: [],
                type_def: Array(
                    TypeDefArray {
                        len: 15,
                        type_param: UntrackedSymbol {
                            id: 240,
                            marker: PhantomData<fn() -> core::any::TypeId>,
                        },
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 285,
            ty: Type {
                path: Path {
                    segments: [
                        "sp_npos_elections",
                        "ElectionScore",
                    ],
                },
                type_params: [],
                type_def: Composite(
                    TypeDefComposite {
                        fields: [
                            Field {
                                name: Some(
                                    "minimal_stake",
                                ),
                                ty: UntrackedSymbol {
                                    id: 6,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "ExtendedBalance",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "sum_stake",
                                ),
                                ty: UntrackedSymbol {
                                    id: 6,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "ExtendedBalance",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "sum_stake_squared",
                                ),
                                ty: UntrackedSymbol {
                                    id: 6,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "ExtendedBalance",
                                ),
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 286,
            ty: Type {
                path: Path {
                    segments: [
                        "pallet_election_provider_multi_phase",
                        "SolutionOrSnapshotSize",
                    ],
                },
                type_params: [],
                type_def: Composite(
                    TypeDefComposite {
                        fields: [
                            Field {
                                name: Some(
                                    "voters",
                                ),
                                ty: UntrackedSymbol {
                                    id: 91,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "u32",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "targets",
                                ),
                                ty: UntrackedSymbol {
                                    id: 91,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "u32",
                                ),
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 287,
            ty: Type {
                path: Path {
                    segments: [
                        "Option",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "T",
                        ty: Some(
                            UntrackedSymbol {
                                id: 285,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ),
                    },
                ],
                type_def: Variant(
                    TypeDefVariant {
                        variants: [
                            Variant {
                                name: "None",
                                fields: [],
                                index: 0,
                                docs: [],
                            },
                            Variant {
                                name: "Some",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 285,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: None,
                                        docs: [],
                                    },
                                ],
                                index: 1,
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 288,
            ty: Type {
                path: Path {
                    segments: [],
                },
                type_params: [],
                type_def: Sequence(
                    TypeDefSequence {
                        type_param: UntrackedSymbol {
                            id: 289,
                            marker: PhantomData<fn() -> core::any::TypeId>,
                        },
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 289,
            ty: Type {
                path: Path {
                    segments: [],
                },
                type_params: [],
                type_def: Tuple(
                    TypeDefTuple {
                        fields: [
                            UntrackedSymbol {
                                id: 0,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                            UntrackedSymbol {
                                id: 290,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 290,
            ty: Type {
                path: Path {
                    segments: [
                        "sp_npos_elections",
                        "Support",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "AccountId",
                        ty: Some(
                            UntrackedSymbol {
                                id: 0,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ),
                    },
                ],
                type_def: Composite(
                    TypeDefComposite {
                        fields: [
                            Field {
                                name: Some(
                                    "total",
                                ),
                                ty: UntrackedSymbol {
                                    id: 6,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "ExtendedBalance",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "voters",
                                ),
                                ty: UntrackedSymbol {
                                    id: 71,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "Vec<(AccountId, ExtendedBalance)>",
                                ),
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 291,
            ty: Type {
                path: Path {
                    segments: [
                        "pallet_bags_list",
                        "pallet",
                        "Call",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "T",
                        ty: None,
                    },
                    TypeParameter {
                        name: "I",
                        ty: None,
                    },
                ],
                type_def: Variant(
                    TypeDefVariant {
                        variants: [
                            Variant {
                                name: "rebag",
                                fields: [
                                    Field {
                                        name: Some(
                                            "dislocated",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 100,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "AccountIdLookupOf<T>",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 0,
                                docs: [
                                    "See [`Pallet::rebag`].",
                                ],
                            },
                            Variant {
                                name: "put_in_front_of",
                                fields: [
                                    Field {
                                        name: Some(
                                            "lighter",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 100,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "AccountIdLookupOf<T>",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 1,
                                docs: [
                                    "See [`Pallet::put_in_front_of`].",
                                ],
                            },
                        ],
                    },
                ),
                docs: [
                    "Contains a variant per dispatchable extrinsic that this pallet has.",
                ],
            },
        },
        PortableType {
            id: 292,
            ty: Type {
                path: Path {
                    segments: [
                        "pallet_nomination_pools",
                        "pallet",
                        "Call",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "T",
                        ty: None,
                    },
                ],
                type_def: Variant(
                    TypeDefVariant {
                        variants: [
                            Variant {
                                name: "join",
                                fields: [
                                    Field {
                                        name: Some(
                                            "amount",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 60,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "BalanceOf<T>",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "pool_id",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 4,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "PoolId",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 0,
                                docs: [
                                    "See [`Pallet::join`].",
                                ],
                            },
                            Variant {
                                name: "bond_extra",
                                fields: [
                                    Field {
                                        name: Some(
                                            "extra",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 293,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "BondExtra<BalanceOf<T>>",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 1,
                                docs: [
                                    "See [`Pallet::bond_extra`].",
                                ],
                            },
                            Variant {
                                name: "claim_payout",
                                fields: [],
                                index: 2,
                                docs: [
                                    "See [`Pallet::claim_payout`].",
                                ],
                            },
                            Variant {
                                name: "unbond",
                                fields: [
                                    Field {
                                        name: Some(
                                            "member_account",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 100,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "AccountIdLookupOf<T>",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "unbonding_points",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 60,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "BalanceOf<T>",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 3,
                                docs: [
                                    "See [`Pallet::unbond`].",
                                ],
                            },
                            Variant {
                                name: "pool_withdraw_unbonded",
                                fields: [
                                    Field {
                                        name: Some(
                                            "pool_id",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 4,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "PoolId",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "num_slashing_spans",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 4,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "u32",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 4,
                                docs: [
                                    "See [`Pallet::pool_withdraw_unbonded`].",
                                ],
                            },
                            Variant {
                                name: "withdraw_unbonded",
                                fields: [
                                    Field {
                                        name: Some(
                                            "member_account",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 100,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "AccountIdLookupOf<T>",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "num_slashing_spans",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 4,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "u32",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 5,
                                docs: [
                                    "See [`Pallet::withdraw_unbonded`].",
                                ],
                            },
                            Variant {
                                name: "create",
                                fields: [
                                    Field {
                                        name: Some(
                                            "amount",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 60,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "BalanceOf<T>",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "root",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 100,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "AccountIdLookupOf<T>",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "nominator",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 100,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "AccountIdLookupOf<T>",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "bouncer",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 100,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "AccountIdLookupOf<T>",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 6,
                                docs: [
                                    "See [`Pallet::create`].",
                                ],
                            },
                            Variant {
                                name: "create_with_pool_id",
                                fields: [
                                    Field {
                                        name: Some(
                                            "amount",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 60,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "BalanceOf<T>",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "root",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 100,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "AccountIdLookupOf<T>",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "nominator",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 100,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "AccountIdLookupOf<T>",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "bouncer",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 100,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "AccountIdLookupOf<T>",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "pool_id",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 4,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "PoolId",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 7,
                                docs: [
                                    "See [`Pallet::create_with_pool_id`].",
                                ],
                            },
                            Variant {
                                name: "nominate",
                                fields: [
                                    Field {
                                        name: Some(
                                            "pool_id",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 4,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "PoolId",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "validators",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 104,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "Vec<T::AccountId>",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 8,
                                docs: [
                                    "See [`Pallet::nominate`].",
                                ],
                            },
                            Variant {
                                name: "set_state",
                                fields: [
                                    Field {
                                        name: Some(
                                            "pool_id",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 4,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "PoolId",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "state",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 294,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "PoolState",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 9,
                                docs: [
                                    "See [`Pallet::set_state`].",
                                ],
                            },
                            Variant {
                                name: "set_metadata",
                                fields: [
                                    Field {
                                        name: Some(
                                            "pool_id",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 4,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "PoolId",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "metadata",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 13,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "Vec<u8>",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 10,
                                docs: [
                                    "See [`Pallet::set_metadata`].",
                                ],
                            },
                            Variant {
                                name: "set_configs",
                                fields: [
                                    Field {
                                        name: Some(
                                            "min_join_bond",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 295,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "ConfigOp<BalanceOf<T>>",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "min_create_bond",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 295,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "ConfigOp<BalanceOf<T>>",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "max_pools",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 296,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "ConfigOp<u32>",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "max_members",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 296,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "ConfigOp<u32>",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "max_members_per_pool",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 296,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "ConfigOp<u32>",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "global_max_commission",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 297,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "ConfigOp<Perbill>",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 11,
                                docs: [
                                    "See [`Pallet::set_configs`].",
                                ],
                            },
                            Variant {
                                name: "update_roles",
                                fields: [
                                    Field {
                                        name: Some(
                                            "pool_id",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 4,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "PoolId",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "new_root",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 298,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "ConfigOp<T::AccountId>",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "new_nominator",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 298,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "ConfigOp<T::AccountId>",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "new_bouncer",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 298,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "ConfigOp<T::AccountId>",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 12,
                                docs: [
                                    "See [`Pallet::update_roles`].",
                                ],
                            },
                            Variant {
                                name: "chill",
                                fields: [
                                    Field {
                                        name: Some(
                                            "pool_id",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 4,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "PoolId",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 13,
                                docs: [
                                    "See [`Pallet::chill`].",
                                ],
                            },
                            Variant {
                                name: "bond_extra_other",
                                fields: [
                                    Field {
                                        name: Some(
                                            "member",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 100,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "AccountIdLookupOf<T>",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "extra",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 293,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "BondExtra<BalanceOf<T>>",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 14,
                                docs: [
                                    "See [`Pallet::bond_extra_other`].",
                                ],
                            },
                            Variant {
                                name: "set_claim_permission",
                                fields: [
                                    Field {
                                        name: Some(
                                            "permission",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 299,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "ClaimPermission",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 15,
                                docs: [
                                    "See [`Pallet::set_claim_permission`].",
                                ],
                            },
                            Variant {
                                name: "claim_payout_other",
                                fields: [
                                    Field {
                                        name: Some(
                                            "other",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 0,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "T::AccountId",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 16,
                                docs: [
                                    "See [`Pallet::claim_payout_other`].",
                                ],
                            },
                            Variant {
                                name: "set_commission",
                                fields: [
                                    Field {
                                        name: Some(
                                            "pool_id",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 4,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "PoolId",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "new_commission",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 300,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "Option<(Perbill, T::AccountId)>",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 17,
                                docs: [
                                    "See [`Pallet::set_commission`].",
                                ],
                            },
                            Variant {
                                name: "set_commission_max",
                                fields: [
                                    Field {
                                        name: Some(
                                            "pool_id",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 4,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "PoolId",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "max_commission",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 41,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "Perbill",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 18,
                                docs: [
                                    "See [`Pallet::set_commission_max`].",
                                ],
                            },
                            Variant {
                                name: "set_commission_change_rate",
                                fields: [
                                    Field {
                                        name: Some(
                                            "pool_id",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 4,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "PoolId",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "change_rate",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 302,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "CommissionChangeRate<T::BlockNumber>",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 19,
                                docs: [
                                    "See [`Pallet::set_commission_change_rate`].",
                                ],
                            },
                            Variant {
                                name: "claim_commission",
                                fields: [
                                    Field {
                                        name: Some(
                                            "pool_id",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 4,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "PoolId",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 20,
                                docs: [
                                    "See [`Pallet::claim_commission`].",
                                ],
                            },
                        ],
                    },
                ),
                docs: [
                    "Contains a variant per dispatchable extrinsic that this pallet has.",
                ],
            },
        },
        PortableType {
            id: 293,
            ty: Type {
                path: Path {
                    segments: [
                        "pallet_nomination_pools",
                        "BondExtra",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "Balance",
                        ty: Some(
                            UntrackedSymbol {
                                id: 6,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ),
                    },
                ],
                type_def: Variant(
                    TypeDefVariant {
                        variants: [
                            Variant {
                                name: "FreeBalance",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 6,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "Balance",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 0,
                                docs: [],
                            },
                            Variant {
                                name: "Rewards",
                                fields: [],
                                index: 1,
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 294,
            ty: Type {
                path: Path {
                    segments: [
                        "pallet_nomination_pools",
                        "PoolState",
                    ],
                },
                type_params: [],
                type_def: Variant(
                    TypeDefVariant {
                        variants: [
                            Variant {
                                name: "Open",
                                fields: [],
                                index: 0,
                                docs: [],
                            },
                            Variant {
                                name: "Blocked",
                                fields: [],
                                index: 1,
                                docs: [],
                            },
                            Variant {
                                name: "Destroying",
                                fields: [],
                                index: 2,
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 295,
            ty: Type {
                path: Path {
                    segments: [
                        "pallet_nomination_pools",
                        "ConfigOp",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "T",
                        ty: Some(
                            UntrackedSymbol {
                                id: 6,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ),
                    },
                ],
                type_def: Variant(
                    TypeDefVariant {
                        variants: [
                            Variant {
                                name: "Noop",
                                fields: [],
                                index: 0,
                                docs: [],
                            },
                            Variant {
                                name: "Set",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 6,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "T",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 1,
                                docs: [],
                            },
                            Variant {
                                name: "Remove",
                                fields: [],
                                index: 2,
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 296,
            ty: Type {
                path: Path {
                    segments: [
                        "pallet_nomination_pools",
                        "ConfigOp",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "T",
                        ty: Some(
                            UntrackedSymbol {
                                id: 4,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ),
                    },
                ],
                type_def: Variant(
                    TypeDefVariant {
                        variants: [
                            Variant {
                                name: "Noop",
                                fields: [],
                                index: 0,
                                docs: [],
                            },
                            Variant {
                                name: "Set",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 4,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "T",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 1,
                                docs: [],
                            },
                            Variant {
                                name: "Remove",
                                fields: [],
                                index: 2,
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 297,
            ty: Type {
                path: Path {
                    segments: [
                        "pallet_nomination_pools",
                        "ConfigOp",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "T",
                        ty: Some(
                            UntrackedSymbol {
                                id: 41,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ),
                    },
                ],
                type_def: Variant(
                    TypeDefVariant {
                        variants: [
                            Variant {
                                name: "Noop",
                                fields: [],
                                index: 0,
                                docs: [],
                            },
                            Variant {
                                name: "Set",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 41,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "T",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 1,
                                docs: [],
                            },
                            Variant {
                                name: "Remove",
                                fields: [],
                                index: 2,
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 298,
            ty: Type {
                path: Path {
                    segments: [
                        "pallet_nomination_pools",
                        "ConfigOp",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "T",
                        ty: Some(
                            UntrackedSymbol {
                                id: 0,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ),
                    },
                ],
                type_def: Variant(
                    TypeDefVariant {
                        variants: [
                            Variant {
                                name: "Noop",
                                fields: [],
                                index: 0,
                                docs: [],
                            },
                            Variant {
                                name: "Set",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 0,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "T",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 1,
                                docs: [],
                            },
                            Variant {
                                name: "Remove",
                                fields: [],
                                index: 2,
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 299,
            ty: Type {
                path: Path {
                    segments: [
                        "pallet_nomination_pools",
                        "ClaimPermission",
                    ],
                },
                type_params: [],
                type_def: Variant(
                    TypeDefVariant {
                        variants: [
                            Variant {
                                name: "Permissioned",
                                fields: [],
                                index: 0,
                                docs: [],
                            },
                            Variant {
                                name: "PermissionlessCompound",
                                fields: [],
                                index: 1,
                                docs: [],
                            },
                            Variant {
                                name: "PermissionlessWithdraw",
                                fields: [],
                                index: 2,
                                docs: [],
                            },
                            Variant {
                                name: "PermissionlessAll",
                                fields: [],
                                index: 3,
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 300,
            ty: Type {
                path: Path {
                    segments: [
                        "Option",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "T",
                        ty: Some(
                            UntrackedSymbol {
                                id: 301,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ),
                    },
                ],
                type_def: Variant(
                    TypeDefVariant {
                        variants: [
                            Variant {
                                name: "None",
                                fields: [],
                                index: 0,
                                docs: [],
                            },
                            Variant {
                                name: "Some",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 301,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: None,
                                        docs: [],
                                    },
                                ],
                                index: 1,
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 301,
            ty: Type {
                path: Path {
                    segments: [],
                },
                type_params: [],
                type_def: Tuple(
                    TypeDefTuple {
                        fields: [
                            UntrackedSymbol {
                                id: 41,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                            UntrackedSymbol {
                                id: 0,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 302,
            ty: Type {
                path: Path {
                    segments: [
                        "pallet_nomination_pools",
                        "CommissionChangeRate",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "BlockNumber",
                        ty: Some(
                            UntrackedSymbol {
                                id: 4,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ),
                    },
                ],
                type_def: Composite(
                    TypeDefComposite {
                        fields: [
                            Field {
                                name: Some(
                                    "max_increase",
                                ),
                                ty: UntrackedSymbol {
                                    id: 41,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "Perbill",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "min_delay",
                                ),
                                ty: UntrackedSymbol {
                                    id: 4,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "BlockNumber",
                                ),
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 303,
            ty: Type {
                path: Path {
                    segments: [
                        "pallet_fast_unstake",
                        "pallet",
                        "Call",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "T",
                        ty: None,
                    },
                ],
                type_def: Variant(
                    TypeDefVariant {
                        variants: [
                            Variant {
                                name: "register_fast_unstake",
                                fields: [],
                                index: 0,
                                docs: [
                                    "See [`Pallet::register_fast_unstake`].",
                                ],
                            },
                            Variant {
                                name: "deregister",
                                fields: [],
                                index: 1,
                                docs: [
                                    "See [`Pallet::deregister`].",
                                ],
                            },
                            Variant {
                                name: "control",
                                fields: [
                                    Field {
                                        name: Some(
                                            "eras_to_check",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 4,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "EraIndex",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 2,
                                docs: [
                                    "See [`Pallet::control`].",
                                ],
                            },
                        ],
                    },
                ),
                docs: [
                    "Contains a variant per dispatchable extrinsic that this pallet has.",
                ],
            },
        },
        PortableType {
            id: 304,
            ty: Type {
                path: Path {
                    segments: [
                        "polkadot_runtime_parachains",
                        "configuration",
                        "pallet",
                        "Call",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "T",
                        ty: None,
                    },
                ],
                type_def: Variant(
                    TypeDefVariant {
                        variants: [
                            Variant {
                                name: "set_validation_upgrade_cooldown",
                                fields: [
                                    Field {
                                        name: Some(
                                            "new",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 4,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "T::BlockNumber",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 0,
                                docs: [
                                    "See [`Pallet::set_validation_upgrade_cooldown`].",
                                ],
                            },
                            Variant {
                                name: "set_validation_upgrade_delay",
                                fields: [
                                    Field {
                                        name: Some(
                                            "new",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 4,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "T::BlockNumber",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 1,
                                docs: [
                                    "See [`Pallet::set_validation_upgrade_delay`].",
                                ],
                            },
                            Variant {
                                name: "set_code_retention_period",
                                fields: [
                                    Field {
                                        name: Some(
                                            "new",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 4,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "T::BlockNumber",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 2,
                                docs: [
                                    "See [`Pallet::set_code_retention_period`].",
                                ],
                            },
                            Variant {
                                name: "set_max_code_size",
                                fields: [
                                    Field {
                                        name: Some(
                                            "new",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 4,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "u32",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 3,
                                docs: [
                                    "See [`Pallet::set_max_code_size`].",
                                ],
                            },
                            Variant {
                                name: "set_max_pov_size",
                                fields: [
                                    Field {
                                        name: Some(
                                            "new",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 4,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "u32",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 4,
                                docs: [
                                    "See [`Pallet::set_max_pov_size`].",
                                ],
                            },
                            Variant {
                                name: "set_max_head_data_size",
                                fields: [
                                    Field {
                                        name: Some(
                                            "new",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 4,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "u32",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 5,
                                docs: [
                                    "See [`Pallet::set_max_head_data_size`].",
                                ],
                            },
                            Variant {
                                name: "set_parathread_cores",
                                fields: [
                                    Field {
                                        name: Some(
                                            "new",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 4,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "u32",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 6,
                                docs: [
                                    "See [`Pallet::set_parathread_cores`].",
                                ],
                            },
                            Variant {
                                name: "set_parathread_retries",
                                fields: [
                                    Field {
                                        name: Some(
                                            "new",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 4,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "u32",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 7,
                                docs: [
                                    "See [`Pallet::set_parathread_retries`].",
                                ],
                            },
                            Variant {
                                name: "set_group_rotation_frequency",
                                fields: [
                                    Field {
                                        name: Some(
                                            "new",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 4,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "T::BlockNumber",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 8,
                                docs: [
                                    "See [`Pallet::set_group_rotation_frequency`].",
                                ],
                            },
                            Variant {
                                name: "set_chain_availability_period",
                                fields: [
                                    Field {
                                        name: Some(
                                            "new",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 4,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "T::BlockNumber",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 9,
                                docs: [
                                    "See [`Pallet::set_chain_availability_period`].",
                                ],
                            },
                            Variant {
                                name: "set_thread_availability_period",
                                fields: [
                                    Field {
                                        name: Some(
                                            "new",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 4,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "T::BlockNumber",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 10,
                                docs: [
                                    "See [`Pallet::set_thread_availability_period`].",
                                ],
                            },
                            Variant {
                                name: "set_scheduling_lookahead",
                                fields: [
                                    Field {
                                        name: Some(
                                            "new",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 4,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "u32",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 11,
                                docs: [
                                    "See [`Pallet::set_scheduling_lookahead`].",
                                ],
                            },
                            Variant {
                                name: "set_max_validators_per_core",
                                fields: [
                                    Field {
                                        name: Some(
                                            "new",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 137,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "Option<u32>",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 12,
                                docs: [
                                    "See [`Pallet::set_max_validators_per_core`].",
                                ],
                            },
                            Variant {
                                name: "set_max_validators",
                                fields: [
                                    Field {
                                        name: Some(
                                            "new",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 137,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "Option<u32>",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 13,
                                docs: [
                                    "See [`Pallet::set_max_validators`].",
                                ],
                            },
                            Variant {
                                name: "set_dispute_period",
                                fields: [
                                    Field {
                                        name: Some(
                                            "new",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 4,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "SessionIndex",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 14,
                                docs: [
                                    "See [`Pallet::set_dispute_period`].",
                                ],
                            },
                            Variant {
                                name: "set_dispute_post_conclusion_acceptance_period",
                                fields: [
                                    Field {
                                        name: Some(
                                            "new",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 4,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "T::BlockNumber",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 15,
                                docs: [
                                    "See [`Pallet::set_dispute_post_conclusion_acceptance_period`].",
                                ],
                            },
                            Variant {
                                name: "set_no_show_slots",
                                fields: [
                                    Field {
                                        name: Some(
                                            "new",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 4,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "u32",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 18,
                                docs: [
                                    "See [`Pallet::set_no_show_slots`].",
                                ],
                            },
                            Variant {
                                name: "set_n_delay_tranches",
                                fields: [
                                    Field {
                                        name: Some(
                                            "new",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 4,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "u32",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 19,
                                docs: [
                                    "See [`Pallet::set_n_delay_tranches`].",
                                ],
                            },
                            Variant {
                                name: "set_zeroth_delay_tranche_width",
                                fields: [
                                    Field {
                                        name: Some(
                                            "new",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 4,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "u32",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 20,
                                docs: [
                                    "See [`Pallet::set_zeroth_delay_tranche_width`].",
                                ],
                            },
                            Variant {
                                name: "set_needed_approvals",
                                fields: [
                                    Field {
                                        name: Some(
                                            "new",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 4,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "u32",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 21,
                                docs: [
                                    "See [`Pallet::set_needed_approvals`].",
                                ],
                            },
                            Variant {
                                name: "set_relay_vrf_modulo_samples",
                                fields: [
                                    Field {
                                        name: Some(
                                            "new",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 4,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "u32",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 22,
                                docs: [
                                    "See [`Pallet::set_relay_vrf_modulo_samples`].",
                                ],
                            },
                            Variant {
                                name: "set_max_upward_queue_count",
                                fields: [
                                    Field {
                                        name: Some(
                                            "new",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 4,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "u32",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 23,
                                docs: [
                                    "See [`Pallet::set_max_upward_queue_count`].",
                                ],
                            },
                            Variant {
                                name: "set_max_upward_queue_size",
                                fields: [
                                    Field {
                                        name: Some(
                                            "new",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 4,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "u32",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 24,
                                docs: [
                                    "See [`Pallet::set_max_upward_queue_size`].",
                                ],
                            },
                            Variant {
                                name: "set_max_downward_message_size",
                                fields: [
                                    Field {
                                        name: Some(
                                            "new",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 4,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "u32",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 25,
                                docs: [
                                    "See [`Pallet::set_max_downward_message_size`].",
                                ],
                            },
                            Variant {
                                name: "set_max_upward_message_size",
                                fields: [
                                    Field {
                                        name: Some(
                                            "new",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 4,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "u32",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 27,
                                docs: [
                                    "See [`Pallet::set_max_upward_message_size`].",
                                ],
                            },
                            Variant {
                                name: "set_max_upward_message_num_per_candidate",
                                fields: [
                                    Field {
                                        name: Some(
                                            "new",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 4,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "u32",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 28,
                                docs: [
                                    "See [`Pallet::set_max_upward_message_num_per_candidate`].",
                                ],
                            },
                            Variant {
                                name: "set_hrmp_open_request_ttl",
                                fields: [
                                    Field {
                                        name: Some(
                                            "new",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 4,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "u32",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 29,
                                docs: [
                                    "See [`Pallet::set_hrmp_open_request_ttl`].",
                                ],
                            },
                            Variant {
                                name: "set_hrmp_sender_deposit",
                                fields: [
                                    Field {
                                        name: Some(
                                            "new",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 6,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "Balance",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 30,
                                docs: [
                                    "See [`Pallet::set_hrmp_sender_deposit`].",
                                ],
                            },
                            Variant {
                                name: "set_hrmp_recipient_deposit",
                                fields: [
                                    Field {
                                        name: Some(
                                            "new",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 6,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "Balance",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 31,
                                docs: [
                                    "See [`Pallet::set_hrmp_recipient_deposit`].",
                                ],
                            },
                            Variant {
                                name: "set_hrmp_channel_max_capacity",
                                fields: [
                                    Field {
                                        name: Some(
                                            "new",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 4,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "u32",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 32,
                                docs: [
                                    "See [`Pallet::set_hrmp_channel_max_capacity`].",
                                ],
                            },
                            Variant {
                                name: "set_hrmp_channel_max_total_size",
                                fields: [
                                    Field {
                                        name: Some(
                                            "new",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 4,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "u32",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 33,
                                docs: [
                                    "See [`Pallet::set_hrmp_channel_max_total_size`].",
                                ],
                            },
                            Variant {
                                name: "set_hrmp_max_parachain_inbound_channels",
                                fields: [
                                    Field {
                                        name: Some(
                                            "new",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 4,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "u32",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 34,
                                docs: [
                                    "See [`Pallet::set_hrmp_max_parachain_inbound_channels`].",
                                ],
                            },
                            Variant {
                                name: "set_hrmp_max_parathread_inbound_channels",
                                fields: [
                                    Field {
                                        name: Some(
                                            "new",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 4,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "u32",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 35,
                                docs: [
                                    "See [`Pallet::set_hrmp_max_parathread_inbound_channels`].",
                                ],
                            },
                            Variant {
                                name: "set_hrmp_channel_max_message_size",
                                fields: [
                                    Field {
                                        name: Some(
                                            "new",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 4,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "u32",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 36,
                                docs: [
                                    "See [`Pallet::set_hrmp_channel_max_message_size`].",
                                ],
                            },
                            Variant {
                                name: "set_hrmp_max_parachain_outbound_channels",
                                fields: [
                                    Field {
                                        name: Some(
                                            "new",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 4,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "u32",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 37,
                                docs: [
                                    "See [`Pallet::set_hrmp_max_parachain_outbound_channels`].",
                                ],
                            },
                            Variant {
                                name: "set_hrmp_max_parathread_outbound_channels",
                                fields: [
                                    Field {
                                        name: Some(
                                            "new",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 4,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "u32",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 38,
                                docs: [
                                    "See [`Pallet::set_hrmp_max_parathread_outbound_channels`].",
                                ],
                            },
                            Variant {
                                name: "set_hrmp_max_message_num_per_candidate",
                                fields: [
                                    Field {
                                        name: Some(
                                            "new",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 4,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "u32",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 39,
                                docs: [
                                    "See [`Pallet::set_hrmp_max_message_num_per_candidate`].",
                                ],
                            },
                            Variant {
                                name: "set_pvf_checking_enabled",
                                fields: [
                                    Field {
                                        name: Some(
                                            "new",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 44,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "bool",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 41,
                                docs: [
                                    "See [`Pallet::set_pvf_checking_enabled`].",
                                ],
                            },
                            Variant {
                                name: "set_pvf_voting_ttl",
                                fields: [
                                    Field {
                                        name: Some(
                                            "new",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 4,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "SessionIndex",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 42,
                                docs: [
                                    "See [`Pallet::set_pvf_voting_ttl`].",
                                ],
                            },
                            Variant {
                                name: "set_minimum_validation_upgrade_delay",
                                fields: [
                                    Field {
                                        name: Some(
                                            "new",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 4,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "T::BlockNumber",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 43,
                                docs: [
                                    "See [`Pallet::set_minimum_validation_upgrade_delay`].",
                                ],
                            },
                            Variant {
                                name: "set_bypass_consistency_check",
                                fields: [
                                    Field {
                                        name: Some(
                                            "new",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 44,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "bool",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 44,
                                docs: [
                                    "See [`Pallet::set_bypass_consistency_check`].",
                                ],
                            },
                            Variant {
                                name: "set_async_backing_params",
                                fields: [
                                    Field {
                                        name: Some(
                                            "new",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 305,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "AsyncBackingParams",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 45,
                                docs: [
                                    "See [`Pallet::set_async_backing_params`].",
                                ],
                            },
                            Variant {
                                name: "set_executor_params",
                                fields: [
                                    Field {
                                        name: Some(
                                            "new",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 306,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "ExecutorParams",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 46,
                                docs: [
                                    "See [`Pallet::set_executor_params`].",
                                ],
                            },
                        ],
                    },
                ),
                docs: [
                    "Contains a variant per dispatchable extrinsic that this pallet has.",
                ],
            },
        },
        PortableType {
            id: 305,
            ty: Type {
                path: Path {
                    segments: [
                        "polkadot_primitives",
                        "vstaging",
                        "AsyncBackingParams",
                    ],
                },
                type_params: [],
                type_def: Composite(
                    TypeDefComposite {
                        fields: [
                            Field {
                                name: Some(
                                    "max_candidate_depth",
                                ),
                                ty: UntrackedSymbol {
                                    id: 4,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "u32",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "allowed_ancestry_len",
                                ),
                                ty: UntrackedSymbol {
                                    id: 4,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "u32",
                                ),
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 306,
            ty: Type {
                path: Path {
                    segments: [
                        "polkadot_primitives",
                        "v5",
                        "executor_params",
                        "ExecutorParams",
                    ],
                },
                type_params: [],
                type_def: Composite(
                    TypeDefComposite {
                        fields: [
                            Field {
                                name: None,
                                ty: UntrackedSymbol {
                                    id: 307,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "Vec<ExecutorParam>",
                                ),
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 307,
            ty: Type {
                path: Path {
                    segments: [],
                },
                type_params: [],
                type_def: Sequence(
                    TypeDefSequence {
                        type_param: UntrackedSymbol {
                            id: 308,
                            marker: PhantomData<fn() -> core::any::TypeId>,
                        },
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 308,
            ty: Type {
                path: Path {
                    segments: [
                        "polkadot_primitives",
                        "v5",
                        "executor_params",
                        "ExecutorParam",
                    ],
                },
                type_params: [],
                type_def: Variant(
                    TypeDefVariant {
                        variants: [
                            Variant {
                                name: "MaxMemoryPages",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 4,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "u32",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 1,
                                docs: [],
                            },
                            Variant {
                                name: "StackLogicalMax",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 4,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "u32",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 2,
                                docs: [],
                            },
                            Variant {
                                name: "StackNativeMax",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 4,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "u32",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 3,
                                docs: [],
                            },
                            Variant {
                                name: "PrecheckingMaxMemory",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 11,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "u64",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 4,
                                docs: [],
                            },
                            Variant {
                                name: "PvfPrepTimeout",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 309,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "PvfPrepTimeoutKind",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 11,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "u64",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 5,
                                docs: [],
                            },
                            Variant {
                                name: "PvfExecTimeout",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 310,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "PvfExecTimeoutKind",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 11,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "u64",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 6,
                                docs: [],
                            },
                            Variant {
                                name: "WasmExtBulkMemory",
                                fields: [],
                                index: 7,
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 309,
            ty: Type {
                path: Path {
                    segments: [
                        "polkadot_primitives",
                        "v5",
                        "PvfPrepTimeoutKind",
                    ],
                },
                type_params: [],
                type_def: Variant(
                    TypeDefVariant {
                        variants: [
                            Variant {
                                name: "Precheck",
                                fields: [],
                                index: 0,
                                docs: [],
                            },
                            Variant {
                                name: "Lenient",
                                fields: [],
                                index: 1,
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 310,
            ty: Type {
                path: Path {
                    segments: [
                        "polkadot_primitives",
                        "v5",
                        "PvfExecTimeoutKind",
                    ],
                },
                type_params: [],
                type_def: Variant(
                    TypeDefVariant {
                        variants: [
                            Variant {
                                name: "Backing",
                                fields: [],
                                index: 0,
                                docs: [],
                            },
                            Variant {
                                name: "Approval",
                                fields: [],
                                index: 1,
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 311,
            ty: Type {
                path: Path {
                    segments: [
                        "polkadot_runtime_parachains",
                        "shared",
                        "pallet",
                        "Call",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "T",
                        ty: None,
                    },
                ],
                type_def: Variant(
                    TypeDefVariant {
                        variants: [],
                    },
                ),
                docs: [
                    "Contains a variant per dispatchable extrinsic that this pallet has.",
                ],
            },
        },
        PortableType {
            id: 312,
            ty: Type {
                path: Path {
                    segments: [
                        "polkadot_runtime_parachains",
                        "inclusion",
                        "pallet",
                        "Call",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "T",
                        ty: None,
                    },
                ],
                type_def: Variant(
                    TypeDefVariant {
                        variants: [],
                    },
                ),
                docs: [
                    "Contains a variant per dispatchable extrinsic that this pallet has.",
                ],
            },
        },
        PortableType {
            id: 313,
            ty: Type {
                path: Path {
                    segments: [
                        "polkadot_runtime_parachains",
                        "paras_inherent",
                        "pallet",
                        "Call",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "T",
                        ty: None,
                    },
                ],
                type_def: Variant(
                    TypeDefVariant {
                        variants: [
                            Variant {
                                name: "enter",
                                fields: [
                                    Field {
                                        name: Some(
                                            "data",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 314,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "ParachainsInherentData<T::Header>",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 0,
                                docs: [
                                    "See [`Pallet::enter`].",
                                ],
                            },
                        ],
                    },
                ),
                docs: [
                    "Contains a variant per dispatchable extrinsic that this pallet has.",
                ],
            },
        },
        PortableType {
            id: 314,
            ty: Type {
                path: Path {
                    segments: [
                        "polkadot_primitives",
                        "v5",
                        "InherentData",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "HDR",
                        ty: Some(
                            UntrackedSymbol {
                                id: 89,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ),
                    },
                ],
                type_def: Composite(
                    TypeDefComposite {
                        fields: [
                            Field {
                                name: Some(
                                    "bitfields",
                                ),
                                ty: UntrackedSymbol {
                                    id: 315,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "UncheckedSignedAvailabilityBitfields",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "backed_candidates",
                                ),
                                ty: UntrackedSymbol {
                                    id: 322,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "Vec<BackedCandidate<HDR::Hash>>",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "disputes",
                                ),
                                ty: UntrackedSymbol {
                                    id: 339,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "MultiDisputeStatementSet",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "parent_header",
                                ),
                                ty: UntrackedSymbol {
                                    id: 89,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "HDR",
                                ),
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 315,
            ty: Type {
                path: Path {
                    segments: [],
                },
                type_params: [],
                type_def: Sequence(
                    TypeDefSequence {
                        type_param: UntrackedSymbol {
                            id: 316,
                            marker: PhantomData<fn() -> core::any::TypeId>,
                        },
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 316,
            ty: Type {
                path: Path {
                    segments: [
                        "polkadot_primitives",
                        "v5",
                        "signed",
                        "UncheckedSigned",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "Payload",
                        ty: Some(
                            UntrackedSymbol {
                                id: 317,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ),
                    },
                    TypeParameter {
                        name: "RealPayload",
                        ty: Some(
                            UntrackedSymbol {
                                id: 317,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ),
                    },
                ],
                type_def: Composite(
                    TypeDefComposite {
                        fields: [
                            Field {
                                name: Some(
                                    "payload",
                                ),
                                ty: UntrackedSymbol {
                                    id: 317,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "Payload",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "validator_index",
                                ),
                                ty: UntrackedSymbol {
                                    id: 320,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "ValidatorIndex",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "signature",
                                ),
                                ty: UntrackedSymbol {
                                    id: 321,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "ValidatorSignature",
                                ),
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 317,
            ty: Type {
                path: Path {
                    segments: [
                        "polkadot_primitives",
                        "v5",
                        "AvailabilityBitfield",
                    ],
                },
                type_params: [],
                type_def: Composite(
                    TypeDefComposite {
                        fields: [
                            Field {
                                name: None,
                                ty: UntrackedSymbol {
                                    id: 318,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "BitVec<u8, bitvec::order::Lsb0>",
                                ),
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 318,
            ty: Type {
                path: Path {
                    segments: [],
                },
                type_params: [],
                type_def: BitSequence(
                    TypeDefBitSequence {
                        bit_store_type: UntrackedSymbol {
                            id: 2,
                            marker: PhantomData<fn() -> core::any::TypeId>,
                        },
                        bit_order_type: UntrackedSymbol {
                            id: 319,
                            marker: PhantomData<fn() -> core::any::TypeId>,
                        },
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 319,
            ty: Type {
                path: Path {
                    segments: [
                        "bitvec",
                        "order",
                        "Lsb0",
                    ],
                },
                type_params: [],
                type_def: Composite(
                    TypeDefComposite {
                        fields: [],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 320,
            ty: Type {
                path: Path {
                    segments: [
                        "polkadot_primitives",
                        "v5",
                        "ValidatorIndex",
                    ],
                },
                type_params: [],
                type_def: Composite(
                    TypeDefComposite {
                        fields: [
                            Field {
                                name: None,
                                ty: UntrackedSymbol {
                                    id: 4,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "u32",
                                ),
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 321,
            ty: Type {
                path: Path {
                    segments: [
                        "polkadot_primitives",
                        "v5",
                        "validator_app",
                        "Signature",
                    ],
                },
                type_params: [],
                type_def: Composite(
                    TypeDefComposite {
                        fields: [
                            Field {
                                name: None,
                                ty: UntrackedSymbol {
                                    id: 134,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "sr25519::Signature",
                                ),
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 322,
            ty: Type {
                path: Path {
                    segments: [],
                },
                type_params: [],
                type_def: Sequence(
                    TypeDefSequence {
                        type_param: UntrackedSymbol {
                            id: 323,
                            marker: PhantomData<fn() -> core::any::TypeId>,
                        },
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 323,
            ty: Type {
                path: Path {
                    segments: [
                        "polkadot_primitives",
                        "v5",
                        "BackedCandidate",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "H",
                        ty: Some(
                            UntrackedSymbol {
                                id: 12,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ),
                    },
                ],
                type_def: Composite(
                    TypeDefComposite {
                        fields: [
                            Field {
                                name: Some(
                                    "candidate",
                                ),
                                ty: UntrackedSymbol {
                                    id: 324,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "CommittedCandidateReceipt<H>",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "validity_votes",
                                ),
                                ty: UntrackedSymbol {
                                    id: 337,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "Vec<ValidityAttestation>",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "validator_indices",
                                ),
                                ty: UntrackedSymbol {
                                    id: 318,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "BitVec<u8, bitvec::order::Lsb0>",
                                ),
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 324,
            ty: Type {
                path: Path {
                    segments: [
                        "polkadot_primitives",
                        "v5",
                        "CommittedCandidateReceipt",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "H",
                        ty: Some(
                            UntrackedSymbol {
                                id: 12,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ),
                    },
                ],
                type_def: Composite(
                    TypeDefComposite {
                        fields: [
                            Field {
                                name: Some(
                                    "descriptor",
                                ),
                                ty: UntrackedSymbol {
                                    id: 325,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "CandidateDescriptor<H>",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "commitments",
                                ),
                                ty: UntrackedSymbol {
                                    id: 329,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "CandidateCommitments",
                                ),
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 325,
            ty: Type {
                path: Path {
                    segments: [
                        "polkadot_primitives",
                        "v5",
                        "CandidateDescriptor",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "H",
                        ty: Some(
                            UntrackedSymbol {
                                id: 12,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ),
                    },
                ],
                type_def: Composite(
                    TypeDefComposite {
                        fields: [
                            Field {
                                name: Some(
                                    "para_id",
                                ),
                                ty: UntrackedSymbol {
                                    id: 158,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "Id",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "relay_parent",
                                ),
                                ty: UntrackedSymbol {
                                    id: 12,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "H",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "collator",
                                ),
                                ty: UntrackedSymbol {
                                    id: 326,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "CollatorId",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "persisted_validation_data_hash",
                                ),
                                ty: UntrackedSymbol {
                                    id: 12,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "Hash",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "pov_hash",
                                ),
                                ty: UntrackedSymbol {
                                    id: 12,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "Hash",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "erasure_root",
                                ),
                                ty: UntrackedSymbol {
                                    id: 12,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "Hash",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "signature",
                                ),
                                ty: UntrackedSymbol {
                                    id: 327,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "CollatorSignature",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "para_head",
                                ),
                                ty: UntrackedSymbol {
                                    id: 12,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "Hash",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "validation_code_hash",
                                ),
                                ty: UntrackedSymbol {
                                    id: 328,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "ValidationCodeHash",
                                ),
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 326,
            ty: Type {
                path: Path {
                    segments: [
                        "polkadot_primitives",
                        "v5",
                        "collator_app",
                        "Public",
                    ],
                },
                type_params: [],
                type_def: Composite(
                    TypeDefComposite {
                        fields: [
                            Field {
                                name: None,
                                ty: UntrackedSymbol {
                                    id: 56,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "sr25519::Public",
                                ),
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 327,
            ty: Type {
                path: Path {
                    segments: [
                        "polkadot_primitives",
                        "v5",
                        "collator_app",
                        "Signature",
                    ],
                },
                type_params: [],
                type_def: Composite(
                    TypeDefComposite {
                        fields: [
                            Field {
                                name: None,
                                ty: UntrackedSymbol {
                                    id: 134,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "sr25519::Signature",
                                ),
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 328,
            ty: Type {
                path: Path {
                    segments: [
                        "polkadot_parachain",
                        "primitives",
                        "ValidationCodeHash",
                    ],
                },
                type_params: [],
                type_def: Composite(
                    TypeDefComposite {
                        fields: [
                            Field {
                                name: None,
                                ty: UntrackedSymbol {
                                    id: 12,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "Hash",
                                ),
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 329,
            ty: Type {
                path: Path {
                    segments: [
                        "polkadot_primitives",
                        "v5",
                        "CandidateCommitments",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "N",
                        ty: Some(
                            UntrackedSymbol {
                                id: 4,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ),
                    },
                ],
                type_def: Composite(
                    TypeDefComposite {
                        fields: [
                            Field {
                                name: Some(
                                    "upward_messages",
                                ),
                                ty: UntrackedSymbol {
                                    id: 330,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "UpwardMessages",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "horizontal_messages",
                                ),
                                ty: UntrackedSymbol {
                                    id: 331,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "HorizontalMessages",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "new_validation_code",
                                ),
                                ty: UntrackedSymbol {
                                    id: 334,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "Option<ValidationCode>",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "head_data",
                                ),
                                ty: UntrackedSymbol {
                                    id: 336,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "HeadData",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "processed_downward_messages",
                                ),
                                ty: UntrackedSymbol {
                                    id: 4,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "u32",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "hrmp_watermark",
                                ),
                                ty: UntrackedSymbol {
                                    id: 4,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "N",
                                ),
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 330,
            ty: Type {
                path: Path {
                    segments: [
                        "bounded_collections",
                        "bounded_vec",
                        "BoundedVec",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "T",
                        ty: Some(
                            UntrackedSymbol {
                                id: 13,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ),
                    },
                    TypeParameter {
                        name: "S",
                        ty: None,
                    },
                ],
                type_def: Composite(
                    TypeDefComposite {
                        fields: [
                            Field {
                                name: None,
                                ty: UntrackedSymbol {
                                    id: 83,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "Vec<T>",
                                ),
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 331,
            ty: Type {
                path: Path {
                    segments: [
                        "bounded_collections",
                        "bounded_vec",
                        "BoundedVec",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "T",
                        ty: Some(
                            UntrackedSymbol {
                                id: 332,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ),
                    },
                    TypeParameter {
                        name: "S",
                        ty: None,
                    },
                ],
                type_def: Composite(
                    TypeDefComposite {
                        fields: [
                            Field {
                                name: None,
                                ty: UntrackedSymbol {
                                    id: 333,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "Vec<T>",
                                ),
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 332,
            ty: Type {
                path: Path {
                    segments: [
                        "polkadot_core_primitives",
                        "OutboundHrmpMessage",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "Id",
                        ty: Some(
                            UntrackedSymbol {
                                id: 158,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ),
                    },
                ],
                type_def: Composite(
                    TypeDefComposite {
                        fields: [
                            Field {
                                name: Some(
                                    "recipient",
                                ),
                                ty: UntrackedSymbol {
                                    id: 158,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "Id",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "data",
                                ),
                                ty: UntrackedSymbol {
                                    id: 13,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "sp_std::vec::Vec<u8>",
                                ),
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 333,
            ty: Type {
                path: Path {
                    segments: [],
                },
                type_params: [],
                type_def: Sequence(
                    TypeDefSequence {
                        type_param: UntrackedSymbol {
                            id: 332,
                            marker: PhantomData<fn() -> core::any::TypeId>,
                        },
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 334,
            ty: Type {
                path: Path {
                    segments: [
                        "Option",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "T",
                        ty: Some(
                            UntrackedSymbol {
                                id: 335,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ),
                    },
                ],
                type_def: Variant(
                    TypeDefVariant {
                        variants: [
                            Variant {
                                name: "None",
                                fields: [],
                                index: 0,
                                docs: [],
                            },
                            Variant {
                                name: "Some",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 335,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: None,
                                        docs: [],
                                    },
                                ],
                                index: 1,
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 335,
            ty: Type {
                path: Path {
                    segments: [
                        "polkadot_parachain",
                        "primitives",
                        "ValidationCode",
                    ],
                },
                type_params: [],
                type_def: Composite(
                    TypeDefComposite {
                        fields: [
                            Field {
                                name: None,
                                ty: UntrackedSymbol {
                                    id: 13,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "Vec<u8>",
                                ),
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 336,
            ty: Type {
                path: Path {
                    segments: [
                        "polkadot_parachain",
                        "primitives",
                        "HeadData",
                    ],
                },
                type_params: [],
                type_def: Composite(
                    TypeDefComposite {
                        fields: [
                            Field {
                                name: None,
                                ty: UntrackedSymbol {
                                    id: 13,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "Vec<u8>",
                                ),
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 337,
            ty: Type {
                path: Path {
                    segments: [],
                },
                type_params: [],
                type_def: Sequence(
                    TypeDefSequence {
                        type_param: UntrackedSymbol {
                            id: 338,
                            marker: PhantomData<fn() -> core::any::TypeId>,
                        },
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 338,
            ty: Type {
                path: Path {
                    segments: [
                        "polkadot_primitives",
                        "v5",
                        "ValidityAttestation",
                    ],
                },
                type_params: [],
                type_def: Variant(
                    TypeDefVariant {
                        variants: [
                            Variant {
                                name: "Implicit",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 321,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "ValidatorSignature",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 1,
                                docs: [],
                            },
                            Variant {
                                name: "Explicit",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 321,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "ValidatorSignature",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 2,
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 339,
            ty: Type {
                path: Path {
                    segments: [],
                },
                type_params: [],
                type_def: Sequence(
                    TypeDefSequence {
                        type_param: UntrackedSymbol {
                            id: 340,
                            marker: PhantomData<fn() -> core::any::TypeId>,
                        },
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 340,
            ty: Type {
                path: Path {
                    segments: [
                        "polkadot_primitives",
                        "v5",
                        "DisputeStatementSet",
                    ],
                },
                type_params: [],
                type_def: Composite(
                    TypeDefComposite {
                        fields: [
                            Field {
                                name: Some(
                                    "candidate_hash",
                                ),
                                ty: UntrackedSymbol {
                                    id: 341,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "CandidateHash",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "session",
                                ),
                                ty: UntrackedSymbol {
                                    id: 4,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "SessionIndex",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "statements",
                                ),
                                ty: UntrackedSymbol {
                                    id: 342,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "Vec<(DisputeStatement, ValidatorIndex, ValidatorSignature)>",
                                ),
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 341,
            ty: Type {
                path: Path {
                    segments: [
                        "polkadot_core_primitives",
                        "CandidateHash",
                    ],
                },
                type_params: [],
                type_def: Composite(
                    TypeDefComposite {
                        fields: [
                            Field {
                                name: None,
                                ty: UntrackedSymbol {
                                    id: 12,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "Hash",
                                ),
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 342,
            ty: Type {
                path: Path {
                    segments: [],
                },
                type_params: [],
                type_def: Sequence(
                    TypeDefSequence {
                        type_param: UntrackedSymbol {
                            id: 343,
                            marker: PhantomData<fn() -> core::any::TypeId>,
                        },
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 343,
            ty: Type {
                path: Path {
                    segments: [],
                },
                type_params: [],
                type_def: Tuple(
                    TypeDefTuple {
                        fields: [
                            UntrackedSymbol {
                                id: 344,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                            UntrackedSymbol {
                                id: 320,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                            UntrackedSymbol {
                                id: 321,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 344,
            ty: Type {
                path: Path {
                    segments: [
                        "polkadot_primitives",
                        "v5",
                        "DisputeStatement",
                    ],
                },
                type_params: [],
                type_def: Variant(
                    TypeDefVariant {
                        variants: [
                            Variant {
                                name: "Valid",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 345,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "ValidDisputeStatementKind",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 0,
                                docs: [],
                            },
                            Variant {
                                name: "Invalid",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 346,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "InvalidDisputeStatementKind",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 1,
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 345,
            ty: Type {
                path: Path {
                    segments: [
                        "polkadot_primitives",
                        "v5",
                        "ValidDisputeStatementKind",
                    ],
                },
                type_params: [],
                type_def: Variant(
                    TypeDefVariant {
                        variants: [
                            Variant {
                                name: "Explicit",
                                fields: [],
                                index: 0,
                                docs: [],
                            },
                            Variant {
                                name: "BackingSeconded",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 12,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "Hash",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 1,
                                docs: [],
                            },
                            Variant {
                                name: "BackingValid",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 12,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "Hash",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 2,
                                docs: [],
                            },
                            Variant {
                                name: "ApprovalChecking",
                                fields: [],
                                index: 3,
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 346,
            ty: Type {
                path: Path {
                    segments: [
                        "polkadot_primitives",
                        "v5",
                        "InvalidDisputeStatementKind",
                    ],
                },
                type_params: [],
                type_def: Variant(
                    TypeDefVariant {
                        variants: [
                            Variant {
                                name: "Explicit",
                                fields: [],
                                index: 0,
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 347,
            ty: Type {
                path: Path {
                    segments: [
                        "polkadot_runtime_parachains",
                        "paras",
                        "pallet",
                        "Call",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "T",
                        ty: None,
                    },
                ],
                type_def: Variant(
                    TypeDefVariant {
                        variants: [
                            Variant {
                                name: "force_set_current_code",
                                fields: [
                                    Field {
                                        name: Some(
                                            "para",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 158,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "ParaId",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "new_code",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 335,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "ValidationCode",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 0,
                                docs: [
                                    "See [`Pallet::force_set_current_code`].",
                                ],
                            },
                            Variant {
                                name: "force_set_current_head",
                                fields: [
                                    Field {
                                        name: Some(
                                            "para",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 158,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "ParaId",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "new_head",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 336,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "HeadData",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 1,
                                docs: [
                                    "See [`Pallet::force_set_current_head`].",
                                ],
                            },
                            Variant {
                                name: "force_schedule_code_upgrade",
                                fields: [
                                    Field {
                                        name: Some(
                                            "para",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 158,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "ParaId",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "new_code",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 335,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "ValidationCode",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "relay_parent_number",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 4,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "T::BlockNumber",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 2,
                                docs: [
                                    "See [`Pallet::force_schedule_code_upgrade`].",
                                ],
                            },
                            Variant {
                                name: "force_note_new_head",
                                fields: [
                                    Field {
                                        name: Some(
                                            "para",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 158,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "ParaId",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "new_head",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 336,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "HeadData",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 3,
                                docs: [
                                    "See [`Pallet::force_note_new_head`].",
                                ],
                            },
                            Variant {
                                name: "force_queue_action",
                                fields: [
                                    Field {
                                        name: Some(
                                            "para",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 158,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "ParaId",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 4,
                                docs: [
                                    "See [`Pallet::force_queue_action`].",
                                ],
                            },
                            Variant {
                                name: "add_trusted_validation_code",
                                fields: [
                                    Field {
                                        name: Some(
                                            "validation_code",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 335,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "ValidationCode",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 5,
                                docs: [
                                    "See [`Pallet::add_trusted_validation_code`].",
                                ],
                            },
                            Variant {
                                name: "poke_unused_validation_code",
                                fields: [
                                    Field {
                                        name: Some(
                                            "validation_code_hash",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 328,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "ValidationCodeHash",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 6,
                                docs: [
                                    "See [`Pallet::poke_unused_validation_code`].",
                                ],
                            },
                            Variant {
                                name: "include_pvf_check_statement",
                                fields: [
                                    Field {
                                        name: Some(
                                            "stmt",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 348,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "PvfCheckStatement",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "signature",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 321,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "ValidatorSignature",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 7,
                                docs: [
                                    "See [`Pallet::include_pvf_check_statement`].",
                                ],
                            },
                        ],
                    },
                ),
                docs: [
                    "Contains a variant per dispatchable extrinsic that this pallet has.",
                ],
            },
        },
        PortableType {
            id: 348,
            ty: Type {
                path: Path {
                    segments: [
                        "polkadot_primitives",
                        "v5",
                        "PvfCheckStatement",
                    ],
                },
                type_params: [],
                type_def: Composite(
                    TypeDefComposite {
                        fields: [
                            Field {
                                name: Some(
                                    "accept",
                                ),
                                ty: UntrackedSymbol {
                                    id: 44,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "bool",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "subject",
                                ),
                                ty: UntrackedSymbol {
                                    id: 328,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "ValidationCodeHash",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "session_index",
                                ),
                                ty: UntrackedSymbol {
                                    id: 4,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "SessionIndex",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "validator_index",
                                ),
                                ty: UntrackedSymbol {
                                    id: 320,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "ValidatorIndex",
                                ),
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 349,
            ty: Type {
                path: Path {
                    segments: [
                        "polkadot_runtime_parachains",
                        "initializer",
                        "pallet",
                        "Call",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "T",
                        ty: None,
                    },
                ],
                type_def: Variant(
                    TypeDefVariant {
                        variants: [
                            Variant {
                                name: "force_approve",
                                fields: [
                                    Field {
                                        name: Some(
                                            "up_to",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 4,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "BlockNumber",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 0,
                                docs: [
                                    "See [`Pallet::force_approve`].",
                                ],
                            },
                        ],
                    },
                ),
                docs: [
                    "Contains a variant per dispatchable extrinsic that this pallet has.",
                ],
            },
        },
        PortableType {
            id: 350,
            ty: Type {
                path: Path {
                    segments: [
                        "polkadot_runtime_parachains",
                        "hrmp",
                        "pallet",
                        "Call",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "T",
                        ty: None,
                    },
                ],
                type_def: Variant(
                    TypeDefVariant {
                        variants: [
                            Variant {
                                name: "hrmp_init_open_channel",
                                fields: [
                                    Field {
                                        name: Some(
                                            "recipient",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 158,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "ParaId",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "proposed_max_capacity",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 4,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "u32",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "proposed_max_message_size",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 4,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "u32",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 0,
                                docs: [
                                    "See [`Pallet::hrmp_init_open_channel`].",
                                ],
                            },
                            Variant {
                                name: "hrmp_accept_open_channel",
                                fields: [
                                    Field {
                                        name: Some(
                                            "sender",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 158,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "ParaId",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 1,
                                docs: [
                                    "See [`Pallet::hrmp_accept_open_channel`].",
                                ],
                            },
                            Variant {
                                name: "hrmp_close_channel",
                                fields: [
                                    Field {
                                        name: Some(
                                            "channel_id",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 351,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "HrmpChannelId",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 2,
                                docs: [
                                    "See [`Pallet::hrmp_close_channel`].",
                                ],
                            },
                            Variant {
                                name: "force_clean_hrmp",
                                fields: [
                                    Field {
                                        name: Some(
                                            "para",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 158,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "ParaId",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "inbound",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 4,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "u32",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "outbound",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 4,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "u32",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 3,
                                docs: [
                                    "See [`Pallet::force_clean_hrmp`].",
                                ],
                            },
                            Variant {
                                name: "force_process_hrmp_open",
                                fields: [
                                    Field {
                                        name: Some(
                                            "channels",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 4,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "u32",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 4,
                                docs: [
                                    "See [`Pallet::force_process_hrmp_open`].",
                                ],
                            },
                            Variant {
                                name: "force_process_hrmp_close",
                                fields: [
                                    Field {
                                        name: Some(
                                            "channels",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 4,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "u32",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 5,
                                docs: [
                                    "See [`Pallet::force_process_hrmp_close`].",
                                ],
                            },
                            Variant {
                                name: "hrmp_cancel_open_request",
                                fields: [
                                    Field {
                                        name: Some(
                                            "channel_id",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 351,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "HrmpChannelId",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "open_requests",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 4,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "u32",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 6,
                                docs: [
                                    "See [`Pallet::hrmp_cancel_open_request`].",
                                ],
                            },
                            Variant {
                                name: "force_open_hrmp_channel",
                                fields: [
                                    Field {
                                        name: Some(
                                            "sender",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 158,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "ParaId",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "recipient",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 158,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "ParaId",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "max_capacity",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 4,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "u32",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "max_message_size",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 4,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "u32",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 7,
                                docs: [
                                    "See [`Pallet::force_open_hrmp_channel`].",
                                ],
                            },
                        ],
                    },
                ),
                docs: [
                    "Contains a variant per dispatchable extrinsic that this pallet has.",
                ],
            },
        },
        PortableType {
            id: 351,
            ty: Type {
                path: Path {
                    segments: [
                        "polkadot_parachain",
                        "primitives",
                        "HrmpChannelId",
                    ],
                },
                type_params: [],
                type_def: Composite(
                    TypeDefComposite {
                        fields: [
                            Field {
                                name: Some(
                                    "sender",
                                ),
                                ty: UntrackedSymbol {
                                    id: 158,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "Id",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "recipient",
                                ),
                                ty: UntrackedSymbol {
                                    id: 158,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "Id",
                                ),
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 352,
            ty: Type {
                path: Path {
                    segments: [
                        "polkadot_runtime_parachains",
                        "disputes",
                        "pallet",
                        "Call",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "T",
                        ty: None,
                    },
                ],
                type_def: Variant(
                    TypeDefVariant {
                        variants: [
                            Variant {
                                name: "force_unfreeze",
                                fields: [],
                                index: 0,
                                docs: [
                                    "See [`Pallet::force_unfreeze`].",
                                ],
                            },
                        ],
                    },
                ),
                docs: [
                    "Contains a variant per dispatchable extrinsic that this pallet has.",
                ],
            },
        },
        PortableType {
            id: 353,
            ty: Type {
                path: Path {
                    segments: [
                        "polkadot_runtime_parachains",
                        "disputes",
                        "slashing",
                        "pallet",
                        "Call",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "T",
                        ty: None,
                    },
                ],
                type_def: Variant(
                    TypeDefVariant {
                        variants: [
                            Variant {
                                name: "report_dispute_lost_unsigned",
                                fields: [
                                    Field {
                                        name: Some(
                                            "dispute_proof",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 354,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "Box<DisputeProof>",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "key_owner_proof",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 94,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "T::KeyOwnerProof",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 0,
                                docs: [
                                    "See [`Pallet::report_dispute_lost_unsigned`].",
                                ],
                            },
                        ],
                    },
                ),
                docs: [
                    "Contains a variant per dispatchable extrinsic that this pallet has.",
                ],
            },
        },
        PortableType {
            id: 354,
            ty: Type {
                path: Path {
                    segments: [
                        "polkadot_primitives",
                        "v5",
                        "slashing",
                        "DisputeProof",
                    ],
                },
                type_params: [],
                type_def: Composite(
                    TypeDefComposite {
                        fields: [
                            Field {
                                name: Some(
                                    "time_slot",
                                ),
                                ty: UntrackedSymbol {
                                    id: 355,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "DisputesTimeSlot",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "kind",
                                ),
                                ty: UntrackedSymbol {
                                    id: 356,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "SlashingOffenceKind",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "validator_index",
                                ),
                                ty: UntrackedSymbol {
                                    id: 320,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "ValidatorIndex",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "validator_id",
                                ),
                                ty: UntrackedSymbol {
                                    id: 116,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "ValidatorId",
                                ),
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 355,
            ty: Type {
                path: Path {
                    segments: [
                        "polkadot_primitives",
                        "v5",
                        "slashing",
                        "DisputesTimeSlot",
                    ],
                },
                type_params: [],
                type_def: Composite(
                    TypeDefComposite {
                        fields: [
                            Field {
                                name: Some(
                                    "session_index",
                                ),
                                ty: UntrackedSymbol {
                                    id: 4,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "SessionIndex",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "candidate_hash",
                                ),
                                ty: UntrackedSymbol {
                                    id: 341,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "CandidateHash",
                                ),
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 356,
            ty: Type {
                path: Path {
                    segments: [
                        "polkadot_primitives",
                        "v5",
                        "slashing",
                        "SlashingOffenceKind",
                    ],
                },
                type_params: [],
                type_def: Variant(
                    TypeDefVariant {
                        variants: [
                            Variant {
                                name: "ForInvalid",
                                fields: [],
                                index: 0,
                                docs: [],
                            },
                            Variant {
                                name: "AgainstValid",
                                fields: [],
                                index: 1,
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 357,
            ty: Type {
                path: Path {
                    segments: [
                        "polkadot_runtime_common",
                        "paras_registrar",
                        "pallet",
                        "Call",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "T",
                        ty: None,
                    },
                ],
                type_def: Variant(
                    TypeDefVariant {
                        variants: [
                            Variant {
                                name: "register",
                                fields: [
                                    Field {
                                        name: Some(
                                            "id",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 158,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "ParaId",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "genesis_head",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 336,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "HeadData",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "validation_code",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 335,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "ValidationCode",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 0,
                                docs: [
                                    "See [`Pallet::register`].",
                                ],
                            },
                            Variant {
                                name: "force_register",
                                fields: [
                                    Field {
                                        name: Some(
                                            "who",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 0,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "T::AccountId",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "deposit",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 6,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "BalanceOf<T>",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "id",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 158,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "ParaId",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "genesis_head",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 336,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "HeadData",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "validation_code",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 335,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "ValidationCode",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 1,
                                docs: [
                                    "See [`Pallet::force_register`].",
                                ],
                            },
                            Variant {
                                name: "deregister",
                                fields: [
                                    Field {
                                        name: Some(
                                            "id",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 158,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "ParaId",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 2,
                                docs: [
                                    "See [`Pallet::deregister`].",
                                ],
                            },
                            Variant {
                                name: "swap",
                                fields: [
                                    Field {
                                        name: Some(
                                            "id",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 158,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "ParaId",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "other",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 158,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "ParaId",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 3,
                                docs: [
                                    "See [`Pallet::swap`].",
                                ],
                            },
                            Variant {
                                name: "remove_lock",
                                fields: [
                                    Field {
                                        name: Some(
                                            "para",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 158,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "ParaId",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 4,
                                docs: [
                                    "See [`Pallet::remove_lock`].",
                                ],
                            },
                            Variant {
                                name: "reserve",
                                fields: [],
                                index: 5,
                                docs: [
                                    "See [`Pallet::reserve`].",
                                ],
                            },
                            Variant {
                                name: "add_lock",
                                fields: [
                                    Field {
                                        name: Some(
                                            "para",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 158,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "ParaId",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 6,
                                docs: [
                                    "See [`Pallet::add_lock`].",
                                ],
                            },
                            Variant {
                                name: "schedule_code_upgrade",
                                fields: [
                                    Field {
                                        name: Some(
                                            "para",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 158,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "ParaId",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "new_code",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 335,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "ValidationCode",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 7,
                                docs: [
                                    "See [`Pallet::schedule_code_upgrade`].",
                                ],
                            },
                            Variant {
                                name: "set_current_head",
                                fields: [
                                    Field {
                                        name: Some(
                                            "para",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 158,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "ParaId",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "new_head",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 336,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "HeadData",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 8,
                                docs: [
                                    "See [`Pallet::set_current_head`].",
                                ],
                            },
                        ],
                    },
                ),
                docs: [
                    "Contains a variant per dispatchable extrinsic that this pallet has.",
                ],
            },
        },
        PortableType {
            id: 358,
            ty: Type {
                path: Path {
                    segments: [
                        "polkadot_runtime_common",
                        "slots",
                        "pallet",
                        "Call",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "T",
                        ty: None,
                    },
                ],
                type_def: Variant(
                    TypeDefVariant {
                        variants: [
                            Variant {
                                name: "force_lease",
                                fields: [
                                    Field {
                                        name: Some(
                                            "para",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 158,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "ParaId",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "leaser",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 0,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "T::AccountId",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "amount",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 6,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "BalanceOf<T>",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "period_begin",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 4,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "LeasePeriodOf<T>",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "period_count",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 4,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "LeasePeriodOf<T>",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 0,
                                docs: [
                                    "See [`Pallet::force_lease`].",
                                ],
                            },
                            Variant {
                                name: "clear_all_leases",
                                fields: [
                                    Field {
                                        name: Some(
                                            "para",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 158,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "ParaId",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 1,
                                docs: [
                                    "See [`Pallet::clear_all_leases`].",
                                ],
                            },
                            Variant {
                                name: "trigger_onboard",
                                fields: [
                                    Field {
                                        name: Some(
                                            "para",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 158,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "ParaId",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 2,
                                docs: [
                                    "See [`Pallet::trigger_onboard`].",
                                ],
                            },
                        ],
                    },
                ),
                docs: [
                    "Contains a variant per dispatchable extrinsic that this pallet has.",
                ],
            },
        },
        PortableType {
            id: 359,
            ty: Type {
                path: Path {
                    segments: [
                        "polkadot_runtime_common",
                        "auctions",
                        "pallet",
                        "Call",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "T",
                        ty: None,
                    },
                ],
                type_def: Variant(
                    TypeDefVariant {
                        variants: [
                            Variant {
                                name: "new_auction",
                                fields: [
                                    Field {
                                        name: Some(
                                            "duration",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 91,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "T::BlockNumber",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "lease_period_index",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 91,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "LeasePeriodOf<T>",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 0,
                                docs: [
                                    "See [`Pallet::new_auction`].",
                                ],
                            },
                            Variant {
                                name: "bid",
                                fields: [
                                    Field {
                                        name: Some(
                                            "para",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 360,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "ParaId",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "auction_index",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 91,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "AuctionIndex",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "first_slot",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 91,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "LeasePeriodOf<T>",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "last_slot",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 91,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "LeasePeriodOf<T>",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "amount",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 60,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "BalanceOf<T>",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 1,
                                docs: [
                                    "See [`Pallet::bid`].",
                                ],
                            },
                            Variant {
                                name: "cancel_auction",
                                fields: [],
                                index: 2,
                                docs: [
                                    "See [`Pallet::cancel_auction`].",
                                ],
                            },
                        ],
                    },
                ),
                docs: [
                    "Contains a variant per dispatchable extrinsic that this pallet has.",
                ],
            },
        },
        PortableType {
            id: 360,
            ty: Type {
                path: Path {
                    segments: [],
                },
                type_params: [],
                type_def: Compact(
                    TypeDefCompact {
                        type_param: UntrackedSymbol {
                            id: 158,
                            marker: PhantomData<fn() -> core::any::TypeId>,
                        },
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 361,
            ty: Type {
                path: Path {
                    segments: [
                        "polkadot_runtime_common",
                        "crowdloan",
                        "pallet",
                        "Call",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "T",
                        ty: None,
                    },
                ],
                type_def: Variant(
                    TypeDefVariant {
                        variants: [
                            Variant {
                                name: "create",
                                fields: [
                                    Field {
                                        name: Some(
                                            "index",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 360,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "ParaId",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "cap",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 60,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "BalanceOf<T>",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "first_period",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 91,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "LeasePeriodOf<T>",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "last_period",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 91,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "LeasePeriodOf<T>",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "end",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 91,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "T::BlockNumber",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "verifier",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 362,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "Option<MultiSigner>",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 0,
                                docs: [
                                    "See [`Pallet::create`].",
                                ],
                            },
                            Variant {
                                name: "contribute",
                                fields: [
                                    Field {
                                        name: Some(
                                            "index",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 360,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "ParaId",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "value",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 60,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "BalanceOf<T>",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "signature",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 366,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "Option<MultiSignature>",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 1,
                                docs: [
                                    "See [`Pallet::contribute`].",
                                ],
                            },
                            Variant {
                                name: "withdraw",
                                fields: [
                                    Field {
                                        name: Some(
                                            "who",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 0,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "T::AccountId",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "index",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 360,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "ParaId",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 2,
                                docs: [
                                    "See [`Pallet::withdraw`].",
                                ],
                            },
                            Variant {
                                name: "refund",
                                fields: [
                                    Field {
                                        name: Some(
                                            "index",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 360,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "ParaId",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 3,
                                docs: [
                                    "See [`Pallet::refund`].",
                                ],
                            },
                            Variant {
                                name: "dissolve",
                                fields: [
                                    Field {
                                        name: Some(
                                            "index",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 360,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "ParaId",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 4,
                                docs: [
                                    "See [`Pallet::dissolve`].",
                                ],
                            },
                            Variant {
                                name: "edit",
                                fields: [
                                    Field {
                                        name: Some(
                                            "index",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 360,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "ParaId",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "cap",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 60,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "BalanceOf<T>",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "first_period",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 91,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "LeasePeriodOf<T>",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "last_period",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 91,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "LeasePeriodOf<T>",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "end",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 91,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "T::BlockNumber",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "verifier",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 362,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "Option<MultiSigner>",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 5,
                                docs: [
                                    "See [`Pallet::edit`].",
                                ],
                            },
                            Variant {
                                name: "add_memo",
                                fields: [
                                    Field {
                                        name: Some(
                                            "index",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 158,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "ParaId",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "memo",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 13,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "Vec<u8>",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 6,
                                docs: [
                                    "See [`Pallet::add_memo`].",
                                ],
                            },
                            Variant {
                                name: "poke",
                                fields: [
                                    Field {
                                        name: Some(
                                            "index",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 158,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "ParaId",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 7,
                                docs: [
                                    "See [`Pallet::poke`].",
                                ],
                            },
                            Variant {
                                name: "contribute_all",
                                fields: [
                                    Field {
                                        name: Some(
                                            "index",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 360,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "ParaId",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "signature",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 366,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "Option<MultiSignature>",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 8,
                                docs: [
                                    "See [`Pallet::contribute_all`].",
                                ],
                            },
                        ],
                    },
                ),
                docs: [
                    "Contains a variant per dispatchable extrinsic that this pallet has.",
                ],
            },
        },
        PortableType {
            id: 362,
            ty: Type {
                path: Path {
                    segments: [
                        "Option",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "T",
                        ty: Some(
                            UntrackedSymbol {
                                id: 363,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ),
                    },
                ],
                type_def: Variant(
                    TypeDefVariant {
                        variants: [
                            Variant {
                                name: "None",
                                fields: [],
                                index: 0,
                                docs: [],
                            },
                            Variant {
                                name: "Some",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 363,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: None,
                                        docs: [],
                                    },
                                ],
                                index: 1,
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 363,
            ty: Type {
                path: Path {
                    segments: [
                        "sp_runtime",
                        "MultiSigner",
                    ],
                },
                type_params: [],
                type_def: Variant(
                    TypeDefVariant {
                        variants: [
                            Variant {
                                name: "Ed25519",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 53,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "ed25519::Public",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 0,
                                docs: [],
                            },
                            Variant {
                                name: "Sr25519",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 56,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "sr25519::Public",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 1,
                                docs: [],
                            },
                            Variant {
                                name: "Ecdsa",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 364,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "ecdsa::Public",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 2,
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 364,
            ty: Type {
                path: Path {
                    segments: [
                        "sp_core",
                        "ecdsa",
                        "Public",
                    ],
                },
                type_params: [],
                type_def: Composite(
                    TypeDefComposite {
                        fields: [
                            Field {
                                name: None,
                                ty: UntrackedSymbol {
                                    id: 365,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "[u8; 33]",
                                ),
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 365,
            ty: Type {
                path: Path {
                    segments: [],
                },
                type_params: [],
                type_def: Array(
                    TypeDefArray {
                        len: 33,
                        type_param: UntrackedSymbol {
                            id: 2,
                            marker: PhantomData<fn() -> core::any::TypeId>,
                        },
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 366,
            ty: Type {
                path: Path {
                    segments: [
                        "Option",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "T",
                        ty: Some(
                            UntrackedSymbol {
                                id: 367,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ),
                    },
                ],
                type_def: Variant(
                    TypeDefVariant {
                        variants: [
                            Variant {
                                name: "None",
                                fields: [],
                                index: 0,
                                docs: [],
                            },
                            Variant {
                                name: "Some",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 367,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: None,
                                        docs: [],
                                    },
                                ],
                                index: 1,
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 367,
            ty: Type {
                path: Path {
                    segments: [
                        "sp_runtime",
                        "MultiSignature",
                    ],
                },
                type_params: [],
                type_def: Variant(
                    TypeDefVariant {
                        variants: [
                            Variant {
                                name: "Ed25519",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 125,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "ed25519::Signature",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 0,
                                docs: [],
                            },
                            Variant {
                                name: "Sr25519",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 134,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "sr25519::Signature",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 1,
                                docs: [],
                            },
                            Variant {
                                name: "Ecdsa",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 368,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "ecdsa::Signature",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 2,
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 368,
            ty: Type {
                path: Path {
                    segments: [
                        "sp_core",
                        "ecdsa",
                        "Signature",
                    ],
                },
                type_params: [],
                type_def: Composite(
                    TypeDefComposite {
                        fields: [
                            Field {
                                name: None,
                                ty: UntrackedSymbol {
                                    id: 172,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "[u8; 65]",
                                ),
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 369,
            ty: Type {
                path: Path {
                    segments: [
                        "pallet_xcm",
                        "pallet",
                        "Call",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "T",
                        ty: None,
                    },
                ],
                type_def: Variant(
                    TypeDefVariant {
                        variants: [
                            Variant {
                                name: "send",
                                fields: [
                                    Field {
                                        name: Some(
                                            "dest",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 370,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "Box<VersionedMultiLocation>",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "message",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 378,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "Box<VersionedXcm<()>>",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 0,
                                docs: [
                                    "See [`Pallet::send`].",
                                ],
                            },
                            Variant {
                                name: "teleport_assets",
                                fields: [
                                    Field {
                                        name: Some(
                                            "dest",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 370,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "Box<VersionedMultiLocation>",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "beneficiary",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 370,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "Box<VersionedMultiLocation>",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "assets",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 423,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "Box<VersionedMultiAssets>",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "fee_asset_item",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 4,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "u32",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 1,
                                docs: [
                                    "See [`Pallet::teleport_assets`].",
                                ],
                            },
                            Variant {
                                name: "reserve_transfer_assets",
                                fields: [
                                    Field {
                                        name: Some(
                                            "dest",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 370,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "Box<VersionedMultiLocation>",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "beneficiary",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 370,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "Box<VersionedMultiLocation>",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "assets",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 423,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "Box<VersionedMultiAssets>",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "fee_asset_item",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 4,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "u32",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 2,
                                docs: [
                                    "See [`Pallet::reserve_transfer_assets`].",
                                ],
                            },
                            Variant {
                                name: "execute",
                                fields: [
                                    Field {
                                        name: Some(
                                            "message",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 424,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "Box<VersionedXcm<<T as SysConfig>::RuntimeCall>>",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "max_weight",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 9,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "Weight",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 3,
                                docs: [
                                    "See [`Pallet::execute`].",
                                ],
                            },
                            Variant {
                                name: "force_xcm_version",
                                fields: [
                                    Field {
                                        name: Some(
                                            "location",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 160,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "Box<MultiLocation>",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "version",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 4,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "XcmVersion",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 4,
                                docs: [
                                    "See [`Pallet::force_xcm_version`].",
                                ],
                            },
                            Variant {
                                name: "force_default_xcm_version",
                                fields: [
                                    Field {
                                        name: Some(
                                            "maybe_xcm_version",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 137,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "Option<XcmVersion>",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 5,
                                docs: [
                                    "See [`Pallet::force_default_xcm_version`].",
                                ],
                            },
                            Variant {
                                name: "force_subscribe_version_notify",
                                fields: [
                                    Field {
                                        name: Some(
                                            "location",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 370,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "Box<VersionedMultiLocation>",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 6,
                                docs: [
                                    "See [`Pallet::force_subscribe_version_notify`].",
                                ],
                            },
                            Variant {
                                name: "force_unsubscribe_version_notify",
                                fields: [
                                    Field {
                                        name: Some(
                                            "location",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 370,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "Box<VersionedMultiLocation>",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 7,
                                docs: [
                                    "See [`Pallet::force_unsubscribe_version_notify`].",
                                ],
                            },
                            Variant {
                                name: "limited_reserve_transfer_assets",
                                fields: [
                                    Field {
                                        name: Some(
                                            "dest",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 370,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "Box<VersionedMultiLocation>",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "beneficiary",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 370,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "Box<VersionedMultiLocation>",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "assets",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 423,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "Box<VersionedMultiAssets>",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "fee_asset_item",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 4,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "u32",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "weight_limit",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 422,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "WeightLimit",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 8,
                                docs: [
                                    "See [`Pallet::limited_reserve_transfer_assets`].",
                                ],
                            },
                            Variant {
                                name: "limited_teleport_assets",
                                fields: [
                                    Field {
                                        name: Some(
                                            "dest",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 370,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "Box<VersionedMultiLocation>",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "beneficiary",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 370,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "Box<VersionedMultiLocation>",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "assets",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 423,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "Box<VersionedMultiAssets>",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "fee_asset_item",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 4,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "u32",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "weight_limit",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 422,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "WeightLimit",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 9,
                                docs: [
                                    "See [`Pallet::limited_teleport_assets`].",
                                ],
                            },
                            Variant {
                                name: "force_suspension",
                                fields: [
                                    Field {
                                        name: Some(
                                            "suspended",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 44,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "bool",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 10,
                                docs: [
                                    "See [`Pallet::force_suspension`].",
                                ],
                            },
                        ],
                    },
                ),
                docs: [
                    "Contains a variant per dispatchable extrinsic that this pallet has.",
                ],
            },
        },
        PortableType {
            id: 370,
            ty: Type {
                path: Path {
                    segments: [
                        "xcm",
                        "VersionedMultiLocation",
                    ],
                },
                type_params: [],
                type_def: Variant(
                    TypeDefVariant {
                        variants: [
                            Variant {
                                name: "V2",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 371,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "v2::MultiLocation",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 1,
                                docs: [],
                            },
                            Variant {
                                name: "V3",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 160,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "v3::MultiLocation",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 3,
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 371,
            ty: Type {
                path: Path {
                    segments: [
                        "xcm",
                        "v2",
                        "multilocation",
                        "MultiLocation",
                    ],
                },
                type_params: [],
                type_def: Composite(
                    TypeDefComposite {
                        fields: [
                            Field {
                                name: Some(
                                    "parents",
                                ),
                                ty: UntrackedSymbol {
                                    id: 2,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "u8",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "interior",
                                ),
                                ty: UntrackedSymbol {
                                    id: 372,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "Junctions",
                                ),
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 372,
            ty: Type {
                path: Path {
                    segments: [
                        "xcm",
                        "v2",
                        "multilocation",
                        "Junctions",
                    ],
                },
                type_params: [],
                type_def: Variant(
                    TypeDefVariant {
                        variants: [
                            Variant {
                                name: "Here",
                                fields: [],
                                index: 0,
                                docs: [],
                            },
                            Variant {
                                name: "X1",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 373,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "Junction",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 1,
                                docs: [],
                            },
                            Variant {
                                name: "X2",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 373,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "Junction",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 373,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "Junction",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 2,
                                docs: [],
                            },
                            Variant {
                                name: "X3",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 373,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "Junction",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 373,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "Junction",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 373,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "Junction",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 3,
                                docs: [],
                            },
                            Variant {
                                name: "X4",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 373,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "Junction",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 373,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "Junction",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 373,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "Junction",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 373,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "Junction",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 4,
                                docs: [],
                            },
                            Variant {
                                name: "X5",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 373,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "Junction",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 373,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "Junction",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 373,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "Junction",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 373,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "Junction",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 373,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "Junction",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 5,
                                docs: [],
                            },
                            Variant {
                                name: "X6",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 373,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "Junction",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 373,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "Junction",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 373,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "Junction",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 373,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "Junction",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 373,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "Junction",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 373,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "Junction",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 6,
                                docs: [],
                            },
                            Variant {
                                name: "X7",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 373,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "Junction",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 373,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "Junction",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 373,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "Junction",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 373,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "Junction",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 373,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "Junction",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 373,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "Junction",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 373,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "Junction",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 7,
                                docs: [],
                            },
                            Variant {
                                name: "X8",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 373,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "Junction",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 373,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "Junction",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 373,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "Junction",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 373,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "Junction",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 373,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "Junction",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 373,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "Junction",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 373,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "Junction",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 373,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "Junction",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 8,
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 373,
            ty: Type {
                path: Path {
                    segments: [
                        "xcm",
                        "v2",
                        "junction",
                        "Junction",
                    ],
                },
                type_params: [],
                type_def: Variant(
                    TypeDefVariant {
                        variants: [
                            Variant {
                                name: "Parachain",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 91,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "u32",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 0,
                                docs: [],
                            },
                            Variant {
                                name: "AccountId32",
                                fields: [
                                    Field {
                                        name: Some(
                                            "network",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 374,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "NetworkId",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "id",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 1,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "[u8; 32]",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 1,
                                docs: [],
                            },
                            Variant {
                                name: "AccountIndex64",
                                fields: [
                                    Field {
                                        name: Some(
                                            "network",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 374,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "NetworkId",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "index",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 10,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "u64",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 2,
                                docs: [],
                            },
                            Variant {
                                name: "AccountKey20",
                                fields: [
                                    Field {
                                        name: Some(
                                            "network",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 374,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "NetworkId",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "key",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 102,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "[u8; 20]",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 3,
                                docs: [],
                            },
                            Variant {
                                name: "PalletInstance",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 2,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "u8",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 4,
                                docs: [],
                            },
                            Variant {
                                name: "GeneralIndex",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 60,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "u128",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 5,
                                docs: [],
                            },
                            Variant {
                                name: "GeneralKey",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 375,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "WeakBoundedVec<u8, ConstU32<32>>",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 6,
                                docs: [],
                            },
                            Variant {
                                name: "OnlyChild",
                                fields: [],
                                index: 7,
                                docs: [],
                            },
                            Variant {
                                name: "Plurality",
                                fields: [
                                    Field {
                                        name: Some(
                                            "id",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 376,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "BodyId",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "part",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 377,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "BodyPart",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 8,
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 374,
            ty: Type {
                path: Path {
                    segments: [
                        "xcm",
                        "v2",
                        "NetworkId",
                    ],
                },
                type_params: [],
                type_def: Variant(
                    TypeDefVariant {
                        variants: [
                            Variant {
                                name: "Any",
                                fields: [],
                                index: 0,
                                docs: [],
                            },
                            Variant {
                                name: "Named",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 375,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "WeakBoundedVec<u8, ConstU32<32>>",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 1,
                                docs: [],
                            },
                            Variant {
                                name: "Polkadot",
                                fields: [],
                                index: 2,
                                docs: [],
                            },
                            Variant {
                                name: "Kusama",
                                fields: [],
                                index: 3,
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 375,
            ty: Type {
                path: Path {
                    segments: [
                        "bounded_collections",
                        "weak_bounded_vec",
                        "WeakBoundedVec",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "T",
                        ty: Some(
                            UntrackedSymbol {
                                id: 2,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ),
                    },
                    TypeParameter {
                        name: "S",
                        ty: None,
                    },
                ],
                type_def: Composite(
                    TypeDefComposite {
                        fields: [
                            Field {
                                name: None,
                                ty: UntrackedSymbol {
                                    id: 13,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "Vec<T>",
                                ),
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 376,
            ty: Type {
                path: Path {
                    segments: [
                        "xcm",
                        "v2",
                        "BodyId",
                    ],
                },
                type_params: [],
                type_def: Variant(
                    TypeDefVariant {
                        variants: [
                            Variant {
                                name: "Unit",
                                fields: [],
                                index: 0,
                                docs: [],
                            },
                            Variant {
                                name: "Named",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 375,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "WeakBoundedVec<u8, ConstU32<32>>",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 1,
                                docs: [],
                            },
                            Variant {
                                name: "Index",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 91,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "u32",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 2,
                                docs: [],
                            },
                            Variant {
                                name: "Executive",
                                fields: [],
                                index: 3,
                                docs: [],
                            },
                            Variant {
                                name: "Technical",
                                fields: [],
                                index: 4,
                                docs: [],
                            },
                            Variant {
                                name: "Legislative",
                                fields: [],
                                index: 5,
                                docs: [],
                            },
                            Variant {
                                name: "Judicial",
                                fields: [],
                                index: 6,
                                docs: [],
                            },
                            Variant {
                                name: "Defense",
                                fields: [],
                                index: 7,
                                docs: [],
                            },
                            Variant {
                                name: "Administration",
                                fields: [],
                                index: 8,
                                docs: [],
                            },
                            Variant {
                                name: "Treasury",
                                fields: [],
                                index: 9,
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 377,
            ty: Type {
                path: Path {
                    segments: [
                        "xcm",
                        "v2",
                        "BodyPart",
                    ],
                },
                type_params: [],
                type_def: Variant(
                    TypeDefVariant {
                        variants: [
                            Variant {
                                name: "Voice",
                                fields: [],
                                index: 0,
                                docs: [],
                            },
                            Variant {
                                name: "Members",
                                fields: [
                                    Field {
                                        name: Some(
                                            "count",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 91,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "u32",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 1,
                                docs: [],
                            },
                            Variant {
                                name: "Fraction",
                                fields: [
                                    Field {
                                        name: Some(
                                            "nom",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 91,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "u32",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "denom",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 91,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "u32",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 2,
                                docs: [],
                            },
                            Variant {
                                name: "AtLeastProportion",
                                fields: [
                                    Field {
                                        name: Some(
                                            "nom",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 91,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "u32",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "denom",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 91,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "u32",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 3,
                                docs: [],
                            },
                            Variant {
                                name: "MoreThanProportion",
                                fields: [
                                    Field {
                                        name: Some(
                                            "nom",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 91,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "u32",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "denom",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 91,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "u32",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 4,
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 378,
            ty: Type {
                path: Path {
                    segments: [
                        "xcm",
                        "VersionedXcm",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "RuntimeCall",
                        ty: None,
                    },
                ],
                type_def: Variant(
                    TypeDefVariant {
                        variants: [
                            Variant {
                                name: "V2",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 379,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "v2::Xcm<RuntimeCall>",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 2,
                                docs: [],
                            },
                            Variant {
                                name: "V3",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 398,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "v3::Xcm<RuntimeCall>",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 3,
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 379,
            ty: Type {
                path: Path {
                    segments: [
                        "xcm",
                        "v2",
                        "Xcm",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "RuntimeCall",
                        ty: None,
                    },
                ],
                type_def: Composite(
                    TypeDefComposite {
                        fields: [
                            Field {
                                name: None,
                                ty: UntrackedSymbol {
                                    id: 380,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "Vec<Instruction<RuntimeCall>>",
                                ),
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 380,
            ty: Type {
                path: Path {
                    segments: [],
                },
                type_params: [],
                type_def: Sequence(
                    TypeDefSequence {
                        type_param: UntrackedSymbol {
                            id: 381,
                            marker: PhantomData<fn() -> core::any::TypeId>,
                        },
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 381,
            ty: Type {
                path: Path {
                    segments: [
                        "xcm",
                        "v2",
                        "Instruction",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "RuntimeCall",
                        ty: None,
                    },
                ],
                type_def: Variant(
                    TypeDefVariant {
                        variants: [
                            Variant {
                                name: "WithdrawAsset",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 382,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "MultiAssets",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 0,
                                docs: [],
                            },
                            Variant {
                                name: "ReserveAssetDeposited",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 382,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "MultiAssets",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 1,
                                docs: [],
                            },
                            Variant {
                                name: "ReceiveTeleportedAsset",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 382,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "MultiAssets",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 2,
                                docs: [],
                            },
                            Variant {
                                name: "QueryResponse",
                                fields: [
                                    Field {
                                        name: Some(
                                            "query_id",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 10,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "QueryId",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "response",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 388,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "Response",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "max_weight",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 10,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "u64",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 3,
                                docs: [],
                            },
                            Variant {
                                name: "TransferAsset",
                                fields: [
                                    Field {
                                        name: Some(
                                            "assets",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 382,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "MultiAssets",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "beneficiary",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 371,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "MultiLocation",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 4,
                                docs: [],
                            },
                            Variant {
                                name: "TransferReserveAsset",
                                fields: [
                                    Field {
                                        name: Some(
                                            "assets",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 382,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "MultiAssets",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "dest",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 371,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "MultiLocation",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "xcm",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 379,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "Xcm<()>",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 5,
                                docs: [],
                            },
                            Variant {
                                name: "Transact",
                                fields: [
                                    Field {
                                        name: Some(
                                            "origin_type",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 392,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "OriginKind",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "require_weight_at_most",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 10,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "u64",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "call",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 393,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "DoubleEncoded<RuntimeCall>",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 6,
                                docs: [],
                            },
                            Variant {
                                name: "HrmpNewChannelOpenRequest",
                                fields: [
                                    Field {
                                        name: Some(
                                            "sender",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 91,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "u32",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "max_message_size",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 91,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "u32",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "max_capacity",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 91,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "u32",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 7,
                                docs: [],
                            },
                            Variant {
                                name: "HrmpChannelAccepted",
                                fields: [
                                    Field {
                                        name: Some(
                                            "recipient",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 91,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "u32",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 8,
                                docs: [],
                            },
                            Variant {
                                name: "HrmpChannelClosing",
                                fields: [
                                    Field {
                                        name: Some(
                                            "initiator",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 91,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "u32",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "sender",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 91,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "u32",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "recipient",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 91,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "u32",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 9,
                                docs: [],
                            },
                            Variant {
                                name: "ClearOrigin",
                                fields: [],
                                index: 10,
                                docs: [],
                            },
                            Variant {
                                name: "DescendOrigin",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 372,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "InteriorMultiLocation",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 11,
                                docs: [],
                            },
                            Variant {
                                name: "ReportError",
                                fields: [
                                    Field {
                                        name: Some(
                                            "query_id",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 10,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "QueryId",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "dest",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 371,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "MultiLocation",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "max_response_weight",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 10,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "u64",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 12,
                                docs: [],
                            },
                            Variant {
                                name: "DepositAsset",
                                fields: [
                                    Field {
                                        name: Some(
                                            "assets",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 394,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "MultiAssetFilter",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "max_assets",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 91,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "u32",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "beneficiary",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 371,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "MultiLocation",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 13,
                                docs: [],
                            },
                            Variant {
                                name: "DepositReserveAsset",
                                fields: [
                                    Field {
                                        name: Some(
                                            "assets",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 394,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "MultiAssetFilter",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "max_assets",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 91,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "u32",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "dest",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 371,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "MultiLocation",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "xcm",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 379,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "Xcm<()>",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 14,
                                docs: [],
                            },
                            Variant {
                                name: "ExchangeAsset",
                                fields: [
                                    Field {
                                        name: Some(
                                            "give",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 394,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "MultiAssetFilter",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "receive",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 382,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "MultiAssets",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 15,
                                docs: [],
                            },
                            Variant {
                                name: "InitiateReserveWithdraw",
                                fields: [
                                    Field {
                                        name: Some(
                                            "assets",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 394,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "MultiAssetFilter",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "reserve",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 371,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "MultiLocation",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "xcm",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 379,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "Xcm<()>",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 16,
                                docs: [],
                            },
                            Variant {
                                name: "InitiateTeleport",
                                fields: [
                                    Field {
                                        name: Some(
                                            "assets",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 394,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "MultiAssetFilter",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "dest",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 371,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "MultiLocation",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "xcm",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 379,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "Xcm<()>",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 17,
                                docs: [],
                            },
                            Variant {
                                name: "QueryHolding",
                                fields: [
                                    Field {
                                        name: Some(
                                            "query_id",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 10,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "QueryId",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "dest",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 371,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "MultiLocation",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "assets",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 394,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "MultiAssetFilter",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "max_response_weight",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 10,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "u64",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 18,
                                docs: [],
                            },
                            Variant {
                                name: "BuyExecution",
                                fields: [
                                    Field {
                                        name: Some(
                                            "fees",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 384,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "MultiAsset",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "weight_limit",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 397,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "WeightLimit",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 19,
                                docs: [],
                            },
                            Variant {
                                name: "RefundSurplus",
                                fields: [],
                                index: 20,
                                docs: [],
                            },
                            Variant {
                                name: "SetErrorHandler",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 379,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "Xcm<RuntimeCall>",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 21,
                                docs: [],
                            },
                            Variant {
                                name: "SetAppendix",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 379,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "Xcm<RuntimeCall>",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 22,
                                docs: [],
                            },
                            Variant {
                                name: "ClearError",
                                fields: [],
                                index: 23,
                                docs: [],
                            },
                            Variant {
                                name: "ClaimAsset",
                                fields: [
                                    Field {
                                        name: Some(
                                            "assets",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 382,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "MultiAssets",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "ticket",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 371,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "MultiLocation",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 24,
                                docs: [],
                            },
                            Variant {
                                name: "Trap",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 10,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "u64",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 25,
                                docs: [],
                            },
                            Variant {
                                name: "SubscribeVersion",
                                fields: [
                                    Field {
                                        name: Some(
                                            "query_id",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 10,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "QueryId",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "max_response_weight",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 10,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "u64",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 26,
                                docs: [],
                            },
                            Variant {
                                name: "UnsubscribeVersion",
                                fields: [],
                                index: 27,
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 382,
            ty: Type {
                path: Path {
                    segments: [
                        "xcm",
                        "v2",
                        "multiasset",
                        "MultiAssets",
                    ],
                },
                type_params: [],
                type_def: Composite(
                    TypeDefComposite {
                        fields: [
                            Field {
                                name: None,
                                ty: UntrackedSymbol {
                                    id: 383,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "Vec<MultiAsset>",
                                ),
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 383,
            ty: Type {
                path: Path {
                    segments: [],
                },
                type_params: [],
                type_def: Sequence(
                    TypeDefSequence {
                        type_param: UntrackedSymbol {
                            id: 384,
                            marker: PhantomData<fn() -> core::any::TypeId>,
                        },
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 384,
            ty: Type {
                path: Path {
                    segments: [
                        "xcm",
                        "v2",
                        "multiasset",
                        "MultiAsset",
                    ],
                },
                type_params: [],
                type_def: Composite(
                    TypeDefComposite {
                        fields: [
                            Field {
                                name: Some(
                                    "id",
                                ),
                                ty: UntrackedSymbol {
                                    id: 385,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "AssetId",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "fun",
                                ),
                                ty: UntrackedSymbol {
                                    id: 386,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "Fungibility",
                                ),
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 385,
            ty: Type {
                path: Path {
                    segments: [
                        "xcm",
                        "v2",
                        "multiasset",
                        "AssetId",
                    ],
                },
                type_params: [],
                type_def: Variant(
                    TypeDefVariant {
                        variants: [
                            Variant {
                                name: "Concrete",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 371,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "MultiLocation",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 0,
                                docs: [],
                            },
                            Variant {
                                name: "Abstract",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 13,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "Vec<u8>",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 1,
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 386,
            ty: Type {
                path: Path {
                    segments: [
                        "xcm",
                        "v2",
                        "multiasset",
                        "Fungibility",
                    ],
                },
                type_params: [],
                type_def: Variant(
                    TypeDefVariant {
                        variants: [
                            Variant {
                                name: "Fungible",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 60,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "u128",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 0,
                                docs: [],
                            },
                            Variant {
                                name: "NonFungible",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 387,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "AssetInstance",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 1,
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 387,
            ty: Type {
                path: Path {
                    segments: [
                        "xcm",
                        "v2",
                        "multiasset",
                        "AssetInstance",
                    ],
                },
                type_params: [],
                type_def: Variant(
                    TypeDefVariant {
                        variants: [
                            Variant {
                                name: "Undefined",
                                fields: [],
                                index: 0,
                                docs: [],
                            },
                            Variant {
                                name: "Index",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 60,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "u128",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 1,
                                docs: [],
                            },
                            Variant {
                                name: "Array4",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 17,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "[u8; 4]",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 2,
                                docs: [],
                            },
                            Variant {
                                name: "Array8",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 194,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "[u8; 8]",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 3,
                                docs: [],
                            },
                            Variant {
                                name: "Array16",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 47,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "[u8; 16]",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 4,
                                docs: [],
                            },
                            Variant {
                                name: "Array32",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 1,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "[u8; 32]",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 5,
                                docs: [],
                            },
                            Variant {
                                name: "Blob",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 13,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "Vec<u8>",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 6,
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 388,
            ty: Type {
                path: Path {
                    segments: [
                        "xcm",
                        "v2",
                        "Response",
                    ],
                },
                type_params: [],
                type_def: Variant(
                    TypeDefVariant {
                        variants: [
                            Variant {
                                name: "Null",
                                fields: [],
                                index: 0,
                                docs: [],
                            },
                            Variant {
                                name: "Assets",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 382,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "MultiAssets",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 1,
                                docs: [],
                            },
                            Variant {
                                name: "ExecutionResult",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 389,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "Option<(u32, Error)>",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 2,
                                docs: [],
                            },
                            Variant {
                                name: "Version",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 4,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "super::Version",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 3,
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 389,
            ty: Type {
                path: Path {
                    segments: [
                        "Option",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "T",
                        ty: Some(
                            UntrackedSymbol {
                                id: 390,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ),
                    },
                ],
                type_def: Variant(
                    TypeDefVariant {
                        variants: [
                            Variant {
                                name: "None",
                                fields: [],
                                index: 0,
                                docs: [],
                            },
                            Variant {
                                name: "Some",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 390,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: None,
                                        docs: [],
                                    },
                                ],
                                index: 1,
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 390,
            ty: Type {
                path: Path {
                    segments: [],
                },
                type_params: [],
                type_def: Tuple(
                    TypeDefTuple {
                        fields: [
                            UntrackedSymbol {
                                id: 4,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                            UntrackedSymbol {
                                id: 391,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 391,
            ty: Type {
                path: Path {
                    segments: [
                        "xcm",
                        "v2",
                        "traits",
                        "Error",
                    ],
                },
                type_params: [],
                type_def: Variant(
                    TypeDefVariant {
                        variants: [
                            Variant {
                                name: "Overflow",
                                fields: [],
                                index: 0,
                                docs: [],
                            },
                            Variant {
                                name: "Unimplemented",
                                fields: [],
                                index: 1,
                                docs: [],
                            },
                            Variant {
                                name: "UntrustedReserveLocation",
                                fields: [],
                                index: 2,
                                docs: [],
                            },
                            Variant {
                                name: "UntrustedTeleportLocation",
                                fields: [],
                                index: 3,
                                docs: [],
                            },
                            Variant {
                                name: "MultiLocationFull",
                                fields: [],
                                index: 4,
                                docs: [],
                            },
                            Variant {
                                name: "MultiLocationNotInvertible",
                                fields: [],
                                index: 5,
                                docs: [],
                            },
                            Variant {
                                name: "BadOrigin",
                                fields: [],
                                index: 6,
                                docs: [],
                            },
                            Variant {
                                name: "InvalidLocation",
                                fields: [],
                                index: 7,
                                docs: [],
                            },
                            Variant {
                                name: "AssetNotFound",
                                fields: [],
                                index: 8,
                                docs: [],
                            },
                            Variant {
                                name: "FailedToTransactAsset",
                                fields: [],
                                index: 9,
                                docs: [],
                            },
                            Variant {
                                name: "NotWithdrawable",
                                fields: [],
                                index: 10,
                                docs: [],
                            },
                            Variant {
                                name: "LocationCannotHold",
                                fields: [],
                                index: 11,
                                docs: [],
                            },
                            Variant {
                                name: "ExceedsMaxMessageSize",
                                fields: [],
                                index: 12,
                                docs: [],
                            },
                            Variant {
                                name: "DestinationUnsupported",
                                fields: [],
                                index: 13,
                                docs: [],
                            },
                            Variant {
                                name: "Transport",
                                fields: [],
                                index: 14,
                                docs: [],
                            },
                            Variant {
                                name: "Unroutable",
                                fields: [],
                                index: 15,
                                docs: [],
                            },
                            Variant {
                                name: "UnknownClaim",
                                fields: [],
                                index: 16,
                                docs: [],
                            },
                            Variant {
                                name: "FailedToDecode",
                                fields: [],
                                index: 17,
                                docs: [],
                            },
                            Variant {
                                name: "MaxWeightInvalid",
                                fields: [],
                                index: 18,
                                docs: [],
                            },
                            Variant {
                                name: "NotHoldingFees",
                                fields: [],
                                index: 19,
                                docs: [],
                            },
                            Variant {
                                name: "TooExpensive",
                                fields: [],
                                index: 20,
                                docs: [],
                            },
                            Variant {
                                name: "Trap",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 11,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "u64",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 21,
                                docs: [],
                            },
                            Variant {
                                name: "UnhandledXcmVersion",
                                fields: [],
                                index: 22,
                                docs: [],
                            },
                            Variant {
                                name: "WeightLimitReached",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 11,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "Weight",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 23,
                                docs: [],
                            },
                            Variant {
                                name: "Barrier",
                                fields: [],
                                index: 24,
                                docs: [],
                            },
                            Variant {
                                name: "WeightNotComputable",
                                fields: [],
                                index: 25,
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 392,
            ty: Type {
                path: Path {
                    segments: [
                        "xcm",
                        "v2",
                        "OriginKind",
                    ],
                },
                type_params: [],
                type_def: Variant(
                    TypeDefVariant {
                        variants: [
                            Variant {
                                name: "Native",
                                fields: [],
                                index: 0,
                                docs: [],
                            },
                            Variant {
                                name: "SovereignAccount",
                                fields: [],
                                index: 1,
                                docs: [],
                            },
                            Variant {
                                name: "Superuser",
                                fields: [],
                                index: 2,
                                docs: [],
                            },
                            Variant {
                                name: "Xcm",
                                fields: [],
                                index: 3,
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 393,
            ty: Type {
                path: Path {
                    segments: [
                        "xcm",
                        "double_encoded",
                        "DoubleEncoded",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "T",
                        ty: None,
                    },
                ],
                type_def: Composite(
                    TypeDefComposite {
                        fields: [
                            Field {
                                name: Some(
                                    "encoded",
                                ),
                                ty: UntrackedSymbol {
                                    id: 13,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "Vec<u8>",
                                ),
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 394,
            ty: Type {
                path: Path {
                    segments: [
                        "xcm",
                        "v2",
                        "multiasset",
                        "MultiAssetFilter",
                    ],
                },
                type_params: [],
                type_def: Variant(
                    TypeDefVariant {
                        variants: [
                            Variant {
                                name: "Definite",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 382,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "MultiAssets",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 0,
                                docs: [],
                            },
                            Variant {
                                name: "Wild",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 395,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "WildMultiAsset",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 1,
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 395,
            ty: Type {
                path: Path {
                    segments: [
                        "xcm",
                        "v2",
                        "multiasset",
                        "WildMultiAsset",
                    ],
                },
                type_params: [],
                type_def: Variant(
                    TypeDefVariant {
                        variants: [
                            Variant {
                                name: "All",
                                fields: [],
                                index: 0,
                                docs: [],
                            },
                            Variant {
                                name: "AllOf",
                                fields: [
                                    Field {
                                        name: Some(
                                            "id",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 385,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "AssetId",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "fun",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 396,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "WildFungibility",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 1,
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 396,
            ty: Type {
                path: Path {
                    segments: [
                        "xcm",
                        "v2",
                        "multiasset",
                        "WildFungibility",
                    ],
                },
                type_params: [],
                type_def: Variant(
                    TypeDefVariant {
                        variants: [
                            Variant {
                                name: "Fungible",
                                fields: [],
                                index: 0,
                                docs: [],
                            },
                            Variant {
                                name: "NonFungible",
                                fields: [],
                                index: 1,
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 397,
            ty: Type {
                path: Path {
                    segments: [
                        "xcm",
                        "v2",
                        "WeightLimit",
                    ],
                },
                type_params: [],
                type_def: Variant(
                    TypeDefVariant {
                        variants: [
                            Variant {
                                name: "Unlimited",
                                fields: [],
                                index: 0,
                                docs: [],
                            },
                            Variant {
                                name: "Limited",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 10,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "u64",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 1,
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 398,
            ty: Type {
                path: Path {
                    segments: [
                        "xcm",
                        "v3",
                        "Xcm",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "Call",
                        ty: None,
                    },
                ],
                type_def: Composite(
                    TypeDefComposite {
                        fields: [
                            Field {
                                name: None,
                                ty: UntrackedSymbol {
                                    id: 399,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "Vec<Instruction<Call>>",
                                ),
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 399,
            ty: Type {
                path: Path {
                    segments: [],
                },
                type_params: [],
                type_def: Sequence(
                    TypeDefSequence {
                        type_param: UntrackedSymbol {
                            id: 400,
                            marker: PhantomData<fn() -> core::any::TypeId>,
                        },
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 400,
            ty: Type {
                path: Path {
                    segments: [
                        "xcm",
                        "v3",
                        "Instruction",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "Call",
                        ty: None,
                    },
                ],
                type_def: Variant(
                    TypeDefVariant {
                        variants: [
                            Variant {
                                name: "WithdrawAsset",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 401,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "MultiAssets",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 0,
                                docs: [],
                            },
                            Variant {
                                name: "ReserveAssetDeposited",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 401,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "MultiAssets",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 1,
                                docs: [],
                            },
                            Variant {
                                name: "ReceiveTeleportedAsset",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 401,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "MultiAssets",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 2,
                                docs: [],
                            },
                            Variant {
                                name: "QueryResponse",
                                fields: [
                                    Field {
                                        name: Some(
                                            "query_id",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 10,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "QueryId",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "response",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 407,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "Response",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "max_weight",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 9,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "Weight",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "querier",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 417,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "Option<MultiLocation>",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 3,
                                docs: [],
                            },
                            Variant {
                                name: "TransferAsset",
                                fields: [
                                    Field {
                                        name: Some(
                                            "assets",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 401,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "MultiAssets",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "beneficiary",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 160,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "MultiLocation",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 4,
                                docs: [],
                            },
                            Variant {
                                name: "TransferReserveAsset",
                                fields: [
                                    Field {
                                        name: Some(
                                            "assets",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 401,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "MultiAssets",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "dest",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 160,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "MultiLocation",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "xcm",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 398,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "Xcm<()>",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 5,
                                docs: [],
                            },
                            Variant {
                                name: "Transact",
                                fields: [
                                    Field {
                                        name: Some(
                                            "origin_kind",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 392,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "OriginKind",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "require_weight_at_most",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 9,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "Weight",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "call",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 393,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "DoubleEncoded<Call>",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 6,
                                docs: [],
                            },
                            Variant {
                                name: "HrmpNewChannelOpenRequest",
                                fields: [
                                    Field {
                                        name: Some(
                                            "sender",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 91,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "u32",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "max_message_size",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 91,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "u32",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "max_capacity",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 91,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "u32",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 7,
                                docs: [],
                            },
                            Variant {
                                name: "HrmpChannelAccepted",
                                fields: [
                                    Field {
                                        name: Some(
                                            "recipient",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 91,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "u32",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 8,
                                docs: [],
                            },
                            Variant {
                                name: "HrmpChannelClosing",
                                fields: [
                                    Field {
                                        name: Some(
                                            "initiator",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 91,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "u32",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "sender",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 91,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "u32",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "recipient",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 91,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "u32",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 9,
                                docs: [],
                            },
                            Variant {
                                name: "ClearOrigin",
                                fields: [],
                                index: 10,
                                docs: [],
                            },
                            Variant {
                                name: "DescendOrigin",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 161,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "InteriorMultiLocation",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 11,
                                docs: [],
                            },
                            Variant {
                                name: "ReportError",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 418,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "QueryResponseInfo",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 12,
                                docs: [],
                            },
                            Variant {
                                name: "DepositAsset",
                                fields: [
                                    Field {
                                        name: Some(
                                            "assets",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 419,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "MultiAssetFilter",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "beneficiary",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 160,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "MultiLocation",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 13,
                                docs: [],
                            },
                            Variant {
                                name: "DepositReserveAsset",
                                fields: [
                                    Field {
                                        name: Some(
                                            "assets",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 419,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "MultiAssetFilter",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "dest",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 160,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "MultiLocation",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "xcm",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 398,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "Xcm<()>",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 14,
                                docs: [],
                            },
                            Variant {
                                name: "ExchangeAsset",
                                fields: [
                                    Field {
                                        name: Some(
                                            "give",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 419,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "MultiAssetFilter",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "want",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 401,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "MultiAssets",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "maximal",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 44,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "bool",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 15,
                                docs: [],
                            },
                            Variant {
                                name: "InitiateReserveWithdraw",
                                fields: [
                                    Field {
                                        name: Some(
                                            "assets",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 419,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "MultiAssetFilter",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "reserve",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 160,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "MultiLocation",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "xcm",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 398,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "Xcm<()>",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 16,
                                docs: [],
                            },
                            Variant {
                                name: "InitiateTeleport",
                                fields: [
                                    Field {
                                        name: Some(
                                            "assets",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 419,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "MultiAssetFilter",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "dest",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 160,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "MultiLocation",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "xcm",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 398,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "Xcm<()>",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 17,
                                docs: [],
                            },
                            Variant {
                                name: "ReportHolding",
                                fields: [
                                    Field {
                                        name: Some(
                                            "response_info",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 418,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "QueryResponseInfo",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "assets",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 419,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "MultiAssetFilter",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 18,
                                docs: [],
                            },
                            Variant {
                                name: "BuyExecution",
                                fields: [
                                    Field {
                                        name: Some(
                                            "fees",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 403,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "MultiAsset",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "weight_limit",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 422,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "WeightLimit",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 19,
                                docs: [],
                            },
                            Variant {
                                name: "RefundSurplus",
                                fields: [],
                                index: 20,
                                docs: [],
                            },
                            Variant {
                                name: "SetErrorHandler",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 398,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "Xcm<Call>",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 21,
                                docs: [],
                            },
                            Variant {
                                name: "SetAppendix",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 398,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "Xcm<Call>",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 22,
                                docs: [],
                            },
                            Variant {
                                name: "ClearError",
                                fields: [],
                                index: 23,
                                docs: [],
                            },
                            Variant {
                                name: "ClaimAsset",
                                fields: [
                                    Field {
                                        name: Some(
                                            "assets",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 401,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "MultiAssets",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "ticket",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 160,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "MultiLocation",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 24,
                                docs: [],
                            },
                            Variant {
                                name: "Trap",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 10,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "u64",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 25,
                                docs: [],
                            },
                            Variant {
                                name: "SubscribeVersion",
                                fields: [
                                    Field {
                                        name: Some(
                                            "query_id",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 10,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "QueryId",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "max_response_weight",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 9,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "Weight",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 26,
                                docs: [],
                            },
                            Variant {
                                name: "UnsubscribeVersion",
                                fields: [],
                                index: 27,
                                docs: [],
                            },
                            Variant {
                                name: "BurnAsset",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 401,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "MultiAssets",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 28,
                                docs: [],
                            },
                            Variant {
                                name: "ExpectAsset",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 401,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "MultiAssets",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 29,
                                docs: [],
                            },
                            Variant {
                                name: "ExpectOrigin",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 417,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "Option<MultiLocation>",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 30,
                                docs: [],
                            },
                            Variant {
                                name: "ExpectError",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 408,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "Option<(u32, Error)>",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 31,
                                docs: [],
                            },
                            Variant {
                                name: "ExpectTransactStatus",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 415,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "MaybeErrorCode",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 32,
                                docs: [],
                            },
                            Variant {
                                name: "QueryPallet",
                                fields: [
                                    Field {
                                        name: Some(
                                            "module_name",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 13,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "Vec<u8>",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "response_info",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 418,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "QueryResponseInfo",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 33,
                                docs: [],
                            },
                            Variant {
                                name: "ExpectPallet",
                                fields: [
                                    Field {
                                        name: Some(
                                            "index",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 91,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "u32",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "name",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 13,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "Vec<u8>",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "module_name",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 13,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "Vec<u8>",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "crate_major",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 91,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "u32",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "min_crate_minor",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 91,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "u32",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 34,
                                docs: [],
                            },
                            Variant {
                                name: "ReportTransactStatus",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 418,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "QueryResponseInfo",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 35,
                                docs: [],
                            },
                            Variant {
                                name: "ClearTransactStatus",
                                fields: [],
                                index: 36,
                                docs: [],
                            },
                            Variant {
                                name: "UniversalOrigin",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 162,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "Junction",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 37,
                                docs: [],
                            },
                            Variant {
                                name: "ExportMessage",
                                fields: [
                                    Field {
                                        name: Some(
                                            "network",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 164,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "NetworkId",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "destination",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 161,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "InteriorMultiLocation",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "xcm",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 398,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "Xcm<()>",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 38,
                                docs: [],
                            },
                            Variant {
                                name: "LockAsset",
                                fields: [
                                    Field {
                                        name: Some(
                                            "asset",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 403,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "MultiAsset",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "unlocker",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 160,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "MultiLocation",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 39,
                                docs: [],
                            },
                            Variant {
                                name: "UnlockAsset",
                                fields: [
                                    Field {
                                        name: Some(
                                            "asset",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 403,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "MultiAsset",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "target",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 160,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "MultiLocation",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 40,
                                docs: [],
                            },
                            Variant {
                                name: "NoteUnlockable",
                                fields: [
                                    Field {
                                        name: Some(
                                            "asset",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 403,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "MultiAsset",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "owner",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 160,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "MultiLocation",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 41,
                                docs: [],
                            },
                            Variant {
                                name: "RequestUnlock",
                                fields: [
                                    Field {
                                        name: Some(
                                            "asset",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 403,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "MultiAsset",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "locker",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 160,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "MultiLocation",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 42,
                                docs: [],
                            },
                            Variant {
                                name: "SetFeesMode",
                                fields: [
                                    Field {
                                        name: Some(
                                            "jit_withdraw",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 44,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "bool",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 43,
                                docs: [],
                            },
                            Variant {
                                name: "SetTopic",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 1,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "[u8; 32]",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 44,
                                docs: [],
                            },
                            Variant {
                                name: "ClearTopic",
                                fields: [],
                                index: 45,
                                docs: [],
                            },
                            Variant {
                                name: "AliasOrigin",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 160,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "MultiLocation",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 46,
                                docs: [],
                            },
                            Variant {
                                name: "UnpaidExecution",
                                fields: [
                                    Field {
                                        name: Some(
                                            "weight_limit",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 422,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "WeightLimit",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "check_origin",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 417,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "Option<MultiLocation>",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 47,
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 401,
            ty: Type {
                path: Path {
                    segments: [
                        "xcm",
                        "v3",
                        "multiasset",
                        "MultiAssets",
                    ],
                },
                type_params: [],
                type_def: Composite(
                    TypeDefComposite {
                        fields: [
                            Field {
                                name: None,
                                ty: UntrackedSymbol {
                                    id: 402,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "Vec<MultiAsset>",
                                ),
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 402,
            ty: Type {
                path: Path {
                    segments: [],
                },
                type_params: [],
                type_def: Sequence(
                    TypeDefSequence {
                        type_param: UntrackedSymbol {
                            id: 403,
                            marker: PhantomData<fn() -> core::any::TypeId>,
                        },
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 403,
            ty: Type {
                path: Path {
                    segments: [
                        "xcm",
                        "v3",
                        "multiasset",
                        "MultiAsset",
                    ],
                },
                type_params: [],
                type_def: Composite(
                    TypeDefComposite {
                        fields: [
                            Field {
                                name: Some(
                                    "id",
                                ),
                                ty: UntrackedSymbol {
                                    id: 404,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "AssetId",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "fun",
                                ),
                                ty: UntrackedSymbol {
                                    id: 405,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "Fungibility",
                                ),
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 404,
            ty: Type {
                path: Path {
                    segments: [
                        "xcm",
                        "v3",
                        "multiasset",
                        "AssetId",
                    ],
                },
                type_params: [],
                type_def: Variant(
                    TypeDefVariant {
                        variants: [
                            Variant {
                                name: "Concrete",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 160,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "MultiLocation",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 0,
                                docs: [],
                            },
                            Variant {
                                name: "Abstract",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 1,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "[u8; 32]",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 1,
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 405,
            ty: Type {
                path: Path {
                    segments: [
                        "xcm",
                        "v3",
                        "multiasset",
                        "Fungibility",
                    ],
                },
                type_params: [],
                type_def: Variant(
                    TypeDefVariant {
                        variants: [
                            Variant {
                                name: "Fungible",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 60,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "u128",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 0,
                                docs: [],
                            },
                            Variant {
                                name: "NonFungible",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 406,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "AssetInstance",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 1,
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 406,
            ty: Type {
                path: Path {
                    segments: [
                        "xcm",
                        "v3",
                        "multiasset",
                        "AssetInstance",
                    ],
                },
                type_params: [],
                type_def: Variant(
                    TypeDefVariant {
                        variants: [
                            Variant {
                                name: "Undefined",
                                fields: [],
                                index: 0,
                                docs: [],
                            },
                            Variant {
                                name: "Index",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 60,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "u128",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 1,
                                docs: [],
                            },
                            Variant {
                                name: "Array4",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 17,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "[u8; 4]",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 2,
                                docs: [],
                            },
                            Variant {
                                name: "Array8",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 194,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "[u8; 8]",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 3,
                                docs: [],
                            },
                            Variant {
                                name: "Array16",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 47,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "[u8; 16]",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 4,
                                docs: [],
                            },
                            Variant {
                                name: "Array32",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 1,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "[u8; 32]",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 5,
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 407,
            ty: Type {
                path: Path {
                    segments: [
                        "xcm",
                        "v3",
                        "Response",
                    ],
                },
                type_params: [],
                type_def: Variant(
                    TypeDefVariant {
                        variants: [
                            Variant {
                                name: "Null",
                                fields: [],
                                index: 0,
                                docs: [],
                            },
                            Variant {
                                name: "Assets",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 401,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "MultiAssets",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 1,
                                docs: [],
                            },
                            Variant {
                                name: "ExecutionResult",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 408,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "Option<(u32, Error)>",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 2,
                                docs: [],
                            },
                            Variant {
                                name: "Version",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 4,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "super::Version",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 3,
                                docs: [],
                            },
                            Variant {
                                name: "PalletsInfo",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 411,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "BoundedVec<PalletInfo, MaxPalletsInfo>",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 4,
                                docs: [],
                            },
                            Variant {
                                name: "DispatchResult",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 415,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "MaybeErrorCode",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 5,
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 408,
            ty: Type {
                path: Path {
                    segments: [
                        "Option",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "T",
                        ty: Some(
                            UntrackedSymbol {
                                id: 409,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ),
                    },
                ],
                type_def: Variant(
                    TypeDefVariant {
                        variants: [
                            Variant {
                                name: "None",
                                fields: [],
                                index: 0,
                                docs: [],
                            },
                            Variant {
                                name: "Some",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 409,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: None,
                                        docs: [],
                                    },
                                ],
                                index: 1,
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 409,
            ty: Type {
                path: Path {
                    segments: [],
                },
                type_params: [],
                type_def: Tuple(
                    TypeDefTuple {
                        fields: [
                            UntrackedSymbol {
                                id: 4,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                            UntrackedSymbol {
                                id: 410,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 410,
            ty: Type {
                path: Path {
                    segments: [
                        "xcm",
                        "v3",
                        "traits",
                        "Error",
                    ],
                },
                type_params: [],
                type_def: Variant(
                    TypeDefVariant {
                        variants: [
                            Variant {
                                name: "Overflow",
                                fields: [],
                                index: 0,
                                docs: [],
                            },
                            Variant {
                                name: "Unimplemented",
                                fields: [],
                                index: 1,
                                docs: [],
                            },
                            Variant {
                                name: "UntrustedReserveLocation",
                                fields: [],
                                index: 2,
                                docs: [],
                            },
                            Variant {
                                name: "UntrustedTeleportLocation",
                                fields: [],
                                index: 3,
                                docs: [],
                            },
                            Variant {
                                name: "LocationFull",
                                fields: [],
                                index: 4,
                                docs: [],
                            },
                            Variant {
                                name: "LocationNotInvertible",
                                fields: [],
                                index: 5,
                                docs: [],
                            },
                            Variant {
                                name: "BadOrigin",
                                fields: [],
                                index: 6,
                                docs: [],
                            },
                            Variant {
                                name: "InvalidLocation",
                                fields: [],
                                index: 7,
                                docs: [],
                            },
                            Variant {
                                name: "AssetNotFound",
                                fields: [],
                                index: 8,
                                docs: [],
                            },
                            Variant {
                                name: "FailedToTransactAsset",
                                fields: [],
                                index: 9,
                                docs: [],
                            },
                            Variant {
                                name: "NotWithdrawable",
                                fields: [],
                                index: 10,
                                docs: [],
                            },
                            Variant {
                                name: "LocationCannotHold",
                                fields: [],
                                index: 11,
                                docs: [],
                            },
                            Variant {
                                name: "ExceedsMaxMessageSize",
                                fields: [],
                                index: 12,
                                docs: [],
                            },
                            Variant {
                                name: "DestinationUnsupported",
                                fields: [],
                                index: 13,
                                docs: [],
                            },
                            Variant {
                                name: "Transport",
                                fields: [],
                                index: 14,
                                docs: [],
                            },
                            Variant {
                                name: "Unroutable",
                                fields: [],
                                index: 15,
                                docs: [],
                            },
                            Variant {
                                name: "UnknownClaim",
                                fields: [],
                                index: 16,
                                docs: [],
                            },
                            Variant {
                                name: "FailedToDecode",
                                fields: [],
                                index: 17,
                                docs: [],
                            },
                            Variant {
                                name: "MaxWeightInvalid",
                                fields: [],
                                index: 18,
                                docs: [],
                            },
                            Variant {
                                name: "NotHoldingFees",
                                fields: [],
                                index: 19,
                                docs: [],
                            },
                            Variant {
                                name: "TooExpensive",
                                fields: [],
                                index: 20,
                                docs: [],
                            },
                            Variant {
                                name: "Trap",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 11,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "u64",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 21,
                                docs: [],
                            },
                            Variant {
                                name: "ExpectationFalse",
                                fields: [],
                                index: 22,
                                docs: [],
                            },
                            Variant {
                                name: "PalletNotFound",
                                fields: [],
                                index: 23,
                                docs: [],
                            },
                            Variant {
                                name: "NameMismatch",
                                fields: [],
                                index: 24,
                                docs: [],
                            },
                            Variant {
                                name: "VersionIncompatible",
                                fields: [],
                                index: 25,
                                docs: [],
                            },
                            Variant {
                                name: "HoldingWouldOverflow",
                                fields: [],
                                index: 26,
                                docs: [],
                            },
                            Variant {
                                name: "ExportError",
                                fields: [],
                                index: 27,
                                docs: [],
                            },
                            Variant {
                                name: "ReanchorFailed",
                                fields: [],
                                index: 28,
                                docs: [],
                            },
                            Variant {
                                name: "NoDeal",
                                fields: [],
                                index: 29,
                                docs: [],
                            },
                            Variant {
                                name: "FeesNotMet",
                                fields: [],
                                index: 30,
                                docs: [],
                            },
                            Variant {
                                name: "LockError",
                                fields: [],
                                index: 31,
                                docs: [],
                            },
                            Variant {
                                name: "NoPermission",
                                fields: [],
                                index: 32,
                                docs: [],
                            },
                            Variant {
                                name: "Unanchored",
                                fields: [],
                                index: 33,
                                docs: [],
                            },
                            Variant {
                                name: "NotDepositable",
                                fields: [],
                                index: 34,
                                docs: [],
                            },
                            Variant {
                                name: "UnhandledXcmVersion",
                                fields: [],
                                index: 35,
                                docs: [],
                            },
                            Variant {
                                name: "WeightLimitReached",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 9,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "Weight",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 36,
                                docs: [],
                            },
                            Variant {
                                name: "Barrier",
                                fields: [],
                                index: 37,
                                docs: [],
                            },
                            Variant {
                                name: "WeightNotComputable",
                                fields: [],
                                index: 38,
                                docs: [],
                            },
                            Variant {
                                name: "ExceedsStackLimit",
                                fields: [],
                                index: 39,
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 411,
            ty: Type {
                path: Path {
                    segments: [
                        "bounded_collections",
                        "bounded_vec",
                        "BoundedVec",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "T",
                        ty: Some(
                            UntrackedSymbol {
                                id: 412,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ),
                    },
                    TypeParameter {
                        name: "S",
                        ty: None,
                    },
                ],
                type_def: Composite(
                    TypeDefComposite {
                        fields: [
                            Field {
                                name: None,
                                ty: UntrackedSymbol {
                                    id: 414,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "Vec<T>",
                                ),
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 412,
            ty: Type {
                path: Path {
                    segments: [
                        "xcm",
                        "v3",
                        "PalletInfo",
                    ],
                },
                type_params: [],
                type_def: Composite(
                    TypeDefComposite {
                        fields: [
                            Field {
                                name: Some(
                                    "index",
                                ),
                                ty: UntrackedSymbol {
                                    id: 91,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "u32",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "name",
                                ),
                                ty: UntrackedSymbol {
                                    id: 413,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "BoundedVec<u8, MaxPalletNameLen>",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "module_name",
                                ),
                                ty: UntrackedSymbol {
                                    id: 413,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "BoundedVec<u8, MaxPalletNameLen>",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "major",
                                ),
                                ty: UntrackedSymbol {
                                    id: 91,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "u32",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "minor",
                                ),
                                ty: UntrackedSymbol {
                                    id: 91,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "u32",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "patch",
                                ),
                                ty: UntrackedSymbol {
                                    id: 91,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "u32",
                                ),
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 413,
            ty: Type {
                path: Path {
                    segments: [
                        "bounded_collections",
                        "bounded_vec",
                        "BoundedVec",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "T",
                        ty: Some(
                            UntrackedSymbol {
                                id: 2,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ),
                    },
                    TypeParameter {
                        name: "S",
                        ty: None,
                    },
                ],
                type_def: Composite(
                    TypeDefComposite {
                        fields: [
                            Field {
                                name: None,
                                ty: UntrackedSymbol {
                                    id: 13,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "Vec<T>",
                                ),
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 414,
            ty: Type {
                path: Path {
                    segments: [],
                },
                type_params: [],
                type_def: Sequence(
                    TypeDefSequence {
                        type_param: UntrackedSymbol {
                            id: 412,
                            marker: PhantomData<fn() -> core::any::TypeId>,
                        },
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 415,
            ty: Type {
                path: Path {
                    segments: [
                        "xcm",
                        "v3",
                        "MaybeErrorCode",
                    ],
                },
                type_params: [],
                type_def: Variant(
                    TypeDefVariant {
                        variants: [
                            Variant {
                                name: "Success",
                                fields: [],
                                index: 0,
                                docs: [],
                            },
                            Variant {
                                name: "Error",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 416,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "BoundedVec<u8, MaxDispatchErrorLen>",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 1,
                                docs: [],
                            },
                            Variant {
                                name: "TruncatedError",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 416,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "BoundedVec<u8, MaxDispatchErrorLen>",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 2,
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 416,
            ty: Type {
                path: Path {
                    segments: [
                        "bounded_collections",
                        "bounded_vec",
                        "BoundedVec",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "T",
                        ty: Some(
                            UntrackedSymbol {
                                id: 2,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ),
                    },
                    TypeParameter {
                        name: "S",
                        ty: None,
                    },
                ],
                type_def: Composite(
                    TypeDefComposite {
                        fields: [
                            Field {
                                name: None,
                                ty: UntrackedSymbol {
                                    id: 13,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "Vec<T>",
                                ),
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 417,
            ty: Type {
                path: Path {
                    segments: [
                        "Option",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "T",
                        ty: Some(
                            UntrackedSymbol {
                                id: 160,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ),
                    },
                ],
                type_def: Variant(
                    TypeDefVariant {
                        variants: [
                            Variant {
                                name: "None",
                                fields: [],
                                index: 0,
                                docs: [],
                            },
                            Variant {
                                name: "Some",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 160,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: None,
                                        docs: [],
                                    },
                                ],
                                index: 1,
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 418,
            ty: Type {
                path: Path {
                    segments: [
                        "xcm",
                        "v3",
                        "QueryResponseInfo",
                    ],
                },
                type_params: [],
                type_def: Composite(
                    TypeDefComposite {
                        fields: [
                            Field {
                                name: Some(
                                    "destination",
                                ),
                                ty: UntrackedSymbol {
                                    id: 160,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "MultiLocation",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "query_id",
                                ),
                                ty: UntrackedSymbol {
                                    id: 10,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "QueryId",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "max_weight",
                                ),
                                ty: UntrackedSymbol {
                                    id: 9,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "Weight",
                                ),
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 419,
            ty: Type {
                path: Path {
                    segments: [
                        "xcm",
                        "v3",
                        "multiasset",
                        "MultiAssetFilter",
                    ],
                },
                type_params: [],
                type_def: Variant(
                    TypeDefVariant {
                        variants: [
                            Variant {
                                name: "Definite",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 401,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "MultiAssets",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 0,
                                docs: [],
                            },
                            Variant {
                                name: "Wild",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 420,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "WildMultiAsset",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 1,
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 420,
            ty: Type {
                path: Path {
                    segments: [
                        "xcm",
                        "v3",
                        "multiasset",
                        "WildMultiAsset",
                    ],
                },
                type_params: [],
                type_def: Variant(
                    TypeDefVariant {
                        variants: [
                            Variant {
                                name: "All",
                                fields: [],
                                index: 0,
                                docs: [],
                            },
                            Variant {
                                name: "AllOf",
                                fields: [
                                    Field {
                                        name: Some(
                                            "id",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 404,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "AssetId",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "fun",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 421,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "WildFungibility",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 1,
                                docs: [],
                            },
                            Variant {
                                name: "AllCounted",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 91,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "u32",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 2,
                                docs: [],
                            },
                            Variant {
                                name: "AllOfCounted",
                                fields: [
                                    Field {
                                        name: Some(
                                            "id",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 404,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "AssetId",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "fun",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 421,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "WildFungibility",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "count",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 91,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "u32",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 3,
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 421,
            ty: Type {
                path: Path {
                    segments: [
                        "xcm",
                        "v3",
                        "multiasset",
                        "WildFungibility",
                    ],
                },
                type_params: [],
                type_def: Variant(
                    TypeDefVariant {
                        variants: [
                            Variant {
                                name: "Fungible",
                                fields: [],
                                index: 0,
                                docs: [],
                            },
                            Variant {
                                name: "NonFungible",
                                fields: [],
                                index: 1,
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 422,
            ty: Type {
                path: Path {
                    segments: [
                        "xcm",
                        "v3",
                        "WeightLimit",
                    ],
                },
                type_params: [],
                type_def: Variant(
                    TypeDefVariant {
                        variants: [
                            Variant {
                                name: "Unlimited",
                                fields: [],
                                index: 0,
                                docs: [],
                            },
                            Variant {
                                name: "Limited",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 9,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "Weight",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 1,
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 423,
            ty: Type {
                path: Path {
                    segments: [
                        "xcm",
                        "VersionedMultiAssets",
                    ],
                },
                type_params: [],
                type_def: Variant(
                    TypeDefVariant {
                        variants: [
                            Variant {
                                name: "V2",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 382,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "v2::MultiAssets",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 1,
                                docs: [],
                            },
                            Variant {
                                name: "V3",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 401,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "v3::MultiAssets",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 3,
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 424,
            ty: Type {
                path: Path {
                    segments: [
                        "xcm",
                        "VersionedXcm2",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "RuntimeCall",
                        ty: None,
                    },
                ],
                type_def: Variant(
                    TypeDefVariant {
                        variants: [
                            Variant {
                                name: "V2",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 425,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "v2::Xcm<RuntimeCall>",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 2,
                                docs: [],
                            },
                            Variant {
                                name: "V3",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 429,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "v3::Xcm<RuntimeCall>",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 3,
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 425,
            ty: Type {
                path: Path {
                    segments: [
                        "xcm",
                        "v2",
                        "Xcm2",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "RuntimeCall",
                        ty: None,
                    },
                ],
                type_def: Composite(
                    TypeDefComposite {
                        fields: [
                            Field {
                                name: None,
                                ty: UntrackedSymbol {
                                    id: 426,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "Vec<Instruction<RuntimeCall>>",
                                ),
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 426,
            ty: Type {
                path: Path {
                    segments: [],
                },
                type_params: [],
                type_def: Sequence(
                    TypeDefSequence {
                        type_param: UntrackedSymbol {
                            id: 427,
                            marker: PhantomData<fn() -> core::any::TypeId>,
                        },
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 427,
            ty: Type {
                path: Path {
                    segments: [
                        "xcm",
                        "v2",
                        "Instruction2",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "RuntimeCall",
                        ty: None,
                    },
                ],
                type_def: Variant(
                    TypeDefVariant {
                        variants: [
                            Variant {
                                name: "WithdrawAsset",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 382,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "MultiAssets",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 0,
                                docs: [],
                            },
                            Variant {
                                name: "ReserveAssetDeposited",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 382,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "MultiAssets",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 1,
                                docs: [],
                            },
                            Variant {
                                name: "ReceiveTeleportedAsset",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 382,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "MultiAssets",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 2,
                                docs: [],
                            },
                            Variant {
                                name: "QueryResponse",
                                fields: [
                                    Field {
                                        name: Some(
                                            "query_id",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 10,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "QueryId",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "response",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 388,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "Response",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "max_weight",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 10,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "u64",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 3,
                                docs: [],
                            },
                            Variant {
                                name: "TransferAsset",
                                fields: [
                                    Field {
                                        name: Some(
                                            "assets",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 382,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "MultiAssets",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "beneficiary",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 371,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "MultiLocation",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 4,
                                docs: [],
                            },
                            Variant {
                                name: "TransferReserveAsset",
                                fields: [
                                    Field {
                                        name: Some(
                                            "assets",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 382,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "MultiAssets",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "dest",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 371,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "MultiLocation",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "xcm",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 379,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "Xcm<()>",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 5,
                                docs: [],
                            },
                            Variant {
                                name: "Transact",
                                fields: [
                                    Field {
                                        name: Some(
                                            "origin_type",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 392,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "OriginKind",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "require_weight_at_most",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 10,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "u64",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "call",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 428,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "DoubleEncoded<RuntimeCall>",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 6,
                                docs: [],
                            },
                            Variant {
                                name: "HrmpNewChannelOpenRequest",
                                fields: [
                                    Field {
                                        name: Some(
                                            "sender",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 91,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "u32",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "max_message_size",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 91,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "u32",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "max_capacity",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 91,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "u32",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 7,
                                docs: [],
                            },
                            Variant {
                                name: "HrmpChannelAccepted",
                                fields: [
                                    Field {
                                        name: Some(
                                            "recipient",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 91,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "u32",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 8,
                                docs: [],
                            },
                            Variant {
                                name: "HrmpChannelClosing",
                                fields: [
                                    Field {
                                        name: Some(
                                            "initiator",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 91,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "u32",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "sender",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 91,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "u32",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "recipient",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 91,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "u32",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 9,
                                docs: [],
                            },
                            Variant {
                                name: "ClearOrigin",
                                fields: [],
                                index: 10,
                                docs: [],
                            },
                            Variant {
                                name: "DescendOrigin",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 372,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "InteriorMultiLocation",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 11,
                                docs: [],
                            },
                            Variant {
                                name: "ReportError",
                                fields: [
                                    Field {
                                        name: Some(
                                            "query_id",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 10,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "QueryId",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "dest",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 371,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "MultiLocation",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "max_response_weight",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 10,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "u64",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 12,
                                docs: [],
                            },
                            Variant {
                                name: "DepositAsset",
                                fields: [
                                    Field {
                                        name: Some(
                                            "assets",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 394,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "MultiAssetFilter",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "max_assets",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 91,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "u32",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "beneficiary",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 371,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "MultiLocation",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 13,
                                docs: [],
                            },
                            Variant {
                                name: "DepositReserveAsset",
                                fields: [
                                    Field {
                                        name: Some(
                                            "assets",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 394,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "MultiAssetFilter",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "max_assets",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 91,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "u32",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "dest",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 371,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "MultiLocation",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "xcm",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 379,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "Xcm<()>",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 14,
                                docs: [],
                            },
                            Variant {
                                name: "ExchangeAsset",
                                fields: [
                                    Field {
                                        name: Some(
                                            "give",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 394,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "MultiAssetFilter",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "receive",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 382,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "MultiAssets",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 15,
                                docs: [],
                            },
                            Variant {
                                name: "InitiateReserveWithdraw",
                                fields: [
                                    Field {
                                        name: Some(
                                            "assets",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 394,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "MultiAssetFilter",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "reserve",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 371,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "MultiLocation",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "xcm",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 379,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "Xcm<()>",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 16,
                                docs: [],
                            },
                            Variant {
                                name: "InitiateTeleport",
                                fields: [
                                    Field {
                                        name: Some(
                                            "assets",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 394,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "MultiAssetFilter",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "dest",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 371,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "MultiLocation",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "xcm",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 379,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "Xcm<()>",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 17,
                                docs: [],
                            },
                            Variant {
                                name: "QueryHolding",
                                fields: [
                                    Field {
                                        name: Some(
                                            "query_id",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 10,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "QueryId",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "dest",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 371,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "MultiLocation",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "assets",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 394,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "MultiAssetFilter",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "max_response_weight",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 10,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "u64",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 18,
                                docs: [],
                            },
                            Variant {
                                name: "BuyExecution",
                                fields: [
                                    Field {
                                        name: Some(
                                            "fees",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 384,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "MultiAsset",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "weight_limit",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 397,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "WeightLimit",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 19,
                                docs: [],
                            },
                            Variant {
                                name: "RefundSurplus",
                                fields: [],
                                index: 20,
                                docs: [],
                            },
                            Variant {
                                name: "SetErrorHandler",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 425,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "Xcm<RuntimeCall>",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 21,
                                docs: [],
                            },
                            Variant {
                                name: "SetAppendix",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 425,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "Xcm<RuntimeCall>",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 22,
                                docs: [],
                            },
                            Variant {
                                name: "ClearError",
                                fields: [],
                                index: 23,
                                docs: [],
                            },
                            Variant {
                                name: "ClaimAsset",
                                fields: [
                                    Field {
                                        name: Some(
                                            "assets",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 382,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "MultiAssets",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "ticket",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 371,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "MultiLocation",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 24,
                                docs: [],
                            },
                            Variant {
                                name: "Trap",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 10,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "u64",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 25,
                                docs: [],
                            },
                            Variant {
                                name: "SubscribeVersion",
                                fields: [
                                    Field {
                                        name: Some(
                                            "query_id",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 10,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "QueryId",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "max_response_weight",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 10,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "u64",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 26,
                                docs: [],
                            },
                            Variant {
                                name: "UnsubscribeVersion",
                                fields: [],
                                index: 27,
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 428,
            ty: Type {
                path: Path {
                    segments: [
                        "xcm",
                        "double_encoded",
                        "DoubleEncoded2",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "T",
                        ty: None,
                    },
                ],
                type_def: Composite(
                    TypeDefComposite {
                        fields: [
                            Field {
                                name: Some(
                                    "encoded",
                                ),
                                ty: UntrackedSymbol {
                                    id: 13,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "Vec<u8>",
                                ),
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 429,
            ty: Type {
                path: Path {
                    segments: [
                        "xcm",
                        "v3",
                        "Xcm2",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "Call",
                        ty: None,
                    },
                ],
                type_def: Composite(
                    TypeDefComposite {
                        fields: [
                            Field {
                                name: None,
                                ty: UntrackedSymbol {
                                    id: 430,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "Vec<Instruction<Call>>",
                                ),
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 430,
            ty: Type {
                path: Path {
                    segments: [],
                },
                type_params: [],
                type_def: Sequence(
                    TypeDefSequence {
                        type_param: UntrackedSymbol {
                            id: 431,
                            marker: PhantomData<fn() -> core::any::TypeId>,
                        },
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 431,
            ty: Type {
                path: Path {
                    segments: [
                        "xcm",
                        "v3",
                        "Instruction2",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "Call",
                        ty: None,
                    },
                ],
                type_def: Variant(
                    TypeDefVariant {
                        variants: [
                            Variant {
                                name: "WithdrawAsset",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 401,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "MultiAssets",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 0,
                                docs: [],
                            },
                            Variant {
                                name: "ReserveAssetDeposited",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 401,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "MultiAssets",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 1,
                                docs: [],
                            },
                            Variant {
                                name: "ReceiveTeleportedAsset",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 401,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "MultiAssets",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 2,
                                docs: [],
                            },
                            Variant {
                                name: "QueryResponse",
                                fields: [
                                    Field {
                                        name: Some(
                                            "query_id",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 10,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "QueryId",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "response",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 407,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "Response",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "max_weight",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 9,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "Weight",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "querier",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 417,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "Option<MultiLocation>",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 3,
                                docs: [],
                            },
                            Variant {
                                name: "TransferAsset",
                                fields: [
                                    Field {
                                        name: Some(
                                            "assets",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 401,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "MultiAssets",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "beneficiary",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 160,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "MultiLocation",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 4,
                                docs: [],
                            },
                            Variant {
                                name: "TransferReserveAsset",
                                fields: [
                                    Field {
                                        name: Some(
                                            "assets",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 401,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "MultiAssets",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "dest",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 160,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "MultiLocation",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "xcm",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 398,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "Xcm<()>",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 5,
                                docs: [],
                            },
                            Variant {
                                name: "Transact",
                                fields: [
                                    Field {
                                        name: Some(
                                            "origin_kind",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 392,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "OriginKind",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "require_weight_at_most",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 9,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "Weight",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "call",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 428,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "DoubleEncoded<Call>",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 6,
                                docs: [],
                            },
                            Variant {
                                name: "HrmpNewChannelOpenRequest",
                                fields: [
                                    Field {
                                        name: Some(
                                            "sender",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 91,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "u32",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "max_message_size",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 91,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "u32",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "max_capacity",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 91,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "u32",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 7,
                                docs: [],
                            },
                            Variant {
                                name: "HrmpChannelAccepted",
                                fields: [
                                    Field {
                                        name: Some(
                                            "recipient",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 91,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "u32",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 8,
                                docs: [],
                            },
                            Variant {
                                name: "HrmpChannelClosing",
                                fields: [
                                    Field {
                                        name: Some(
                                            "initiator",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 91,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "u32",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "sender",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 91,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "u32",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "recipient",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 91,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "u32",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 9,
                                docs: [],
                            },
                            Variant {
                                name: "ClearOrigin",
                                fields: [],
                                index: 10,
                                docs: [],
                            },
                            Variant {
                                name: "DescendOrigin",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 161,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "InteriorMultiLocation",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 11,
                                docs: [],
                            },
                            Variant {
                                name: "ReportError",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 418,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "QueryResponseInfo",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 12,
                                docs: [],
                            },
                            Variant {
                                name: "DepositAsset",
                                fields: [
                                    Field {
                                        name: Some(
                                            "assets",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 419,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "MultiAssetFilter",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "beneficiary",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 160,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "MultiLocation",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 13,
                                docs: [],
                            },
                            Variant {
                                name: "DepositReserveAsset",
                                fields: [
                                    Field {
                                        name: Some(
                                            "assets",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 419,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "MultiAssetFilter",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "dest",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 160,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "MultiLocation",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "xcm",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 398,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "Xcm<()>",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 14,
                                docs: [],
                            },
                            Variant {
                                name: "ExchangeAsset",
                                fields: [
                                    Field {
                                        name: Some(
                                            "give",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 419,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "MultiAssetFilter",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "want",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 401,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "MultiAssets",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "maximal",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 44,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "bool",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 15,
                                docs: [],
                            },
                            Variant {
                                name: "InitiateReserveWithdraw",
                                fields: [
                                    Field {
                                        name: Some(
                                            "assets",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 419,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "MultiAssetFilter",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "reserve",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 160,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "MultiLocation",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "xcm",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 398,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "Xcm<()>",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 16,
                                docs: [],
                            },
                            Variant {
                                name: "InitiateTeleport",
                                fields: [
                                    Field {
                                        name: Some(
                                            "assets",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 419,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "MultiAssetFilter",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "dest",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 160,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "MultiLocation",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "xcm",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 398,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "Xcm<()>",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 17,
                                docs: [],
                            },
                            Variant {
                                name: "ReportHolding",
                                fields: [
                                    Field {
                                        name: Some(
                                            "response_info",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 418,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "QueryResponseInfo",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "assets",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 419,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "MultiAssetFilter",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 18,
                                docs: [],
                            },
                            Variant {
                                name: "BuyExecution",
                                fields: [
                                    Field {
                                        name: Some(
                                            "fees",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 403,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "MultiAsset",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "weight_limit",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 422,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "WeightLimit",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 19,
                                docs: [],
                            },
                            Variant {
                                name: "RefundSurplus",
                                fields: [],
                                index: 20,
                                docs: [],
                            },
                            Variant {
                                name: "SetErrorHandler",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 429,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "Xcm<Call>",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 21,
                                docs: [],
                            },
                            Variant {
                                name: "SetAppendix",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 429,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "Xcm<Call>",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 22,
                                docs: [],
                            },
                            Variant {
                                name: "ClearError",
                                fields: [],
                                index: 23,
                                docs: [],
                            },
                            Variant {
                                name: "ClaimAsset",
                                fields: [
                                    Field {
                                        name: Some(
                                            "assets",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 401,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "MultiAssets",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "ticket",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 160,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "MultiLocation",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 24,
                                docs: [],
                            },
                            Variant {
                                name: "Trap",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 10,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "u64",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 25,
                                docs: [],
                            },
                            Variant {
                                name: "SubscribeVersion",
                                fields: [
                                    Field {
                                        name: Some(
                                            "query_id",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 10,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "QueryId",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "max_response_weight",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 9,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "Weight",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 26,
                                docs: [],
                            },
                            Variant {
                                name: "UnsubscribeVersion",
                                fields: [],
                                index: 27,
                                docs: [],
                            },
                            Variant {
                                name: "BurnAsset",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 401,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "MultiAssets",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 28,
                                docs: [],
                            },
                            Variant {
                                name: "ExpectAsset",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 401,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "MultiAssets",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 29,
                                docs: [],
                            },
                            Variant {
                                name: "ExpectOrigin",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 417,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "Option<MultiLocation>",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 30,
                                docs: [],
                            },
                            Variant {
                                name: "ExpectError",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 408,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "Option<(u32, Error)>",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 31,
                                docs: [],
                            },
                            Variant {
                                name: "ExpectTransactStatus",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 415,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "MaybeErrorCode",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 32,
                                docs: [],
                            },
                            Variant {
                                name: "QueryPallet",
                                fields: [
                                    Field {
                                        name: Some(
                                            "module_name",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 13,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "Vec<u8>",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "response_info",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 418,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "QueryResponseInfo",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 33,
                                docs: [],
                            },
                            Variant {
                                name: "ExpectPallet",
                                fields: [
                                    Field {
                                        name: Some(
                                            "index",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 91,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "u32",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "name",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 13,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "Vec<u8>",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "module_name",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 13,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "Vec<u8>",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "crate_major",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 91,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "u32",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "min_crate_minor",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 91,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "u32",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 34,
                                docs: [],
                            },
                            Variant {
                                name: "ReportTransactStatus",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 418,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "QueryResponseInfo",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 35,
                                docs: [],
                            },
                            Variant {
                                name: "ClearTransactStatus",
                                fields: [],
                                index: 36,
                                docs: [],
                            },
                            Variant {
                                name: "UniversalOrigin",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 162,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "Junction",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 37,
                                docs: [],
                            },
                            Variant {
                                name: "ExportMessage",
                                fields: [
                                    Field {
                                        name: Some(
                                            "network",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 164,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "NetworkId",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "destination",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 161,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "InteriorMultiLocation",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "xcm",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 398,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "Xcm<()>",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 38,
                                docs: [],
                            },
                            Variant {
                                name: "LockAsset",
                                fields: [
                                    Field {
                                        name: Some(
                                            "asset",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 403,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "MultiAsset",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "unlocker",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 160,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "MultiLocation",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 39,
                                docs: [],
                            },
                            Variant {
                                name: "UnlockAsset",
                                fields: [
                                    Field {
                                        name: Some(
                                            "asset",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 403,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "MultiAsset",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "target",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 160,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "MultiLocation",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 40,
                                docs: [],
                            },
                            Variant {
                                name: "NoteUnlockable",
                                fields: [
                                    Field {
                                        name: Some(
                                            "asset",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 403,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "MultiAsset",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "owner",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 160,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "MultiLocation",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 41,
                                docs: [],
                            },
                            Variant {
                                name: "RequestUnlock",
                                fields: [
                                    Field {
                                        name: Some(
                                            "asset",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 403,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "MultiAsset",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "locker",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 160,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "MultiLocation",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 42,
                                docs: [],
                            },
                            Variant {
                                name: "SetFeesMode",
                                fields: [
                                    Field {
                                        name: Some(
                                            "jit_withdraw",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 44,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "bool",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 43,
                                docs: [],
                            },
                            Variant {
                                name: "SetTopic",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 1,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "[u8; 32]",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 44,
                                docs: [],
                            },
                            Variant {
                                name: "ClearTopic",
                                fields: [],
                                index: 45,
                                docs: [],
                            },
                            Variant {
                                name: "AliasOrigin",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 160,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "MultiLocation",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 46,
                                docs: [],
                            },
                            Variant {
                                name: "UnpaidExecution",
                                fields: [
                                    Field {
                                        name: Some(
                                            "weight_limit",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 422,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "WeightLimit",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "check_origin",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 417,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "Option<MultiLocation>",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 47,
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 432,
            ty: Type {
                path: Path {
                    segments: [
                        "pallet_message_queue",
                        "pallet",
                        "Call",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "T",
                        ty: None,
                    },
                ],
                type_def: Variant(
                    TypeDefVariant {
                        variants: [
                            Variant {
                                name: "reap_page",
                                fields: [
                                    Field {
                                        name: Some(
                                            "message_origin",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 433,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "MessageOriginOf<T>",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "page_index",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 4,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "PageIndex",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 0,
                                docs: [
                                    "See [`Pallet::reap_page`].",
                                ],
                            },
                            Variant {
                                name: "execute_overweight",
                                fields: [
                                    Field {
                                        name: Some(
                                            "message_origin",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 433,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "MessageOriginOf<T>",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "page",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 4,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "PageIndex",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "index",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 4,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "T::Size",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "weight_limit",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 9,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "Weight",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 1,
                                docs: [
                                    "See [`Pallet::execute_overweight`].",
                                ],
                            },
                        ],
                    },
                ),
                docs: [
                    "Contains a variant per dispatchable extrinsic that this pallet has.",
                ],
            },
        },
        PortableType {
            id: 433,
            ty: Type {
                path: Path {
                    segments: [
                        "polkadot_runtime_parachains",
                        "inclusion",
                        "AggregateMessageOrigin",
                    ],
                },
                type_params: [],
                type_def: Variant(
                    TypeDefVariant {
                        variants: [
                            Variant {
                                name: "Ump",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 434,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "UmpQueueId",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 0,
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 434,
            ty: Type {
                path: Path {
                    segments: [
                        "polkadot_runtime_parachains",
                        "inclusion",
                        "UmpQueueId",
                    ],
                },
                type_params: [],
                type_def: Variant(
                    TypeDefVariant {
                        variants: [
                            Variant {
                                name: "Para",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 158,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "ParaId",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 0,
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 435,
            ty: Type {
                path: Path {
                    segments: [
                        "bounded_collections",
                        "bounded_vec",
                        "BoundedVec",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "T",
                        ty: Some(
                            UntrackedSymbol {
                                id: 2,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ),
                    },
                    TypeParameter {
                        name: "S",
                        ty: None,
                    },
                ],
                type_def: Composite(
                    TypeDefComposite {
                        fields: [
                            Field {
                                name: None,
                                ty: UntrackedSymbol {
                                    id: 13,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "Vec<T>",
                                ),
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 436,
            ty: Type {
                path: Path {
                    segments: [
                        "pallet_conviction_voting",
                        "types",
                        "Tally",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "Votes",
                        ty: Some(
                            UntrackedSymbol {
                                id: 6,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ),
                    },
                    TypeParameter {
                        name: "Total",
                        ty: None,
                    },
                ],
                type_def: Composite(
                    TypeDefComposite {
                        fields: [
                            Field {
                                name: Some(
                                    "ayes",
                                ),
                                ty: UntrackedSymbol {
                                    id: 6,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "Votes",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "nays",
                                ),
                                ty: UntrackedSymbol {
                                    id: 6,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "Votes",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "support",
                                ),
                                ty: UntrackedSymbol {
                                    id: 6,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "Votes",
                                ),
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 437,
            ty: Type {
                path: Path {
                    segments: [
                        "pallet_whitelist",
                        "pallet",
                        "Event",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "T",
                        ty: None,
                    },
                ],
                type_def: Variant(
                    TypeDefVariant {
                        variants: [
                            Variant {
                                name: "CallWhitelisted",
                                fields: [
                                    Field {
                                        name: Some(
                                            "call_hash",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 12,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "PreimageHash",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 0,
                                docs: [],
                            },
                            Variant {
                                name: "WhitelistedCallRemoved",
                                fields: [
                                    Field {
                                        name: Some(
                                            "call_hash",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 12,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "PreimageHash",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 1,
                                docs: [],
                            },
                            Variant {
                                name: "WhitelistedCallDispatched",
                                fields: [
                                    Field {
                                        name: Some(
                                            "call_hash",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 12,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "PreimageHash",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "result",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 438,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "DispatchResultWithPostInfo",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 2,
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [
                    "The `Event` enum of this pallet",
                ],
            },
        },
        PortableType {
            id: 438,
            ty: Type {
                path: Path {
                    segments: [
                        "Result",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "T",
                        ty: Some(
                            UntrackedSymbol {
                                id: 439,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ),
                    },
                    TypeParameter {
                        name: "E",
                        ty: Some(
                            UntrackedSymbol {
                                id: 441,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ),
                    },
                ],
                type_def: Variant(
                    TypeDefVariant {
                        variants: [
                            Variant {
                                name: "Ok",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 439,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: None,
                                        docs: [],
                                    },
                                ],
                                index: 0,
                                docs: [],
                            },
                            Variant {
                                name: "Err",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 441,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: None,
                                        docs: [],
                                    },
                                ],
                                index: 1,
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 439,
            ty: Type {
                path: Path {
                    segments: [
                        "frame_support",
                        "dispatch",
                        "PostDispatchInfo",
                    ],
                },
                type_params: [],
                type_def: Composite(
                    TypeDefComposite {
                        fields: [
                            Field {
                                name: Some(
                                    "actual_weight",
                                ),
                                ty: UntrackedSymbol {
                                    id: 440,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "Option<Weight>",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "pays_fee",
                                ),
                                ty: UntrackedSymbol {
                                    id: 24,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "Pays",
                                ),
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 440,
            ty: Type {
                path: Path {
                    segments: [
                        "Option",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "T",
                        ty: Some(
                            UntrackedSymbol {
                                id: 9,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ),
                    },
                ],
                type_def: Variant(
                    TypeDefVariant {
                        variants: [
                            Variant {
                                name: "None",
                                fields: [],
                                index: 0,
                                docs: [],
                            },
                            Variant {
                                name: "Some",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 9,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: None,
                                        docs: [],
                                    },
                                ],
                                index: 1,
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 441,
            ty: Type {
                path: Path {
                    segments: [
                        "sp_runtime",
                        "DispatchErrorWithPostInfo",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "Info",
                        ty: Some(
                            UntrackedSymbol {
                                id: 439,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ),
                    },
                ],
                type_def: Composite(
                    TypeDefComposite {
                        fields: [
                            Field {
                                name: Some(
                                    "post_info",
                                ),
                                ty: UntrackedSymbol {
                                    id: 439,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "Info",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "error",
                                ),
                                ty: UntrackedSymbol {
                                    id: 25,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "DispatchError",
                                ),
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 442,
            ty: Type {
                path: Path {
                    segments: [
                        "polkadot_runtime_common",
                        "claims",
                        "pallet",
                        "Event",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "T",
                        ty: None,
                    },
                ],
                type_def: Variant(
                    TypeDefVariant {
                        variants: [
                            Variant {
                                name: "Claimed",
                                fields: [
                                    Field {
                                        name: Some(
                                            "who",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 0,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "T::AccountId",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "ethereum_address",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 173,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "EthereumAddress",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "amount",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 6,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "BalanceOf<T>",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 0,
                                docs: [
                                    "Someone claimed some DOTs.",
                                ],
                            },
                        ],
                    },
                ),
                docs: [
                    "The `Event` enum of this pallet",
                ],
            },
        },
        PortableType {
            id: 443,
            ty: Type {
                path: Path {
                    segments: [
                        "pallet_vesting",
                        "pallet",
                        "Event",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "T",
                        ty: None,
                    },
                ],
                type_def: Variant(
                    TypeDefVariant {
                        variants: [
                            Variant {
                                name: "VestingUpdated",
                                fields: [
                                    Field {
                                        name: Some(
                                            "account",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 0,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "T::AccountId",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "unvested",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 6,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "BalanceOf<T>",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 0,
                                docs: [
                                    "The amount vested has been updated. This could indicate a change in funds available.",
                                    "The balance given is the amount which is left unvested (and thus locked).",
                                ],
                            },
                            Variant {
                                name: "VestingCompleted",
                                fields: [
                                    Field {
                                        name: Some(
                                            "account",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 0,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "T::AccountId",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 1,
                                docs: [
                                    "An \\[account\\] has become fully vested.",
                                ],
                            },
                        ],
                    },
                ),
                docs: [
                    "The `Event` enum of this pallet",
                ],
            },
        },
        PortableType {
            id: 444,
            ty: Type {
                path: Path {
                    segments: [
                        "pallet_utility",
                        "pallet",
                        "Event",
                    ],
                },
                type_params: [],
                type_def: Variant(
                    TypeDefVariant {
                        variants: [
                            Variant {
                                name: "BatchInterrupted",
                                fields: [
                                    Field {
                                        name: Some(
                                            "index",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 4,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "u32",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "error",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 25,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "DispatchError",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 0,
                                docs: [
                                    "Batch of dispatches did not complete fully. Index of first failing dispatch given, as",
                                    "well as the error.",
                                ],
                            },
                            Variant {
                                name: "BatchCompleted",
                                fields: [],
                                index: 1,
                                docs: [
                                    "Batch of dispatches completed fully with no error.",
                                ],
                            },
                            Variant {
                                name: "BatchCompletedWithErrors",
                                fields: [],
                                index: 2,
                                docs: [
                                    "Batch of dispatches completed but has errors.",
                                ],
                            },
                            Variant {
                                name: "ItemCompleted",
                                fields: [],
                                index: 3,
                                docs: [
                                    "A single item within a Batch of dispatches has completed with no error.",
                                ],
                            },
                            Variant {
                                name: "ItemFailed",
                                fields: [
                                    Field {
                                        name: Some(
                                            "error",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 25,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "DispatchError",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 4,
                                docs: [
                                    "A single item within a Batch of dispatches has completed with error.",
                                ],
                            },
                            Variant {
                                name: "DispatchedAs",
                                fields: [
                                    Field {
                                        name: Some(
                                            "result",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 33,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "DispatchResult",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 5,
                                docs: [
                                    "A call was dispatched.",
                                ],
                            },
                        ],
                    },
                ),
                docs: [
                    "The `Event` enum of this pallet",
                ],
            },
        },
        PortableType {
            id: 445,
            ty: Type {
                path: Path {
                    segments: [
                        "pallet_identity",
                        "pallet",
                        "Event",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "T",
                        ty: None,
                    },
                ],
                type_def: Variant(
                    TypeDefVariant {
                        variants: [
                            Variant {
                                name: "IdentitySet",
                                fields: [
                                    Field {
                                        name: Some(
                                            "who",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 0,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "T::AccountId",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 0,
                                docs: [
                                    "A name was set or reset (which will remove all judgements).",
                                ],
                            },
                            Variant {
                                name: "IdentityCleared",
                                fields: [
                                    Field {
                                        name: Some(
                                            "who",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 0,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "T::AccountId",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "deposit",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 6,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "BalanceOf<T>",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 1,
                                docs: [
                                    "A name was cleared, and the given balance returned.",
                                ],
                            },
                            Variant {
                                name: "IdentityKilled",
                                fields: [
                                    Field {
                                        name: Some(
                                            "who",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 0,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "T::AccountId",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "deposit",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 6,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "BalanceOf<T>",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 2,
                                docs: [
                                    "A name was removed and the given balance slashed.",
                                ],
                            },
                            Variant {
                                name: "JudgementRequested",
                                fields: [
                                    Field {
                                        name: Some(
                                            "who",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 0,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "T::AccountId",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "registrar_index",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 4,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "RegistrarIndex",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 3,
                                docs: [
                                    "A judgement was asked from a registrar.",
                                ],
                            },
                            Variant {
                                name: "JudgementUnrequested",
                                fields: [
                                    Field {
                                        name: Some(
                                            "who",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 0,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "T::AccountId",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "registrar_index",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 4,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "RegistrarIndex",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 4,
                                docs: [
                                    "A judgement request was retracted.",
                                ],
                            },
                            Variant {
                                name: "JudgementGiven",
                                fields: [
                                    Field {
                                        name: Some(
                                            "target",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 0,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "T::AccountId",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "registrar_index",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 4,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "RegistrarIndex",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 5,
                                docs: [
                                    "A judgement was given by a registrar.",
                                ],
                            },
                            Variant {
                                name: "RegistrarAdded",
                                fields: [
                                    Field {
                                        name: Some(
                                            "registrar_index",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 4,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "RegistrarIndex",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 6,
                                docs: [
                                    "A registrar was added.",
                                ],
                            },
                            Variant {
                                name: "SubIdentityAdded",
                                fields: [
                                    Field {
                                        name: Some(
                                            "sub",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 0,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "T::AccountId",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "main",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 0,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "T::AccountId",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "deposit",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 6,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "BalanceOf<T>",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 7,
                                docs: [
                                    "A sub-identity was added to an identity and the deposit paid.",
                                ],
                            },
                            Variant {
                                name: "SubIdentityRemoved",
                                fields: [
                                    Field {
                                        name: Some(
                                            "sub",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 0,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "T::AccountId",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "main",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 0,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "T::AccountId",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "deposit",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 6,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "BalanceOf<T>",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 8,
                                docs: [
                                    "A sub-identity was removed from an identity and the deposit freed.",
                                ],
                            },
                            Variant {
                                name: "SubIdentityRevoked",
                                fields: [
                                    Field {
                                        name: Some(
                                            "sub",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 0,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "T::AccountId",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "main",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 0,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "T::AccountId",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "deposit",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 6,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "BalanceOf<T>",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 9,
                                docs: [
                                    "A sub-identity was cleared, and the given deposit repatriated from the",
                                    "main identity account to the sub-identity account.",
                                ],
                            },
                        ],
                    },
                ),
                docs: [
                    "The `Event` enum of this pallet",
                ],
            },
        },
        PortableType {
            id: 446,
            ty: Type {
                path: Path {
                    segments: [
                        "pallet_proxy",
                        "pallet",
                        "Event",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "T",
                        ty: None,
                    },
                ],
                type_def: Variant(
                    TypeDefVariant {
                        variants: [
                            Variant {
                                name: "ProxyExecuted",
                                fields: [
                                    Field {
                                        name: Some(
                                            "result",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 33,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "DispatchResult",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 0,
                                docs: [
                                    "A proxy was executed correctly, with the given.",
                                ],
                            },
                            Variant {
                                name: "PureCreated",
                                fields: [
                                    Field {
                                        name: Some(
                                            "pure",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 0,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "T::AccountId",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "who",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 0,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "T::AccountId",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "proxy_type",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 225,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "T::ProxyType",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "disambiguation_index",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 77,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "u16",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 1,
                                docs: [
                                    "A pure account has been created by new proxy with given",
                                    "disambiguation index and proxy type.",
                                ],
                            },
                            Variant {
                                name: "Announced",
                                fields: [
                                    Field {
                                        name: Some(
                                            "real",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 0,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "T::AccountId",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "proxy",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 0,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "T::AccountId",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "call_hash",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 12,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "CallHashOf<T>",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 2,
                                docs: [
                                    "An announcement was placed to make a call in the future.",
                                ],
                            },
                            Variant {
                                name: "ProxyAdded",
                                fields: [
                                    Field {
                                        name: Some(
                                            "delegator",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 0,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "T::AccountId",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "delegatee",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 0,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "T::AccountId",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "proxy_type",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 225,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "T::ProxyType",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "delay",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 4,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "T::BlockNumber",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 3,
                                docs: [
                                    "A proxy was added.",
                                ],
                            },
                            Variant {
                                name: "ProxyRemoved",
                                fields: [
                                    Field {
                                        name: Some(
                                            "delegator",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 0,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "T::AccountId",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "delegatee",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 0,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "T::AccountId",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "proxy_type",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 225,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "T::ProxyType",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "delay",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 4,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "T::BlockNumber",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 4,
                                docs: [
                                    "A proxy was removed.",
                                ],
                            },
                        ],
                    },
                ),
                docs: [
                    "The `Event` enum of this pallet",
                ],
            },
        },
        PortableType {
            id: 447,
            ty: Type {
                path: Path {
                    segments: [
                        "pallet_multisig",
                        "pallet",
                        "Event",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "T",
                        ty: None,
                    },
                ],
                type_def: Variant(
                    TypeDefVariant {
                        variants: [
                            Variant {
                                name: "NewMultisig",
                                fields: [
                                    Field {
                                        name: Some(
                                            "approving",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 0,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "T::AccountId",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "multisig",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 0,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "T::AccountId",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "call_hash",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 1,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "CallHash",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 0,
                                docs: [
                                    "A new multisig operation has begun.",
                                ],
                            },
                            Variant {
                                name: "MultisigApproval",
                                fields: [
                                    Field {
                                        name: Some(
                                            "approving",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 0,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "T::AccountId",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "timepoint",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 228,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "Timepoint<T::BlockNumber>",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "multisig",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 0,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "T::AccountId",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "call_hash",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 1,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "CallHash",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 1,
                                docs: [
                                    "A multisig operation has been approved by someone.",
                                ],
                            },
                            Variant {
                                name: "MultisigExecuted",
                                fields: [
                                    Field {
                                        name: Some(
                                            "approving",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 0,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "T::AccountId",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "timepoint",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 228,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "Timepoint<T::BlockNumber>",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "multisig",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 0,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "T::AccountId",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "call_hash",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 1,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "CallHash",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "result",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 33,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "DispatchResult",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 2,
                                docs: [
                                    "A multisig operation has been executed.",
                                ],
                            },
                            Variant {
                                name: "MultisigCancelled",
                                fields: [
                                    Field {
                                        name: Some(
                                            "cancelling",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 0,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "T::AccountId",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "timepoint",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 228,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "Timepoint<T::BlockNumber>",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "multisig",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 0,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "T::AccountId",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "call_hash",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 1,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "CallHash",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 3,
                                docs: [
                                    "A multisig operation has been cancelled.",
                                ],
                            },
                        ],
                    },
                ),
                docs: [
                    "The `Event` enum of this pallet",
                ],
            },
        },
        PortableType {
            id: 448,
            ty: Type {
                path: Path {
                    segments: [
                        "pallet_bounties",
                        "pallet",
                        "Event",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "T",
                        ty: None,
                    },
                    TypeParameter {
                        name: "I",
                        ty: None,
                    },
                ],
                type_def: Variant(
                    TypeDefVariant {
                        variants: [
                            Variant {
                                name: "BountyProposed",
                                fields: [
                                    Field {
                                        name: Some(
                                            "index",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 4,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "BountyIndex",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 0,
                                docs: [
                                    "New bounty proposal.",
                                ],
                            },
                            Variant {
                                name: "BountyRejected",
                                fields: [
                                    Field {
                                        name: Some(
                                            "index",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 4,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "BountyIndex",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "bond",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 6,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "BalanceOf<T, I>",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 1,
                                docs: [
                                    "A bounty proposal was rejected; funds were slashed.",
                                ],
                            },
                            Variant {
                                name: "BountyBecameActive",
                                fields: [
                                    Field {
                                        name: Some(
                                            "index",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 4,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "BountyIndex",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 2,
                                docs: [
                                    "A bounty proposal is funded and became active.",
                                ],
                            },
                            Variant {
                                name: "BountyAwarded",
                                fields: [
                                    Field {
                                        name: Some(
                                            "index",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 4,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "BountyIndex",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "beneficiary",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 0,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "T::AccountId",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 3,
                                docs: [
                                    "A bounty is awarded to a beneficiary.",
                                ],
                            },
                            Variant {
                                name: "BountyClaimed",
                                fields: [
                                    Field {
                                        name: Some(
                                            "index",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 4,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "BountyIndex",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "payout",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 6,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "BalanceOf<T, I>",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "beneficiary",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 0,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "T::AccountId",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 4,
                                docs: [
                                    "A bounty is claimed by beneficiary.",
                                ],
                            },
                            Variant {
                                name: "BountyCanceled",
                                fields: [
                                    Field {
                                        name: Some(
                                            "index",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 4,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "BountyIndex",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 5,
                                docs: [
                                    "A bounty is cancelled.",
                                ],
                            },
                            Variant {
                                name: "BountyExtended",
                                fields: [
                                    Field {
                                        name: Some(
                                            "index",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 4,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "BountyIndex",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 6,
                                docs: [
                                    "A bounty expiry is extended.",
                                ],
                            },
                        ],
                    },
                ),
                docs: [
                    "The `Event` enum of this pallet",
                ],
            },
        },
        PortableType {
            id: 449,
            ty: Type {
                path: Path {
                    segments: [
                        "pallet_child_bounties",
                        "pallet",
                        "Event",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "T",
                        ty: None,
                    },
                ],
                type_def: Variant(
                    TypeDefVariant {
                        variants: [
                            Variant {
                                name: "Added",
                                fields: [
                                    Field {
                                        name: Some(
                                            "index",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 4,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "BountyIndex",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "child_index",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 4,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "BountyIndex",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 0,
                                docs: [
                                    "A child-bounty is added.",
                                ],
                            },
                            Variant {
                                name: "Awarded",
                                fields: [
                                    Field {
                                        name: Some(
                                            "index",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 4,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "BountyIndex",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "child_index",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 4,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "BountyIndex",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "beneficiary",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 0,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "T::AccountId",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 1,
                                docs: [
                                    "A child-bounty is awarded to a beneficiary.",
                                ],
                            },
                            Variant {
                                name: "Claimed",
                                fields: [
                                    Field {
                                        name: Some(
                                            "index",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 4,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "BountyIndex",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "child_index",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 4,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "BountyIndex",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "payout",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 6,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "BalanceOf<T>",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "beneficiary",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 0,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "T::AccountId",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 2,
                                docs: [
                                    "A child-bounty is claimed by beneficiary.",
                                ],
                            },
                            Variant {
                                name: "Canceled",
                                fields: [
                                    Field {
                                        name: Some(
                                            "index",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 4,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "BountyIndex",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "child_index",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 4,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "BountyIndex",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 3,
                                docs: [
                                    "A child-bounty is cancelled.",
                                ],
                            },
                        ],
                    },
                ),
                docs: [
                    "The `Event` enum of this pallet",
                ],
            },
        },
        PortableType {
            id: 450,
            ty: Type {
                path: Path {
                    segments: [
                        "pallet_tips",
                        "pallet",
                        "Event",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "T",
                        ty: None,
                    },
                    TypeParameter {
                        name: "I",
                        ty: None,
                    },
                ],
                type_def: Variant(
                    TypeDefVariant {
                        variants: [
                            Variant {
                                name: "NewTip",
                                fields: [
                                    Field {
                                        name: Some(
                                            "tip_hash",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 12,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "T::Hash",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 0,
                                docs: [
                                    "A new tip suggestion has been opened.",
                                ],
                            },
                            Variant {
                                name: "TipClosing",
                                fields: [
                                    Field {
                                        name: Some(
                                            "tip_hash",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 12,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "T::Hash",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 1,
                                docs: [
                                    "A tip suggestion has reached threshold and is closing.",
                                ],
                            },
                            Variant {
                                name: "TipClosed",
                                fields: [
                                    Field {
                                        name: Some(
                                            "tip_hash",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 12,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "T::Hash",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "who",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 0,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "T::AccountId",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "payout",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 6,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "BalanceOf<T, I>",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 2,
                                docs: [
                                    "A tip suggestion has been closed.",
                                ],
                            },
                            Variant {
                                name: "TipRetracted",
                                fields: [
                                    Field {
                                        name: Some(
                                            "tip_hash",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 12,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "T::Hash",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 3,
                                docs: [
                                    "A tip suggestion has been retracted.",
                                ],
                            },
                            Variant {
                                name: "TipSlashed",
                                fields: [
                                    Field {
                                        name: Some(
                                            "tip_hash",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 12,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "T::Hash",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "finder",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 0,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "T::AccountId",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "deposit",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 6,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "BalanceOf<T, I>",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 4,
                                docs: [
                                    "A tip suggestion has been slashed.",
                                ],
                            },
                        ],
                    },
                ),
                docs: [
                    "The `Event` enum of this pallet",
                ],
            },
        },
        PortableType {
            id: 451,
            ty: Type {
                path: Path {
                    segments: [
                        "pallet_election_provider_multi_phase",
                        "pallet",
                        "Event",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "T",
                        ty: None,
                    },
                ],
                type_def: Variant(
                    TypeDefVariant {
                        variants: [
                            Variant {
                                name: "SolutionStored",
                                fields: [
                                    Field {
                                        name: Some(
                                            "compute",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 452,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "ElectionCompute",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "origin",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 140,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "Option<T::AccountId>",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "prev_ejected",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 44,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "bool",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 0,
                                docs: [
                                    "A solution was stored with the given compute.",
                                    "",
                                    "The `origin` indicates the origin of the solution. If `origin` is `Some(AccountId)`,",
                                    "the stored solution was submited in the signed phase by a miner with the `AccountId`.",
                                    "Otherwise, the solution was stored either during the unsigned phase or by",
                                    "`T::ForceOrigin`. The `bool` is `true` when a previous solution was ejected to make",
                                    "room for this one.",
                                ],
                            },
                            Variant {
                                name: "ElectionFinalized",
                                fields: [
                                    Field {
                                        name: Some(
                                            "compute",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 452,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "ElectionCompute",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "score",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 285,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "ElectionScore",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 1,
                                docs: [
                                    "The election has been finalized, with the given computation and score.",
                                ],
                            },
                            Variant {
                                name: "ElectionFailed",
                                fields: [],
                                index: 2,
                                docs: [
                                    "An election failed.",
                                    "",
                                    "Not much can be said about which computes failed in the process.",
                                ],
                            },
                            Variant {
                                name: "Rewarded",
                                fields: [
                                    Field {
                                        name: Some(
                                            "account",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 0,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "<T as frame_system::Config>::AccountId",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "value",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 6,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "BalanceOf<T>",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 3,
                                docs: [
                                    "An account has been rewarded for their signed submission being finalized.",
                                ],
                            },
                            Variant {
                                name: "Slashed",
                                fields: [
                                    Field {
                                        name: Some(
                                            "account",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 0,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "<T as frame_system::Config>::AccountId",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "value",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 6,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "BalanceOf<T>",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 4,
                                docs: [
                                    "An account has been slashed for submitting an invalid signed submission.",
                                ],
                            },
                            Variant {
                                name: "PhaseTransitioned",
                                fields: [
                                    Field {
                                        name: Some(
                                            "from",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 453,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "Phase<T::BlockNumber>",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "to",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 453,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "Phase<T::BlockNumber>",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "round",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 4,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "u32",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 5,
                                docs: [
                                    "There was a phase transition in a given round.",
                                ],
                            },
                        ],
                    },
                ),
                docs: [
                    "The `Event` enum of this pallet",
                ],
            },
        },
        PortableType {
            id: 452,
            ty: Type {
                path: Path {
                    segments: [
                        "pallet_election_provider_multi_phase",
                        "ElectionCompute",
                    ],
                },
                type_params: [],
                type_def: Variant(
                    TypeDefVariant {
                        variants: [
                            Variant {
                                name: "OnChain",
                                fields: [],
                                index: 0,
                                docs: [],
                            },
                            Variant {
                                name: "Signed",
                                fields: [],
                                index: 1,
                                docs: [],
                            },
                            Variant {
                                name: "Unsigned",
                                fields: [],
                                index: 2,
                                docs: [],
                            },
                            Variant {
                                name: "Fallback",
                                fields: [],
                                index: 3,
                                docs: [],
                            },
                            Variant {
                                name: "Emergency",
                                fields: [],
                                index: 4,
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 453,
            ty: Type {
                path: Path {
                    segments: [
                        "pallet_election_provider_multi_phase",
                        "Phase",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "Bn",
                        ty: Some(
                            UntrackedSymbol {
                                id: 4,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ),
                    },
                ],
                type_def: Variant(
                    TypeDefVariant {
                        variants: [
                            Variant {
                                name: "Off",
                                fields: [],
                                index: 0,
                                docs: [],
                            },
                            Variant {
                                name: "Signed",
                                fields: [],
                                index: 1,
                                docs: [],
                            },
                            Variant {
                                name: "Unsigned",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 454,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "(bool, Bn)",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 2,
                                docs: [],
                            },
                            Variant {
                                name: "Emergency",
                                fields: [],
                                index: 3,
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 454,
            ty: Type {
                path: Path {
                    segments: [],
                },
                type_params: [],
                type_def: Tuple(
                    TypeDefTuple {
                        fields: [
                            UntrackedSymbol {
                                id: 44,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                            UntrackedSymbol {
                                id: 4,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 455,
            ty: Type {
                path: Path {
                    segments: [
                        "pallet_bags_list",
                        "pallet",
                        "Event",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "T",
                        ty: None,
                    },
                    TypeParameter {
                        name: "I",
                        ty: None,
                    },
                ],
                type_def: Variant(
                    TypeDefVariant {
                        variants: [
                            Variant {
                                name: "Rebagged",
                                fields: [
                                    Field {
                                        name: Some(
                                            "who",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 0,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "T::AccountId",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "from",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 11,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "T::Score",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "to",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 11,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "T::Score",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 0,
                                docs: [
                                    "Moved an account from one bag to another.",
                                ],
                            },
                            Variant {
                                name: "ScoreUpdated",
                                fields: [
                                    Field {
                                        name: Some(
                                            "who",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 0,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "T::AccountId",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "new_score",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 11,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "T::Score",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 1,
                                docs: [
                                    "Updated the score of some account to the given amount.",
                                ],
                            },
                        ],
                    },
                ),
                docs: [
                    "The `Event` enum of this pallet",
                ],
            },
        },
        PortableType {
            id: 456,
            ty: Type {
                path: Path {
                    segments: [
                        "pallet_nomination_pools",
                        "pallet",
                        "Event",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "T",
                        ty: None,
                    },
                ],
                type_def: Variant(
                    TypeDefVariant {
                        variants: [
                            Variant {
                                name: "Created",
                                fields: [
                                    Field {
                                        name: Some(
                                            "depositor",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 0,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "T::AccountId",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "pool_id",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 4,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "PoolId",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 0,
                                docs: [
                                    "A pool has been created.",
                                ],
                            },
                            Variant {
                                name: "Bonded",
                                fields: [
                                    Field {
                                        name: Some(
                                            "member",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 0,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "T::AccountId",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "pool_id",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 4,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "PoolId",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "bonded",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 6,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "BalanceOf<T>",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "joined",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 44,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "bool",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 1,
                                docs: [
                                    "A member has became bonded in a pool.",
                                ],
                            },
                            Variant {
                                name: "PaidOut",
                                fields: [
                                    Field {
                                        name: Some(
                                            "member",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 0,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "T::AccountId",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "pool_id",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 4,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "PoolId",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "payout",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 6,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "BalanceOf<T>",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 2,
                                docs: [
                                    "A payout has been made to a member.",
                                ],
                            },
                            Variant {
                                name: "Unbonded",
                                fields: [
                                    Field {
                                        name: Some(
                                            "member",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 0,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "T::AccountId",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "pool_id",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 4,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "PoolId",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "balance",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 6,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "BalanceOf<T>",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "points",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 6,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "BalanceOf<T>",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "era",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 4,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "EraIndex",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 3,
                                docs: [
                                    "A member has unbonded from their pool.",
                                    "",
                                    "- `balance` is the corresponding balance of the number of points that has been",
                                    "  requested to be unbonded (the argument of the `unbond` transaction) from the bonded",
                                    "  pool.",
                                    "- `points` is the number of points that are issued as a result of `balance` being",
                                    "dissolved into the corresponding unbonding pool.",
                                    "- `era` is the era in which the balance will be unbonded.",
                                    "In the absence of slashing, these values will match. In the presence of slashing, the",
                                    "number of points that are issued in the unbonding pool will be less than the amount",
                                    "requested to be unbonded.",
                                ],
                            },
                            Variant {
                                name: "Withdrawn",
                                fields: [
                                    Field {
                                        name: Some(
                                            "member",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 0,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "T::AccountId",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "pool_id",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 4,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "PoolId",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "balance",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 6,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "BalanceOf<T>",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "points",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 6,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "BalanceOf<T>",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 4,
                                docs: [
                                    "A member has withdrawn from their pool.",
                                    "",
                                    "The given number of `points` have been dissolved in return of `balance`.",
                                    "",
                                    "Similar to `Unbonded` event, in the absence of slashing, the ratio of point to balance",
                                    "will be 1.",
                                ],
                            },
                            Variant {
                                name: "Destroyed",
                                fields: [
                                    Field {
                                        name: Some(
                                            "pool_id",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 4,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "PoolId",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 5,
                                docs: [
                                    "A pool has been destroyed.",
                                ],
                            },
                            Variant {
                                name: "StateChanged",
                                fields: [
                                    Field {
                                        name: Some(
                                            "pool_id",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 4,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "PoolId",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "new_state",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 294,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "PoolState",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 6,
                                docs: [
                                    "The state of a pool has changed",
                                ],
                            },
                            Variant {
                                name: "MemberRemoved",
                                fields: [
                                    Field {
                                        name: Some(
                                            "pool_id",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 4,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "PoolId",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "member",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 0,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "T::AccountId",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 7,
                                docs: [
                                    "A member has been removed from a pool.",
                                    "",
                                    "The removal can be voluntary (withdrawn all unbonded funds) or involuntary (kicked).",
                                ],
                            },
                            Variant {
                                name: "RolesUpdated",
                                fields: [
                                    Field {
                                        name: Some(
                                            "root",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 140,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "Option<T::AccountId>",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "bouncer",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 140,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "Option<T::AccountId>",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "nominator",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 140,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "Option<T::AccountId>",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 8,
                                docs: [
                                    "The roles of a pool have been updated to the given new roles. Note that the depositor",
                                    "can never change.",
                                ],
                            },
                            Variant {
                                name: "PoolSlashed",
                                fields: [
                                    Field {
                                        name: Some(
                                            "pool_id",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 4,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "PoolId",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "balance",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 6,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "BalanceOf<T>",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 9,
                                docs: [
                                    "The active balance of pool `pool_id` has been slashed to `balance`.",
                                ],
                            },
                            Variant {
                                name: "UnbondingPoolSlashed",
                                fields: [
                                    Field {
                                        name: Some(
                                            "pool_id",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 4,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "PoolId",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "era",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 4,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "EraIndex",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "balance",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 6,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "BalanceOf<T>",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 10,
                                docs: [
                                    "The unbond pool at `era` of pool `pool_id` has been slashed to `balance`.",
                                ],
                            },
                            Variant {
                                name: "PoolCommissionUpdated",
                                fields: [
                                    Field {
                                        name: Some(
                                            "pool_id",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 4,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "PoolId",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "current",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 300,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "Option<(Perbill, T::AccountId)>",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 11,
                                docs: [
                                    "A pool's commission setting has been changed.",
                                ],
                            },
                            Variant {
                                name: "PoolMaxCommissionUpdated",
                                fields: [
                                    Field {
                                        name: Some(
                                            "pool_id",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 4,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "PoolId",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "max_commission",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 41,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "Perbill",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 12,
                                docs: [
                                    "A pool's maximum commission setting has been changed.",
                                ],
                            },
                            Variant {
                                name: "PoolCommissionChangeRateUpdated",
                                fields: [
                                    Field {
                                        name: Some(
                                            "pool_id",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 4,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "PoolId",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "change_rate",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 302,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "CommissionChangeRate<T::BlockNumber>",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 13,
                                docs: [
                                    "A pool's commission `change_rate` has been changed.",
                                ],
                            },
                            Variant {
                                name: "PoolCommissionClaimed",
                                fields: [
                                    Field {
                                        name: Some(
                                            "pool_id",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 4,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "PoolId",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "commission",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 6,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "BalanceOf<T>",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 14,
                                docs: [
                                    "Pool commission has been claimed.",
                                ],
                            },
                        ],
                    },
                ),
                docs: [
                    "Events of this pallet.",
                ],
            },
        },
        PortableType {
            id: 457,
            ty: Type {
                path: Path {
                    segments: [
                        "pallet_fast_unstake",
                        "pallet",
                        "Event",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "T",
                        ty: None,
                    },
                ],
                type_def: Variant(
                    TypeDefVariant {
                        variants: [
                            Variant {
                                name: "Unstaked",
                                fields: [
                                    Field {
                                        name: Some(
                                            "stash",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 0,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "T::AccountId",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "result",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 33,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "DispatchResult",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 0,
                                docs: [
                                    "A staker was unstaked.",
                                ],
                            },
                            Variant {
                                name: "Slashed",
                                fields: [
                                    Field {
                                        name: Some(
                                            "stash",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 0,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "T::AccountId",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "amount",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 6,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "BalanceOf<T>",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 1,
                                docs: [
                                    "A staker was slashed for requesting fast-unstake whilst being exposed.",
                                ],
                            },
                            Variant {
                                name: "BatchChecked",
                                fields: [
                                    Field {
                                        name: Some(
                                            "eras",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 109,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "Vec<EraIndex>",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 2,
                                docs: [
                                    "A batch was partially checked for the given eras, but the process did not finish.",
                                ],
                            },
                            Variant {
                                name: "BatchFinished",
                                fields: [
                                    Field {
                                        name: Some(
                                            "size",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 4,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "u32",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 3,
                                docs: [
                                    "A batch of a given size was terminated.",
                                    "",
                                    "This is always follows by a number of `Unstaked` or `Slashed` events, marking the end",
                                    "of the batch. A new batch will be created upon next block.",
                                ],
                            },
                            Variant {
                                name: "InternalError",
                                fields: [],
                                index: 4,
                                docs: [
                                    "An internal error happened. Operations will be paused now.",
                                ],
                            },
                        ],
                    },
                ),
                docs: [
                    "The `Event` enum of this pallet",
                ],
            },
        },
        PortableType {
            id: 458,
            ty: Type {
                path: Path {
                    segments: [
                        "polkadot_runtime_parachains",
                        "inclusion",
                        "pallet",
                        "Event",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "T",
                        ty: None,
                    },
                ],
                type_def: Variant(
                    TypeDefVariant {
                        variants: [
                            Variant {
                                name: "CandidateBacked",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 459,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "CandidateReceipt<T::Hash>",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 336,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "HeadData",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 460,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "CoreIndex",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 461,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "GroupIndex",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 0,
                                docs: [
                                    "A candidate was backed. `[candidate, head_data]`",
                                ],
                            },
                            Variant {
                                name: "CandidateIncluded",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 459,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "CandidateReceipt<T::Hash>",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 336,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "HeadData",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 460,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "CoreIndex",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 461,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "GroupIndex",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 1,
                                docs: [
                                    "A candidate was included. `[candidate, head_data]`",
                                ],
                            },
                            Variant {
                                name: "CandidateTimedOut",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 459,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "CandidateReceipt<T::Hash>",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 336,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "HeadData",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 460,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "CoreIndex",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 2,
                                docs: [
                                    "A candidate timed out. `[candidate, head_data]`",
                                ],
                            },
                            Variant {
                                name: "UpwardMessagesReceived",
                                fields: [
                                    Field {
                                        name: Some(
                                            "from",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 158,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "ParaId",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "count",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 4,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "u32",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 3,
                                docs: [
                                    "Some upward messages have been received and will be processed.",
                                ],
                            },
                        ],
                    },
                ),
                docs: [
                    "The `Event` enum of this pallet",
                ],
            },
        },
        PortableType {
            id: 459,
            ty: Type {
                path: Path {
                    segments: [
                        "polkadot_primitives",
                        "v5",
                        "CandidateReceipt",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "H",
                        ty: Some(
                            UntrackedSymbol {
                                id: 12,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ),
                    },
                ],
                type_def: Composite(
                    TypeDefComposite {
                        fields: [
                            Field {
                                name: Some(
                                    "descriptor",
                                ),
                                ty: UntrackedSymbol {
                                    id: 325,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "CandidateDescriptor<H>",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "commitments_hash",
                                ),
                                ty: UntrackedSymbol {
                                    id: 12,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "Hash",
                                ),
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 460,
            ty: Type {
                path: Path {
                    segments: [
                        "polkadot_primitives",
                        "v5",
                        "CoreIndex",
                    ],
                },
                type_params: [],
                type_def: Composite(
                    TypeDefComposite {
                        fields: [
                            Field {
                                name: None,
                                ty: UntrackedSymbol {
                                    id: 4,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "u32",
                                ),
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 461,
            ty: Type {
                path: Path {
                    segments: [
                        "polkadot_primitives",
                        "v5",
                        "GroupIndex",
                    ],
                },
                type_params: [],
                type_def: Composite(
                    TypeDefComposite {
                        fields: [
                            Field {
                                name: None,
                                ty: UntrackedSymbol {
                                    id: 4,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "u32",
                                ),
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 462,
            ty: Type {
                path: Path {
                    segments: [
                        "polkadot_runtime_parachains",
                        "paras",
                        "pallet",
                        "Event",
                    ],
                },
                type_params: [],
                type_def: Variant(
                    TypeDefVariant {
                        variants: [
                            Variant {
                                name: "CurrentCodeUpdated",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 158,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "ParaId",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 0,
                                docs: [
                                    "Current code has been updated for a Para. `para_id`",
                                ],
                            },
                            Variant {
                                name: "CurrentHeadUpdated",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 158,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "ParaId",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 1,
                                docs: [
                                    "Current head has been updated for a Para. `para_id`",
                                ],
                            },
                            Variant {
                                name: "CodeUpgradeScheduled",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 158,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "ParaId",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 2,
                                docs: [
                                    "A code upgrade has been scheduled for a Para. `para_id`",
                                ],
                            },
                            Variant {
                                name: "NewHeadNoted",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 158,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "ParaId",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 3,
                                docs: [
                                    "A new head has been noted for a Para. `para_id`",
                                ],
                            },
                            Variant {
                                name: "ActionQueued",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 158,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "ParaId",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 4,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "SessionIndex",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 4,
                                docs: [
                                    "A para has been queued to execute pending actions. `para_id`",
                                ],
                            },
                            Variant {
                                name: "PvfCheckStarted",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 328,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "ValidationCodeHash",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 158,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "ParaId",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 5,
                                docs: [
                                    "The given para either initiated or subscribed to a PVF check for the given validation",
                                    "code. `code_hash` `para_id`",
                                ],
                            },
                            Variant {
                                name: "PvfCheckAccepted",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 328,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "ValidationCodeHash",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 158,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "ParaId",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 6,
                                docs: [
                                    "The given validation code was accepted by the PVF pre-checking vote.",
                                    "`code_hash` `para_id`",
                                ],
                            },
                            Variant {
                                name: "PvfCheckRejected",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 328,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "ValidationCodeHash",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 158,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "ParaId",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 7,
                                docs: [
                                    "The given validation code was rejected by the PVF pre-checking vote.",
                                    "`code_hash` `para_id`",
                                ],
                            },
                        ],
                    },
                ),
                docs: [
                    "The `Event` enum of this pallet",
                ],
            },
        },
        PortableType {
            id: 463,
            ty: Type {
                path: Path {
                    segments: [
                        "polkadot_runtime_parachains",
                        "hrmp",
                        "pallet",
                        "Event",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "T",
                        ty: None,
                    },
                ],
                type_def: Variant(
                    TypeDefVariant {
                        variants: [
                            Variant {
                                name: "OpenChannelRequested",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 158,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "ParaId",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 158,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "ParaId",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 4,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "u32",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 4,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "u32",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 0,
                                docs: [
                                    "Open HRMP channel requested.",
                                    "`[sender, recipient, proposed_max_capacity, proposed_max_message_size]`",
                                ],
                            },
                            Variant {
                                name: "OpenChannelCanceled",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 158,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "ParaId",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 351,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "HrmpChannelId",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 1,
                                docs: [
                                    "An HRMP channel request sent by the receiver was canceled by either party.",
                                    "`[by_parachain, channel_id]`",
                                ],
                            },
                            Variant {
                                name: "OpenChannelAccepted",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 158,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "ParaId",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 158,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "ParaId",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 2,
                                docs: [
                                    "Open HRMP channel accepted. `[sender, recipient]`",
                                ],
                            },
                            Variant {
                                name: "ChannelClosed",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 158,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "ParaId",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 351,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "HrmpChannelId",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 3,
                                docs: [
                                    "HRMP channel closed. `[by_parachain, channel_id]`",
                                ],
                            },
                            Variant {
                                name: "HrmpChannelForceOpened",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 158,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "ParaId",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 158,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "ParaId",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 4,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "u32",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 4,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "u32",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 4,
                                docs: [
                                    "An HRMP channel was opened via Root origin.",
                                    "`[sender, recipient, proposed_max_capacity, proposed_max_message_size]`",
                                ],
                            },
                        ],
                    },
                ),
                docs: [
                    "The `Event` enum of this pallet",
                ],
            },
        },
        PortableType {
            id: 464,
            ty: Type {
                path: Path {
                    segments: [
                        "polkadot_runtime_parachains",
                        "disputes",
                        "pallet",
                        "Event",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "T",
                        ty: None,
                    },
                ],
                type_def: Variant(
                    TypeDefVariant {
                        variants: [
                            Variant {
                                name: "DisputeInitiated",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 341,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "CandidateHash",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 465,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "DisputeLocation",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 0,
                                docs: [
                                    "A dispute has been initiated. \\[candidate hash, dispute location\\]",
                                ],
                            },
                            Variant {
                                name: "DisputeConcluded",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 341,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "CandidateHash",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 466,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "DisputeResult",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 1,
                                docs: [
                                    "A dispute has concluded for or against a candidate.",
                                    "`\\[para id, candidate hash, dispute result\\]`",
                                ],
                            },
                            Variant {
                                name: "Revert",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 4,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "T::BlockNumber",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 2,
                                docs: [
                                    "A dispute has concluded with supermajority against a candidate.",
                                    "Block authors should no longer build on top of this head and should",
                                    "instead revert the block at the given height. This should be the",
                                    "number of the child of the last known valid block in the chain.",
                                ],
                            },
                        ],
                    },
                ),
                docs: [
                    "The `Event` enum of this pallet",
                ],
            },
        },
        PortableType {
            id: 465,
            ty: Type {
                path: Path {
                    segments: [
                        "polkadot_runtime_parachains",
                        "disputes",
                        "DisputeLocation",
                    ],
                },
                type_params: [],
                type_def: Variant(
                    TypeDefVariant {
                        variants: [
                            Variant {
                                name: "Local",
                                fields: [],
                                index: 0,
                                docs: [],
                            },
                            Variant {
                                name: "Remote",
                                fields: [],
                                index: 1,
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 466,
            ty: Type {
                path: Path {
                    segments: [
                        "polkadot_runtime_parachains",
                        "disputes",
                        "DisputeResult",
                    ],
                },
                type_params: [],
                type_def: Variant(
                    TypeDefVariant {
                        variants: [
                            Variant {
                                name: "Valid",
                                fields: [],
                                index: 0,
                                docs: [],
                            },
                            Variant {
                                name: "Invalid",
                                fields: [],
                                index: 1,
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 467,
            ty: Type {
                path: Path {
                    segments: [
                        "polkadot_runtime_common",
                        "paras_registrar",
                        "pallet",
                        "Event",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "T",
                        ty: None,
                    },
                ],
                type_def: Variant(
                    TypeDefVariant {
                        variants: [
                            Variant {
                                name: "Registered",
                                fields: [
                                    Field {
                                        name: Some(
                                            "para_id",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 158,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "ParaId",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "manager",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 0,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "T::AccountId",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 0,
                                docs: [],
                            },
                            Variant {
                                name: "Deregistered",
                                fields: [
                                    Field {
                                        name: Some(
                                            "para_id",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 158,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "ParaId",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 1,
                                docs: [],
                            },
                            Variant {
                                name: "Reserved",
                                fields: [
                                    Field {
                                        name: Some(
                                            "para_id",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 158,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "ParaId",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "who",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 0,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "T::AccountId",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 2,
                                docs: [],
                            },
                            Variant {
                                name: "Swapped",
                                fields: [
                                    Field {
                                        name: Some(
                                            "para_id",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 158,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "ParaId",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "other_id",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 158,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "ParaId",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 3,
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [
                    "The `Event` enum of this pallet",
                ],
            },
        },
        PortableType {
            id: 468,
            ty: Type {
                path: Path {
                    segments: [
                        "polkadot_runtime_common",
                        "slots",
                        "pallet",
                        "Event",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "T",
                        ty: None,
                    },
                ],
                type_def: Variant(
                    TypeDefVariant {
                        variants: [
                            Variant {
                                name: "NewLeasePeriod",
                                fields: [
                                    Field {
                                        name: Some(
                                            "lease_period",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 4,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "LeasePeriodOf<T>",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 0,
                                docs: [
                                    "A new `[lease_period]` is beginning.",
                                ],
                            },
                            Variant {
                                name: "Leased",
                                fields: [
                                    Field {
                                        name: Some(
                                            "para_id",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 158,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "ParaId",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "leaser",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 0,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "T::AccountId",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "period_begin",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 4,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "LeasePeriodOf<T>",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "period_count",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 4,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "LeasePeriodOf<T>",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "extra_reserved",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 6,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "BalanceOf<T>",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "total_amount",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 6,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "BalanceOf<T>",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 1,
                                docs: [
                                    "A para has won the right to a continuous set of lease periods as a parachain.",
                                    "First balance is any extra amount reserved on top of the para's existing deposit.",
                                    "Second balance is the total amount reserved.",
                                ],
                            },
                        ],
                    },
                ),
                docs: [
                    "The `Event` enum of this pallet",
                ],
            },
        },
        PortableType {
            id: 469,
            ty: Type {
                path: Path {
                    segments: [
                        "polkadot_runtime_common",
                        "auctions",
                        "pallet",
                        "Event",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "T",
                        ty: None,
                    },
                ],
                type_def: Variant(
                    TypeDefVariant {
                        variants: [
                            Variant {
                                name: "AuctionStarted",
                                fields: [
                                    Field {
                                        name: Some(
                                            "auction_index",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 4,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "AuctionIndex",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "lease_period",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 4,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "LeasePeriodOf<T>",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "ending",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 4,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "T::BlockNumber",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 0,
                                docs: [
                                    "An auction started. Provides its index and the block number where it will begin to",
                                    "close and the first lease period of the quadruplet that is auctioned.",
                                ],
                            },
                            Variant {
                                name: "AuctionClosed",
                                fields: [
                                    Field {
                                        name: Some(
                                            "auction_index",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 4,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "AuctionIndex",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 1,
                                docs: [
                                    "An auction ended. All funds become unreserved.",
                                ],
                            },
                            Variant {
                                name: "Reserved",
                                fields: [
                                    Field {
                                        name: Some(
                                            "bidder",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 0,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "T::AccountId",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "extra_reserved",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 6,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "BalanceOf<T>",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "total_amount",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 6,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "BalanceOf<T>",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 2,
                                docs: [
                                    "Funds were reserved for a winning bid. First balance is the extra amount reserved.",
                                    "Second is the total.",
                                ],
                            },
                            Variant {
                                name: "Unreserved",
                                fields: [
                                    Field {
                                        name: Some(
                                            "bidder",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 0,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "T::AccountId",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "amount",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 6,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "BalanceOf<T>",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 3,
                                docs: [
                                    "Funds were unreserved since bidder is no longer active. `[bidder, amount]`",
                                ],
                            },
                            Variant {
                                name: "ReserveConfiscated",
                                fields: [
                                    Field {
                                        name: Some(
                                            "para_id",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 158,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "ParaId",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "leaser",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 0,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "T::AccountId",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "amount",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 6,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "BalanceOf<T>",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 4,
                                docs: [
                                    "Someone attempted to lease the same slot twice for a parachain. The amount is held in reserve",
                                    "but no parachain slot has been leased.",
                                ],
                            },
                            Variant {
                                name: "BidAccepted",
                                fields: [
                                    Field {
                                        name: Some(
                                            "bidder",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 0,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "T::AccountId",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "para_id",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 158,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "ParaId",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "amount",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 6,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "BalanceOf<T>",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "first_slot",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 4,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "LeasePeriodOf<T>",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "last_slot",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 4,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "LeasePeriodOf<T>",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 5,
                                docs: [
                                    "A new bid has been accepted as the current winner.",
                                ],
                            },
                            Variant {
                                name: "WinningOffset",
                                fields: [
                                    Field {
                                        name: Some(
                                            "auction_index",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 4,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "AuctionIndex",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "block_number",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 4,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "T::BlockNumber",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 6,
                                docs: [
                                    "The winning offset was chosen for an auction. This will map into the `Winning` storage map.",
                                ],
                            },
                        ],
                    },
                ),
                docs: [
                    "The `Event` enum of this pallet",
                ],
            },
        },
        PortableType {
            id: 470,
            ty: Type {
                path: Path {
                    segments: [
                        "polkadot_runtime_common",
                        "crowdloan",
                        "pallet",
                        "Event",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "T",
                        ty: None,
                    },
                ],
                type_def: Variant(
                    TypeDefVariant {
                        variants: [
                            Variant {
                                name: "Created",
                                fields: [
                                    Field {
                                        name: Some(
                                            "para_id",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 158,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "ParaId",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 0,
                                docs: [
                                    "Create a new crowdloaning campaign.",
                                ],
                            },
                            Variant {
                                name: "Contributed",
                                fields: [
                                    Field {
                                        name: Some(
                                            "who",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 0,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "T::AccountId",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "fund_index",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 158,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "ParaId",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "amount",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 6,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "BalanceOf<T>",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 1,
                                docs: [
                                    "Contributed to a crowd sale.",
                                ],
                            },
                            Variant {
                                name: "Withdrew",
                                fields: [
                                    Field {
                                        name: Some(
                                            "who",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 0,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "T::AccountId",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "fund_index",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 158,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "ParaId",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "amount",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 6,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "BalanceOf<T>",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 2,
                                docs: [
                                    "Withdrew full balance of a contributor.",
                                ],
                            },
                            Variant {
                                name: "PartiallyRefunded",
                                fields: [
                                    Field {
                                        name: Some(
                                            "para_id",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 158,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "ParaId",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 3,
                                docs: [
                                    "The loans in a fund have been partially dissolved, i.e. there are some left",
                                    "over child keys that still need to be killed.",
                                ],
                            },
                            Variant {
                                name: "AllRefunded",
                                fields: [
                                    Field {
                                        name: Some(
                                            "para_id",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 158,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "ParaId",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 4,
                                docs: [
                                    "All loans in a fund have been refunded.",
                                ],
                            },
                            Variant {
                                name: "Dissolved",
                                fields: [
                                    Field {
                                        name: Some(
                                            "para_id",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 158,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "ParaId",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 5,
                                docs: [
                                    "Fund is dissolved.",
                                ],
                            },
                            Variant {
                                name: "HandleBidResult",
                                fields: [
                                    Field {
                                        name: Some(
                                            "para_id",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 158,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "ParaId",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "result",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 33,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "DispatchResult",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 6,
                                docs: [
                                    "The result of trying to submit a new bid to the Slots pallet.",
                                ],
                            },
                            Variant {
                                name: "Edited",
                                fields: [
                                    Field {
                                        name: Some(
                                            "para_id",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 158,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "ParaId",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 7,
                                docs: [
                                    "The configuration to a crowdloan has been edited.",
                                ],
                            },
                            Variant {
                                name: "MemoUpdated",
                                fields: [
                                    Field {
                                        name: Some(
                                            "who",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 0,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "T::AccountId",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "para_id",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 158,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "ParaId",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "memo",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 13,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "Vec<u8>",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 8,
                                docs: [
                                    "A memo has been updated.",
                                ],
                            },
                            Variant {
                                name: "AddedToNewRaise",
                                fields: [
                                    Field {
                                        name: Some(
                                            "para_id",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 158,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "ParaId",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 9,
                                docs: [
                                    "A parachain has been moved to `NewRaise`",
                                ],
                            },
                        ],
                    },
                ),
                docs: [
                    "The `Event` enum of this pallet",
                ],
            },
        },
        PortableType {
            id: 471,
            ty: Type {
                path: Path {
                    segments: [
                        "pallet_xcm",
                        "pallet",
                        "Event",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "T",
                        ty: None,
                    },
                ],
                type_def: Variant(
                    TypeDefVariant {
                        variants: [
                            Variant {
                                name: "Attempted",
                                fields: [
                                    Field {
                                        name: Some(
                                            "outcome",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 472,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "xcm::latest::Outcome",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 0,
                                docs: [
                                    "Execution of an XCM message was attempted.",
                                ],
                            },
                            Variant {
                                name: "Sent",
                                fields: [
                                    Field {
                                        name: Some(
                                            "origin",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 160,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "MultiLocation",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "destination",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 160,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "MultiLocation",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "message",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 398,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "Xcm<()>",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "message_id",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 1,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "XcmHash",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 1,
                                docs: [
                                    "A XCM message was sent.",
                                ],
                            },
                            Variant {
                                name: "UnexpectedResponse",
                                fields: [
                                    Field {
                                        name: Some(
                                            "origin",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 160,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "MultiLocation",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "query_id",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 11,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "QueryId",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 2,
                                docs: [
                                    "Query response received which does not match a registered query. This may be because a",
                                    "matching query was never registered, it may be because it is a duplicate response, or",
                                    "because the query timed out.",
                                ],
                            },
                            Variant {
                                name: "ResponseReady",
                                fields: [
                                    Field {
                                        name: Some(
                                            "query_id",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 11,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "QueryId",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "response",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 407,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "Response",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 3,
                                docs: [
                                    "Query response has been received and is ready for taking with `take_response`. There is",
                                    "no registered notification call.",
                                ],
                            },
                            Variant {
                                name: "Notified",
                                fields: [
                                    Field {
                                        name: Some(
                                            "query_id",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 11,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "QueryId",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "pallet_index",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 2,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "u8",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "call_index",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 2,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "u8",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 4,
                                docs: [
                                    "Query response has been received and query is removed. The registered notification has",
                                    "been dispatched and executed successfully.",
                                ],
                            },
                            Variant {
                                name: "NotifyOverweight",
                                fields: [
                                    Field {
                                        name: Some(
                                            "query_id",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 11,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "QueryId",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "pallet_index",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 2,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "u8",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "call_index",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 2,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "u8",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "actual_weight",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 9,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "Weight",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "max_budgeted_weight",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 9,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "Weight",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 5,
                                docs: [
                                    "Query response has been received and query is removed. The registered notification could",
                                    "not be dispatched because the dispatch weight is greater than the maximum weight",
                                    "originally budgeted by this runtime for the query result.",
                                ],
                            },
                            Variant {
                                name: "NotifyDispatchError",
                                fields: [
                                    Field {
                                        name: Some(
                                            "query_id",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 11,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "QueryId",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "pallet_index",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 2,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "u8",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "call_index",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 2,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "u8",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 6,
                                docs: [
                                    "Query response has been received and query is removed. There was a general error with",
                                    "dispatching the notification call.",
                                ],
                            },
                            Variant {
                                name: "NotifyDecodeFailed",
                                fields: [
                                    Field {
                                        name: Some(
                                            "query_id",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 11,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "QueryId",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "pallet_index",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 2,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "u8",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "call_index",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 2,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "u8",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 7,
                                docs: [
                                    "Query response has been received and query is removed. The dispatch was unable to be",
                                    "decoded into a `Call`; this might be due to dispatch function having a signature which",
                                    "is not `(origin, QueryId, Response)`.",
                                ],
                            },
                            Variant {
                                name: "InvalidResponder",
                                fields: [
                                    Field {
                                        name: Some(
                                            "origin",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 160,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "MultiLocation",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "query_id",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 11,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "QueryId",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "expected_location",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 417,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "Option<MultiLocation>",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 8,
                                docs: [
                                    "Expected query response has been received but the origin location of the response does",
                                    "not match that expected. The query remains registered for a later, valid, response to",
                                    "be received and acted upon.",
                                ],
                            },
                            Variant {
                                name: "InvalidResponderVersion",
                                fields: [
                                    Field {
                                        name: Some(
                                            "origin",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 160,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "MultiLocation",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "query_id",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 11,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "QueryId",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 9,
                                docs: [
                                    "Expected query response has been received but the expected origin location placed in",
                                    "storage by this runtime previously cannot be decoded. The query remains registered.",
                                    "",
                                    "This is unexpected (since a location placed in storage in a previously executing",
                                    "runtime should be readable prior to query timeout) and dangerous since the possibly",
                                    "valid response will be dropped. Manual governance intervention is probably going to be",
                                    "needed.",
                                ],
                            },
                            Variant {
                                name: "ResponseTaken",
                                fields: [
                                    Field {
                                        name: Some(
                                            "query_id",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 11,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "QueryId",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 10,
                                docs: [
                                    "Received query response has been read and removed.",
                                ],
                            },
                            Variant {
                                name: "AssetsTrapped",
                                fields: [
                                    Field {
                                        name: Some(
                                            "hash",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 12,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "H256",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "origin",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 160,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "MultiLocation",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "assets",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 423,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "VersionedMultiAssets",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 11,
                                docs: [
                                    "Some assets have been placed in an asset trap.",
                                ],
                            },
                            Variant {
                                name: "VersionChangeNotified",
                                fields: [
                                    Field {
                                        name: Some(
                                            "destination",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 160,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "MultiLocation",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "result",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 4,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "XcmVersion",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "cost",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 401,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "MultiAssets",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "message_id",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 1,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "XcmHash",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 12,
                                docs: [
                                    "An XCM version change notification message has been attempted to be sent.",
                                    "",
                                    "The cost of sending it (borne by the chain) is included.",
                                ],
                            },
                            Variant {
                                name: "SupportedVersionChanged",
                                fields: [
                                    Field {
                                        name: Some(
                                            "location",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 160,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "MultiLocation",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "version",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 4,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "XcmVersion",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 13,
                                docs: [
                                    "The supported version of a location has been changed. This might be through an",
                                    "automatic notification or a manual intervention.",
                                ],
                            },
                            Variant {
                                name: "NotifyTargetSendFail",
                                fields: [
                                    Field {
                                        name: Some(
                                            "location",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 160,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "MultiLocation",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "query_id",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 11,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "QueryId",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "error",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 410,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "XcmError",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 14,
                                docs: [
                                    "A given location which had a version change subscription was dropped owing to an error",
                                    "sending the notification to it.",
                                ],
                            },
                            Variant {
                                name: "NotifyTargetMigrationFail",
                                fields: [
                                    Field {
                                        name: Some(
                                            "location",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 370,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "VersionedMultiLocation",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "query_id",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 11,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "QueryId",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 15,
                                docs: [
                                    "A given location which had a version change subscription was dropped owing to an error",
                                    "migrating the location to our new XCM format.",
                                ],
                            },
                            Variant {
                                name: "InvalidQuerierVersion",
                                fields: [
                                    Field {
                                        name: Some(
                                            "origin",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 160,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "MultiLocation",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "query_id",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 11,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "QueryId",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 16,
                                docs: [
                                    "Expected query response has been received but the expected querier location placed in",
                                    "storage by this runtime previously cannot be decoded. The query remains registered.",
                                    "",
                                    "This is unexpected (since a location placed in storage in a previously executing",
                                    "runtime should be readable prior to query timeout) and dangerous since the possibly",
                                    "valid response will be dropped. Manual governance intervention is probably going to be",
                                    "needed.",
                                ],
                            },
                            Variant {
                                name: "InvalidQuerier",
                                fields: [
                                    Field {
                                        name: Some(
                                            "origin",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 160,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "MultiLocation",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "query_id",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 11,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "QueryId",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "expected_querier",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 160,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "MultiLocation",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "maybe_actual_querier",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 417,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "Option<MultiLocation>",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 17,
                                docs: [
                                    "Expected query response has been received but the querier location of the response does",
                                    "not match the expected. The query remains registered for a later, valid, response to",
                                    "be received and acted upon.",
                                ],
                            },
                            Variant {
                                name: "VersionNotifyStarted",
                                fields: [
                                    Field {
                                        name: Some(
                                            "destination",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 160,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "MultiLocation",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "cost",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 401,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "MultiAssets",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "message_id",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 1,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "XcmHash",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 18,
                                docs: [
                                    "A remote has requested XCM version change notification from us and we have honored it.",
                                    "A version information message is sent to them and its cost is included.",
                                ],
                            },
                            Variant {
                                name: "VersionNotifyRequested",
                                fields: [
                                    Field {
                                        name: Some(
                                            "destination",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 160,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "MultiLocation",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "cost",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 401,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "MultiAssets",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "message_id",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 1,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "XcmHash",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 19,
                                docs: [
                                    "We have requested that a remote chain send us XCM version change notifications.",
                                ],
                            },
                            Variant {
                                name: "VersionNotifyUnrequested",
                                fields: [
                                    Field {
                                        name: Some(
                                            "destination",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 160,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "MultiLocation",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "cost",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 401,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "MultiAssets",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "message_id",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 1,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "XcmHash",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 20,
                                docs: [
                                    "We have requested that a remote chain stops sending us XCM version change notifications.",
                                ],
                            },
                            Variant {
                                name: "FeesPaid",
                                fields: [
                                    Field {
                                        name: Some(
                                            "paying",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 160,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "MultiLocation",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "fees",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 401,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "MultiAssets",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 21,
                                docs: [
                                    "Fees were paid from a location for an operation (often for using `SendXcm`).",
                                ],
                            },
                            Variant {
                                name: "AssetsClaimed",
                                fields: [
                                    Field {
                                        name: Some(
                                            "hash",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 12,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "H256",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "origin",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 160,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "MultiLocation",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "assets",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 423,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "VersionedMultiAssets",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 22,
                                docs: [
                                    "Some assets have been claimed from an asset trap",
                                ],
                            },
                        ],
                    },
                ),
                docs: [
                    "The `Event` enum of this pallet",
                ],
            },
        },
        PortableType {
            id: 472,
            ty: Type {
                path: Path {
                    segments: [
                        "xcm",
                        "v3",
                        "traits",
                        "Outcome",
                    ],
                },
                type_params: [],
                type_def: Variant(
                    TypeDefVariant {
                        variants: [
                            Variant {
                                name: "Complete",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 9,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "Weight",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 0,
                                docs: [],
                            },
                            Variant {
                                name: "Incomplete",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 9,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "Weight",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 410,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "Error",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 1,
                                docs: [],
                            },
                            Variant {
                                name: "Error",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 410,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "Error",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 2,
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 473,
            ty: Type {
                path: Path {
                    segments: [
                        "pallet_message_queue",
                        "pallet",
                        "Event",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "T",
                        ty: None,
                    },
                ],
                type_def: Variant(
                    TypeDefVariant {
                        variants: [
                            Variant {
                                name: "ProcessingFailed",
                                fields: [
                                    Field {
                                        name: Some(
                                            "id",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 1,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "[u8; 32]",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "origin",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 433,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "MessageOriginOf<T>",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "error",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 474,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "ProcessMessageError",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 0,
                                docs: [
                                    "Message discarded due to an error in the `MessageProcessor` (usually a format error).",
                                ],
                            },
                            Variant {
                                name: "Processed",
                                fields: [
                                    Field {
                                        name: Some(
                                            "id",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 1,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "[u8; 32]",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "origin",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 433,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "MessageOriginOf<T>",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "weight_used",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 9,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "Weight",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "success",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 44,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "bool",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 1,
                                docs: [
                                    "Message is processed.",
                                ],
                            },
                            Variant {
                                name: "OverweightEnqueued",
                                fields: [
                                    Field {
                                        name: Some(
                                            "id",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 1,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "[u8; 32]",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "origin",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 433,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "MessageOriginOf<T>",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "page_index",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 4,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "PageIndex",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "message_index",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 4,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "T::Size",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 2,
                                docs: [
                                    "Message placed in overweight queue.",
                                ],
                            },
                            Variant {
                                name: "PageReaped",
                                fields: [
                                    Field {
                                        name: Some(
                                            "origin",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 433,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "MessageOriginOf<T>",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "index",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 4,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "PageIndex",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 3,
                                docs: [
                                    "This page was reaped.",
                                ],
                            },
                        ],
                    },
                ),
                docs: [
                    "The `Event` enum of this pallet",
                ],
            },
        },
        PortableType {
            id: 474,
            ty: Type {
                path: Path {
                    segments: [
                        "frame_support",
                        "traits",
                        "messages",
                        "ProcessMessageError",
                    ],
                },
                type_params: [],
                type_def: Variant(
                    TypeDefVariant {
                        variants: [
                            Variant {
                                name: "BadFormat",
                                fields: [],
                                index: 0,
                                docs: [],
                            },
                            Variant {
                                name: "Corrupt",
                                fields: [],
                                index: 1,
                                docs: [],
                            },
                            Variant {
                                name: "Unsupported",
                                fields: [],
                                index: 2,
                                docs: [],
                            },
                            Variant {
                                name: "Overweight",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 9,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "Weight",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 3,
                                docs: [],
                            },
                            Variant {
                                name: "Yield",
                                fields: [],
                                index: 4,
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 475,
            ty: Type {
                path: Path {
                    segments: [
                        "frame_system",
                        "Phase",
                    ],
                },
                type_params: [],
                type_def: Variant(
                    TypeDefVariant {
                        variants: [
                            Variant {
                                name: "ApplyExtrinsic",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 4,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "u32",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 0,
                                docs: [],
                            },
                            Variant {
                                name: "Finalization",
                                fields: [],
                                index: 1,
                                docs: [],
                            },
                            Variant {
                                name: "Initialization",
                                fields: [],
                                index: 2,
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 476,
            ty: Type {
                path: Path {
                    segments: [],
                },
                type_params: [],
                type_def: Sequence(
                    TypeDefSequence {
                        type_param: UntrackedSymbol {
                            id: 12,
                            marker: PhantomData<fn() -> core::any::TypeId>,
                        },
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 477,
            ty: Type {
                path: Path {
                    segments: [],
                },
                type_params: [],
                type_def: Sequence(
                    TypeDefSequence {
                        type_param: UntrackedSymbol {
                            id: 31,
                            marker: PhantomData<fn() -> core::any::TypeId>,
                        },
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 478,
            ty: Type {
                path: Path {
                    segments: [
                        "frame_system",
                        "LastRuntimeUpgradeInfo",
                    ],
                },
                type_params: [],
                type_def: Composite(
                    TypeDefComposite {
                        fields: [
                            Field {
                                name: Some(
                                    "spec_version",
                                ),
                                ty: UntrackedSymbol {
                                    id: 91,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "codec::Compact<u32>",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "spec_name",
                                ),
                                ty: UntrackedSymbol {
                                    id: 479,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "sp_runtime::RuntimeString",
                                ),
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 479,
            ty: Type {
                path: Path {
                    segments: [],
                },
                type_params: [],
                type_def: Primitive(
                    Str,
                ),
                docs: [],
            },
        },
        PortableType {
            id: 480,
            ty: Type {
                path: Path {
                    segments: [
                        "frame_system",
                        "limits",
                        "BlockWeights",
                    ],
                },
                type_params: [],
                type_def: Composite(
                    TypeDefComposite {
                        fields: [
                            Field {
                                name: Some(
                                    "base_block",
                                ),
                                ty: UntrackedSymbol {
                                    id: 9,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "Weight",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "max_block",
                                ),
                                ty: UntrackedSymbol {
                                    id: 9,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "Weight",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "per_class",
                                ),
                                ty: UntrackedSymbol {
                                    id: 481,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "PerDispatchClass<WeightsPerClass>",
                                ),
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 481,
            ty: Type {
                path: Path {
                    segments: [
                        "frame_support",
                        "dispatch",
                        "PerDispatchClass",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "T",
                        ty: Some(
                            UntrackedSymbol {
                                id: 482,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ),
                    },
                ],
                type_def: Composite(
                    TypeDefComposite {
                        fields: [
                            Field {
                                name: Some(
                                    "normal",
                                ),
                                ty: UntrackedSymbol {
                                    id: 482,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "T",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "operational",
                                ),
                                ty: UntrackedSymbol {
                                    id: 482,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "T",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "mandatory",
                                ),
                                ty: UntrackedSymbol {
                                    id: 482,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "T",
                                ),
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 482,
            ty: Type {
                path: Path {
                    segments: [
                        "frame_system",
                        "limits",
                        "WeightsPerClass",
                    ],
                },
                type_params: [],
                type_def: Composite(
                    TypeDefComposite {
                        fields: [
                            Field {
                                name: Some(
                                    "base_extrinsic",
                                ),
                                ty: UntrackedSymbol {
                                    id: 9,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "Weight",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "max_extrinsic",
                                ),
                                ty: UntrackedSymbol {
                                    id: 440,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "Option<Weight>",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "max_total",
                                ),
                                ty: UntrackedSymbol {
                                    id: 440,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "Option<Weight>",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "reserved",
                                ),
                                ty: UntrackedSymbol {
                                    id: 440,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "Option<Weight>",
                                ),
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 483,
            ty: Type {
                path: Path {
                    segments: [
                        "frame_system",
                        "limits",
                        "BlockLength",
                    ],
                },
                type_params: [],
                type_def: Composite(
                    TypeDefComposite {
                        fields: [
                            Field {
                                name: Some(
                                    "max",
                                ),
                                ty: UntrackedSymbol {
                                    id: 484,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "PerDispatchClass<u32>",
                                ),
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 484,
            ty: Type {
                path: Path {
                    segments: [
                        "frame_support",
                        "dispatch",
                        "PerDispatchClass",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "T",
                        ty: Some(
                            UntrackedSymbol {
                                id: 4,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ),
                    },
                ],
                type_def: Composite(
                    TypeDefComposite {
                        fields: [
                            Field {
                                name: Some(
                                    "normal",
                                ),
                                ty: UntrackedSymbol {
                                    id: 4,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "T",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "operational",
                                ),
                                ty: UntrackedSymbol {
                                    id: 4,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "T",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "mandatory",
                                ),
                                ty: UntrackedSymbol {
                                    id: 4,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "T",
                                ),
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 485,
            ty: Type {
                path: Path {
                    segments: [
                        "sp_weights",
                        "RuntimeDbWeight",
                    ],
                },
                type_params: [],
                type_def: Composite(
                    TypeDefComposite {
                        fields: [
                            Field {
                                name: Some(
                                    "read",
                                ),
                                ty: UntrackedSymbol {
                                    id: 11,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "u64",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "write",
                                ),
                                ty: UntrackedSymbol {
                                    id: 11,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "u64",
                                ),
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 486,
            ty: Type {
                path: Path {
                    segments: [
                        "sp_version",
                        "RuntimeVersion",
                    ],
                },
                type_params: [],
                type_def: Composite(
                    TypeDefComposite {
                        fields: [
                            Field {
                                name: Some(
                                    "spec_name",
                                ),
                                ty: UntrackedSymbol {
                                    id: 479,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "RuntimeString",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "impl_name",
                                ),
                                ty: UntrackedSymbol {
                                    id: 479,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "RuntimeString",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "authoring_version",
                                ),
                                ty: UntrackedSymbol {
                                    id: 4,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "u32",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "spec_version",
                                ),
                                ty: UntrackedSymbol {
                                    id: 4,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "u32",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "impl_version",
                                ),
                                ty: UntrackedSymbol {
                                    id: 4,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "u32",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "apis",
                                ),
                                ty: UntrackedSymbol {
                                    id: 487,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "ApisVec",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "transaction_version",
                                ),
                                ty: UntrackedSymbol {
                                    id: 4,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "u32",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "state_version",
                                ),
                                ty: UntrackedSymbol {
                                    id: 2,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "u8",
                                ),
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 487,
            ty: Type {
                path: Path {
                    segments: [
                        "Cow",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "T",
                        ty: Some(
                            UntrackedSymbol {
                                id: 488,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ),
                    },
                ],
                type_def: Composite(
                    TypeDefComposite {
                        fields: [
                            Field {
                                name: None,
                                ty: UntrackedSymbol {
                                    id: 488,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: None,
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 488,
            ty: Type {
                path: Path {
                    segments: [],
                },
                type_params: [],
                type_def: Sequence(
                    TypeDefSequence {
                        type_param: UntrackedSymbol {
                            id: 489,
                            marker: PhantomData<fn() -> core::any::TypeId>,
                        },
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 489,
            ty: Type {
                path: Path {
                    segments: [],
                },
                type_params: [],
                type_def: Tuple(
                    TypeDefTuple {
                        fields: [
                            UntrackedSymbol {
                                id: 194,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                            UntrackedSymbol {
                                id: 4,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 490,
            ty: Type {
                path: Path {
                    segments: [
                        "frame_system",
                        "pallet",
                        "Error",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "T",
                        ty: None,
                    },
                ],
                type_def: Variant(
                    TypeDefVariant {
                        variants: [
                            Variant {
                                name: "InvalidSpecName",
                                fields: [],
                                index: 0,
                                docs: [
                                    "The name of specification does not match between the current runtime",
                                    "and the new runtime.",
                                ],
                            },
                            Variant {
                                name: "SpecVersionNeedsToIncrease",
                                fields: [],
                                index: 1,
                                docs: [
                                    "The specification version is not allowed to decrease between the current runtime",
                                    "and the new runtime.",
                                ],
                            },
                            Variant {
                                name: "FailedToExtractRuntimeVersion",
                                fields: [],
                                index: 2,
                                docs: [
                                    "Failed to extract the runtime version from the new runtime.",
                                    "",
                                    "Either calling `Core_version` or decoding `RuntimeVersion` failed.",
                                ],
                            },
                            Variant {
                                name: "NonDefaultComposite",
                                fields: [],
                                index: 3,
                                docs: [
                                    "Suicide called when the account has non-default composite data.",
                                ],
                            },
                            Variant {
                                name: "NonZeroRefCount",
                                fields: [],
                                index: 4,
                                docs: [
                                    "There is a non-zero reference count preventing the account from being purged.",
                                ],
                            },
                            Variant {
                                name: "CallFiltered",
                                fields: [],
                                index: 5,
                                docs: [
                                    "The origin filter prevent the call to be dispatched.",
                                ],
                            },
                        ],
                    },
                ),
                docs: [
                    "Error for the System pallet",
                ],
            },
        },
        PortableType {
            id: 491,
            ty: Type {
                path: Path {
                    segments: [
                        "bounded_collections",
                        "bounded_vec",
                        "BoundedVec",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "T",
                        ty: Some(
                            UntrackedSymbol {
                                id: 492,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ),
                    },
                    TypeParameter {
                        name: "S",
                        ty: None,
                    },
                ],
                type_def: Composite(
                    TypeDefComposite {
                        fields: [
                            Field {
                                name: None,
                                ty: UntrackedSymbol {
                                    id: 494,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "Vec<T>",
                                ),
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 492,
            ty: Type {
                path: Path {
                    segments: [
                        "Option",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "T",
                        ty: Some(
                            UntrackedSymbol {
                                id: 493,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ),
                    },
                ],
                type_def: Variant(
                    TypeDefVariant {
                        variants: [
                            Variant {
                                name: "None",
                                fields: [],
                                index: 0,
                                docs: [],
                            },
                            Variant {
                                name: "Some",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 493,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: None,
                                        docs: [],
                                    },
                                ],
                                index: 1,
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 493,
            ty: Type {
                path: Path {
                    segments: [
                        "pallet_scheduler",
                        "Scheduled",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "Name",
                        ty: Some(
                            UntrackedSymbol {
                                id: 1,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ),
                    },
                    TypeParameter {
                        name: "Call",
                        ty: Some(
                            UntrackedSymbol {
                                id: 78,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ),
                    },
                    TypeParameter {
                        name: "BlockNumber",
                        ty: Some(
                            UntrackedSymbol {
                                id: 4,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ),
                    },
                    TypeParameter {
                        name: "PalletsOrigin",
                        ty: Some(
                            UntrackedSymbol {
                                id: 152,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ),
                    },
                    TypeParameter {
                        name: "AccountId",
                        ty: Some(
                            UntrackedSymbol {
                                id: 0,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ),
                    },
                ],
                type_def: Composite(
                    TypeDefComposite {
                        fields: [
                            Field {
                                name: Some(
                                    "maybe_id",
                                ),
                                ty: UntrackedSymbol {
                                    id: 32,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "Option<Name>",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "priority",
                                ),
                                ty: UntrackedSymbol {
                                    id: 2,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "schedule::Priority",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "call",
                                ),
                                ty: UntrackedSymbol {
                                    id: 78,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "Call",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "maybe_periodic",
                                ),
                                ty: UntrackedSymbol {
                                    id: 85,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "Option<schedule::Period<BlockNumber>>",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "origin",
                                ),
                                ty: UntrackedSymbol {
                                    id: 152,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "PalletsOrigin",
                                ),
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 494,
            ty: Type {
                path: Path {
                    segments: [],
                },
                type_params: [],
                type_def: Sequence(
                    TypeDefSequence {
                        type_param: UntrackedSymbol {
                            id: 492,
                            marker: PhantomData<fn() -> core::any::TypeId>,
                        },
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 495,
            ty: Type {
                path: Path {
                    segments: [
                        "pallet_scheduler",
                        "pallet",
                        "Error",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "T",
                        ty: None,
                    },
                ],
                type_def: Variant(
                    TypeDefVariant {
                        variants: [
                            Variant {
                                name: "FailedToSchedule",
                                fields: [],
                                index: 0,
                                docs: [
                                    "Failed to schedule a call",
                                ],
                            },
                            Variant {
                                name: "NotFound",
                                fields: [],
                                index: 1,
                                docs: [
                                    "Cannot find the scheduled call.",
                                ],
                            },
                            Variant {
                                name: "TargetBlockNumberInPast",
                                fields: [],
                                index: 2,
                                docs: [
                                    "Given target block number is in the past.",
                                ],
                            },
                            Variant {
                                name: "RescheduleNoChange",
                                fields: [],
                                index: 3,
                                docs: [
                                    "Reschedule failed because it does not change scheduled time.",
                                ],
                            },
                            Variant {
                                name: "Named",
                                fields: [],
                                index: 4,
                                docs: [
                                    "Attempt to use a non-named function on a named task.",
                                ],
                            },
                        ],
                    },
                ),
                docs: [
                    "The `Error` enum of this pallet.",
                ],
            },
        },
        PortableType {
            id: 496,
            ty: Type {
                path: Path {
                    segments: [
                        "pallet_preimage",
                        "RequestStatus",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "AccountId",
                        ty: Some(
                            UntrackedSymbol {
                                id: 0,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ),
                    },
                    TypeParameter {
                        name: "Balance",
                        ty: Some(
                            UntrackedSymbol {
                                id: 6,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ),
                    },
                ],
                type_def: Variant(
                    TypeDefVariant {
                        variants: [
                            Variant {
                                name: "Unrequested",
                                fields: [
                                    Field {
                                        name: Some(
                                            "deposit",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 72,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "(AccountId, Balance)",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "len",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 4,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "u32",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 0,
                                docs: [],
                            },
                            Variant {
                                name: "Requested",
                                fields: [
                                    Field {
                                        name: Some(
                                            "deposit",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 497,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "Option<(AccountId, Balance)>",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "count",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 4,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "u32",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "len",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 137,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "Option<u32>",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 1,
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 497,
            ty: Type {
                path: Path {
                    segments: [
                        "Option",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "T",
                        ty: Some(
                            UntrackedSymbol {
                                id: 72,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ),
                    },
                ],
                type_def: Variant(
                    TypeDefVariant {
                        variants: [
                            Variant {
                                name: "None",
                                fields: [],
                                index: 0,
                                docs: [],
                            },
                            Variant {
                                name: "Some",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 72,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: None,
                                        docs: [],
                                    },
                                ],
                                index: 1,
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 498,
            ty: Type {
                path: Path {
                    segments: [],
                },
                type_params: [],
                type_def: Tuple(
                    TypeDefTuple {
                        fields: [
                            UntrackedSymbol {
                                id: 12,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                            UntrackedSymbol {
                                id: 4,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 499,
            ty: Type {
                path: Path {
                    segments: [
                        "bounded_collections",
                        "bounded_vec",
                        "BoundedVec",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "T",
                        ty: Some(
                            UntrackedSymbol {
                                id: 2,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ),
                    },
                    TypeParameter {
                        name: "S",
                        ty: None,
                    },
                ],
                type_def: Composite(
                    TypeDefComposite {
                        fields: [
                            Field {
                                name: None,
                                ty: UntrackedSymbol {
                                    id: 13,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "Vec<T>",
                                ),
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 500,
            ty: Type {
                path: Path {
                    segments: [
                        "pallet_preimage",
                        "pallet",
                        "Error",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "T",
                        ty: None,
                    },
                ],
                type_def: Variant(
                    TypeDefVariant {
                        variants: [
                            Variant {
                                name: "TooBig",
                                fields: [],
                                index: 0,
                                docs: [
                                    "Preimage is too large to store on-chain.",
                                ],
                            },
                            Variant {
                                name: "AlreadyNoted",
                                fields: [],
                                index: 1,
                                docs: [
                                    "Preimage has already been noted on-chain.",
                                ],
                            },
                            Variant {
                                name: "NotAuthorized",
                                fields: [],
                                index: 2,
                                docs: [
                                    "The user is not authorized to perform this action.",
                                ],
                            },
                            Variant {
                                name: "NotNoted",
                                fields: [],
                                index: 3,
                                docs: [
                                    "The preimage cannot be removed since it has not yet been noted.",
                                ],
                            },
                            Variant {
                                name: "Requested",
                                fields: [],
                                index: 4,
                                docs: [
                                    "A preimage may not be removed when there are outstanding requests.",
                                ],
                            },
                            Variant {
                                name: "NotRequested",
                                fields: [],
                                index: 5,
                                docs: [
                                    "The preimage request cannot be removed since no outstanding requests exist.",
                                ],
                            },
                        ],
                    },
                ),
                docs: [
                    "The `Error` enum of this pallet.",
                ],
            },
        },
        PortableType {
            id: 501,
            ty: Type {
                path: Path {
                    segments: [
                        "bounded_collections",
                        "weak_bounded_vec",
                        "WeakBoundedVec",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "T",
                        ty: Some(
                            UntrackedSymbol {
                                id: 502,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ),
                    },
                    TypeParameter {
                        name: "S",
                        ty: None,
                    },
                ],
                type_def: Composite(
                    TypeDefComposite {
                        fields: [
                            Field {
                                name: None,
                                ty: UntrackedSymbol {
                                    id: 503,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "Vec<T>",
                                ),
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 502,
            ty: Type {
                path: Path {
                    segments: [],
                },
                type_params: [],
                type_def: Tuple(
                    TypeDefTuple {
                        fields: [
                            UntrackedSymbol {
                                id: 92,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                            UntrackedSymbol {
                                id: 11,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 503,
            ty: Type {
                path: Path {
                    segments: [],
                },
                type_params: [],
                type_def: Sequence(
                    TypeDefSequence {
                        type_param: UntrackedSymbol {
                            id: 502,
                            marker: PhantomData<fn() -> core::any::TypeId>,
                        },
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 504,
            ty: Type {
                path: Path {
                    segments: [
                        "bounded_collections",
                        "bounded_vec",
                        "BoundedVec",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "T",
                        ty: Some(
                            UntrackedSymbol {
                                id: 1,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ),
                    },
                    TypeParameter {
                        name: "S",
                        ty: None,
                    },
                ],
                type_def: Composite(
                    TypeDefComposite {
                        fields: [
                            Field {
                                name: None,
                                ty: UntrackedSymbol {
                                    id: 505,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "Vec<T>",
                                ),
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 505,
            ty: Type {
                path: Path {
                    segments: [],
                },
                type_params: [],
                type_def: Sequence(
                    TypeDefSequence {
                        type_param: UntrackedSymbol {
                            id: 1,
                            marker: PhantomData<fn() -> core::any::TypeId>,
                        },
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 506,
            ty: Type {
                path: Path {
                    segments: [
                        "Option",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "T",
                        ty: Some(
                            UntrackedSymbol {
                                id: 507,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ),
                    },
                ],
                type_def: Variant(
                    TypeDefVariant {
                        variants: [
                            Variant {
                                name: "None",
                                fields: [],
                                index: 0,
                                docs: [],
                            },
                            Variant {
                                name: "Some",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 507,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: None,
                                        docs: [],
                                    },
                                ],
                                index: 1,
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 507,
            ty: Type {
                path: Path {
                    segments: [
                        "sp_consensus_babe",
                        "digests",
                        "PreDigest",
                    ],
                },
                type_params: [],
                type_def: Variant(
                    TypeDefVariant {
                        variants: [
                            Variant {
                                name: "Primary",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 508,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "PrimaryPreDigest",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 1,
                                docs: [],
                            },
                            Variant {
                                name: "SecondaryPlain",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 510,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "SecondaryPlainPreDigest",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 2,
                                docs: [],
                            },
                            Variant {
                                name: "SecondaryVRF",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 511,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "SecondaryVRFPreDigest",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 3,
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 508,
            ty: Type {
                path: Path {
                    segments: [
                        "sp_consensus_babe",
                        "digests",
                        "PrimaryPreDigest",
                    ],
                },
                type_params: [],
                type_def: Composite(
                    TypeDefComposite {
                        fields: [
                            Field {
                                name: Some(
                                    "authority_index",
                                ),
                                ty: UntrackedSymbol {
                                    id: 4,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "super::AuthorityIndex",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "slot",
                                ),
                                ty: UntrackedSymbol {
                                    id: 93,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "Slot",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "vrf_signature",
                                ),
                                ty: UntrackedSymbol {
                                    id: 509,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "VrfSignature",
                                ),
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 509,
            ty: Type {
                path: Path {
                    segments: [
                        "sp_core",
                        "sr25519",
                        "vrf",
                        "VrfSignature",
                    ],
                },
                type_params: [],
                type_def: Composite(
                    TypeDefComposite {
                        fields: [
                            Field {
                                name: Some(
                                    "output",
                                ),
                                ty: UntrackedSymbol {
                                    id: 1,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "VrfOutput",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "proof",
                                ),
                                ty: UntrackedSymbol {
                                    id: 126,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "VrfProof",
                                ),
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 510,
            ty: Type {
                path: Path {
                    segments: [
                        "sp_consensus_babe",
                        "digests",
                        "SecondaryPlainPreDigest",
                    ],
                },
                type_params: [],
                type_def: Composite(
                    TypeDefComposite {
                        fields: [
                            Field {
                                name: Some(
                                    "authority_index",
                                ),
                                ty: UntrackedSymbol {
                                    id: 4,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "super::AuthorityIndex",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "slot",
                                ),
                                ty: UntrackedSymbol {
                                    id: 93,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "Slot",
                                ),
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 511,
            ty: Type {
                path: Path {
                    segments: [
                        "sp_consensus_babe",
                        "digests",
                        "SecondaryVRFPreDigest",
                    ],
                },
                type_params: [],
                type_def: Composite(
                    TypeDefComposite {
                        fields: [
                            Field {
                                name: Some(
                                    "authority_index",
                                ),
                                ty: UntrackedSymbol {
                                    id: 4,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "super::AuthorityIndex",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "slot",
                                ),
                                ty: UntrackedSymbol {
                                    id: 93,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "Slot",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "vrf_signature",
                                ),
                                ty: UntrackedSymbol {
                                    id: 509,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "VrfSignature",
                                ),
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 512,
            ty: Type {
                path: Path {
                    segments: [
                        "sp_consensus_babe",
                        "BabeEpochConfiguration",
                    ],
                },
                type_params: [],
                type_def: Composite(
                    TypeDefComposite {
                        fields: [
                            Field {
                                name: Some(
                                    "c",
                                ),
                                ty: UntrackedSymbol {
                                    id: 96,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "(u64, u64)",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "allowed_slots",
                                ),
                                ty: UntrackedSymbol {
                                    id: 97,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "AllowedSlots",
                                ),
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 513,
            ty: Type {
                path: Path {
                    segments: [
                        "bounded_collections",
                        "bounded_vec",
                        "BoundedVec",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "T",
                        ty: Some(
                            UntrackedSymbol {
                                id: 514,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ),
                    },
                    TypeParameter {
                        name: "S",
                        ty: None,
                    },
                ],
                type_def: Composite(
                    TypeDefComposite {
                        fields: [
                            Field {
                                name: None,
                                ty: UntrackedSymbol {
                                    id: 515,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "Vec<T>",
                                ),
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 514,
            ty: Type {
                path: Path {
                    segments: [],
                },
                type_params: [],
                type_def: Tuple(
                    TypeDefTuple {
                        fields: [
                            UntrackedSymbol {
                                id: 11,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                            UntrackedSymbol {
                                id: 4,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 515,
            ty: Type {
                path: Path {
                    segments: [],
                },
                type_params: [],
                type_def: Sequence(
                    TypeDefSequence {
                        type_param: UntrackedSymbol {
                            id: 514,
                            marker: PhantomData<fn() -> core::any::TypeId>,
                        },
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 516,
            ty: Type {
                path: Path {
                    segments: [
                        "pallet_babe",
                        "pallet",
                        "Error",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "T",
                        ty: None,
                    },
                ],
                type_def: Variant(
                    TypeDefVariant {
                        variants: [
                            Variant {
                                name: "InvalidEquivocationProof",
                                fields: [],
                                index: 0,
                                docs: [
                                    "An equivocation proof provided as part of an equivocation report is invalid.",
                                ],
                            },
                            Variant {
                                name: "InvalidKeyOwnershipProof",
                                fields: [],
                                index: 1,
                                docs: [
                                    "A key ownership proof provided as part of an equivocation report is invalid.",
                                ],
                            },
                            Variant {
                                name: "DuplicateOffenceReport",
                                fields: [],
                                index: 2,
                                docs: [
                                    "A given equivocation report is valid but already previously reported.",
                                ],
                            },
                            Variant {
                                name: "InvalidConfiguration",
                                fields: [],
                                index: 3,
                                docs: [
                                    "Submitted configuration is invalid.",
                                ],
                            },
                        ],
                    },
                ),
                docs: [
                    "The `Error` enum of this pallet.",
                ],
            },
        },
        PortableType {
            id: 517,
            ty: Type {
                path: Path {
                    segments: [],
                },
                type_params: [],
                type_def: Tuple(
                    TypeDefTuple {
                        fields: [
                            UntrackedSymbol {
                                id: 0,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                            UntrackedSymbol {
                                id: 6,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                            UntrackedSymbol {
                                id: 44,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 518,
            ty: Type {
                path: Path {
                    segments: [
                        "pallet_indices",
                        "pallet",
                        "Error",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "T",
                        ty: None,
                    },
                ],
                type_def: Variant(
                    TypeDefVariant {
                        variants: [
                            Variant {
                                name: "NotAssigned",
                                fields: [],
                                index: 0,
                                docs: [
                                    "The index was not already assigned.",
                                ],
                            },
                            Variant {
                                name: "NotOwner",
                                fields: [],
                                index: 1,
                                docs: [
                                    "The index is assigned to another account.",
                                ],
                            },
                            Variant {
                                name: "InUse",
                                fields: [],
                                index: 2,
                                docs: [
                                    "The index was not available.",
                                ],
                            },
                            Variant {
                                name: "NotTransfer",
                                fields: [],
                                index: 3,
                                docs: [
                                    "The source and destination accounts are identical.",
                                ],
                            },
                            Variant {
                                name: "Permanent",
                                fields: [],
                                index: 4,
                                docs: [
                                    "The index is permanent and may not be freed/changed.",
                                ],
                            },
                        ],
                    },
                ),
                docs: [
                    "The `Error` enum of this pallet.",
                ],
            },
        },
        PortableType {
            id: 519,
            ty: Type {
                path: Path {
                    segments: [
                        "bounded_collections",
                        "weak_bounded_vec",
                        "WeakBoundedVec",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "T",
                        ty: Some(
                            UntrackedSymbol {
                                id: 520,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ),
                    },
                    TypeParameter {
                        name: "S",
                        ty: None,
                    },
                ],
                type_def: Composite(
                    TypeDefComposite {
                        fields: [
                            Field {
                                name: None,
                                ty: UntrackedSymbol {
                                    id: 522,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "Vec<T>",
                                ),
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 520,
            ty: Type {
                path: Path {
                    segments: [
                        "pallet_balances",
                        "types",
                        "BalanceLock",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "Balance",
                        ty: Some(
                            UntrackedSymbol {
                                id: 6,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ),
                    },
                ],
                type_def: Composite(
                    TypeDefComposite {
                        fields: [
                            Field {
                                name: Some(
                                    "id",
                                ),
                                ty: UntrackedSymbol {
                                    id: 194,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "LockIdentifier",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "amount",
                                ),
                                ty: UntrackedSymbol {
                                    id: 6,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "Balance",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "reasons",
                                ),
                                ty: UntrackedSymbol {
                                    id: 521,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "Reasons",
                                ),
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 521,
            ty: Type {
                path: Path {
                    segments: [
                        "pallet_balances",
                        "types",
                        "Reasons",
                    ],
                },
                type_params: [],
                type_def: Variant(
                    TypeDefVariant {
                        variants: [
                            Variant {
                                name: "Fee",
                                fields: [],
                                index: 0,
                                docs: [],
                            },
                            Variant {
                                name: "Misc",
                                fields: [],
                                index: 1,
                                docs: [],
                            },
                            Variant {
                                name: "All",
                                fields: [],
                                index: 2,
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 522,
            ty: Type {
                path: Path {
                    segments: [],
                },
                type_params: [],
                type_def: Sequence(
                    TypeDefSequence {
                        type_param: UntrackedSymbol {
                            id: 520,
                            marker: PhantomData<fn() -> core::any::TypeId>,
                        },
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 523,
            ty: Type {
                path: Path {
                    segments: [
                        "bounded_collections",
                        "bounded_vec",
                        "BoundedVec",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "T",
                        ty: Some(
                            UntrackedSymbol {
                                id: 524,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ),
                    },
                    TypeParameter {
                        name: "S",
                        ty: None,
                    },
                ],
                type_def: Composite(
                    TypeDefComposite {
                        fields: [
                            Field {
                                name: None,
                                ty: UntrackedSymbol {
                                    id: 525,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "Vec<T>",
                                ),
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 524,
            ty: Type {
                path: Path {
                    segments: [
                        "pallet_balances",
                        "types",
                        "ReserveData",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "ReserveIdentifier",
                        ty: Some(
                            UntrackedSymbol {
                                id: 194,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ),
                    },
                    TypeParameter {
                        name: "Balance",
                        ty: Some(
                            UntrackedSymbol {
                                id: 6,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ),
                    },
                ],
                type_def: Composite(
                    TypeDefComposite {
                        fields: [
                            Field {
                                name: Some(
                                    "id",
                                ),
                                ty: UntrackedSymbol {
                                    id: 194,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "ReserveIdentifier",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "amount",
                                ),
                                ty: UntrackedSymbol {
                                    id: 6,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "Balance",
                                ),
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 525,
            ty: Type {
                path: Path {
                    segments: [],
                },
                type_params: [],
                type_def: Sequence(
                    TypeDefSequence {
                        type_param: UntrackedSymbol {
                            id: 524,
                            marker: PhantomData<fn() -> core::any::TypeId>,
                        },
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 526,
            ty: Type {
                path: Path {
                    segments: [
                        "bounded_collections",
                        "bounded_vec",
                        "BoundedVec",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "T",
                        ty: Some(
                            UntrackedSymbol {
                                id: 527,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ),
                    },
                    TypeParameter {
                        name: "S",
                        ty: None,
                    },
                ],
                type_def: Composite(
                    TypeDefComposite {
                        fields: [
                            Field {
                                name: None,
                                ty: UntrackedSymbol {
                                    id: 529,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "Vec<T>",
                                ),
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 527,
            ty: Type {
                path: Path {
                    segments: [
                        "pallet_balances",
                        "types",
                        "IdAmount",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "Id",
                        ty: Some(
                            UntrackedSymbol {
                                id: 528,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ),
                    },
                    TypeParameter {
                        name: "Balance",
                        ty: Some(
                            UntrackedSymbol {
                                id: 6,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ),
                    },
                ],
                type_def: Composite(
                    TypeDefComposite {
                        fields: [
                            Field {
                                name: Some(
                                    "id",
                                ),
                                ty: UntrackedSymbol {
                                    id: 528,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "Id",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "amount",
                                ),
                                ty: UntrackedSymbol {
                                    id: 6,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "Balance",
                                ),
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 528,
            ty: Type {
                path: Path {
                    segments: [
                        "polkadot_runtime",
                        "RuntimeHoldReason",
                    ],
                },
                type_params: [],
                type_def: Variant(
                    TypeDefVariant {
                        variants: [],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 529,
            ty: Type {
                path: Path {
                    segments: [],
                },
                type_params: [],
                type_def: Sequence(
                    TypeDefSequence {
                        type_param: UntrackedSymbol {
                            id: 527,
                            marker: PhantomData<fn() -> core::any::TypeId>,
                        },
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 530,
            ty: Type {
                path: Path {
                    segments: [
                        "bounded_collections",
                        "bounded_vec",
                        "BoundedVec",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "T",
                        ty: Some(
                            UntrackedSymbol {
                                id: 531,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ),
                    },
                    TypeParameter {
                        name: "S",
                        ty: None,
                    },
                ],
                type_def: Composite(
                    TypeDefComposite {
                        fields: [
                            Field {
                                name: None,
                                ty: UntrackedSymbol {
                                    id: 532,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "Vec<T>",
                                ),
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 531,
            ty: Type {
                path: Path {
                    segments: [
                        "pallet_balances",
                        "types",
                        "IdAmount",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "Id",
                        ty: Some(
                            UntrackedSymbol {
                                id: 34,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ),
                    },
                    TypeParameter {
                        name: "Balance",
                        ty: Some(
                            UntrackedSymbol {
                                id: 6,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ),
                    },
                ],
                type_def: Composite(
                    TypeDefComposite {
                        fields: [
                            Field {
                                name: Some(
                                    "id",
                                ),
                                ty: UntrackedSymbol {
                                    id: 34,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "Id",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "amount",
                                ),
                                ty: UntrackedSymbol {
                                    id: 6,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "Balance",
                                ),
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 532,
            ty: Type {
                path: Path {
                    segments: [],
                },
                type_params: [],
                type_def: Sequence(
                    TypeDefSequence {
                        type_param: UntrackedSymbol {
                            id: 531,
                            marker: PhantomData<fn() -> core::any::TypeId>,
                        },
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 533,
            ty: Type {
                path: Path {
                    segments: [
                        "pallet_balances",
                        "pallet",
                        "Error",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "T",
                        ty: None,
                    },
                    TypeParameter {
                        name: "I",
                        ty: None,
                    },
                ],
                type_def: Variant(
                    TypeDefVariant {
                        variants: [
                            Variant {
                                name: "VestingBalance",
                                fields: [],
                                index: 0,
                                docs: [
                                    "Vesting balance too high to send value.",
                                ],
                            },
                            Variant {
                                name: "LiquidityRestrictions",
                                fields: [],
                                index: 1,
                                docs: [
                                    "Account liquidity restrictions prevent withdrawal.",
                                ],
                            },
                            Variant {
                                name: "InsufficientBalance",
                                fields: [],
                                index: 2,
                                docs: [
                                    "Balance too low to send value.",
                                ],
                            },
                            Variant {
                                name: "ExistentialDeposit",
                                fields: [],
                                index: 3,
                                docs: [
                                    "Value too low to create account due to existential deposit.",
                                ],
                            },
                            Variant {
                                name: "Expendability",
                                fields: [],
                                index: 4,
                                docs: [
                                    "Transfer/payment would kill account.",
                                ],
                            },
                            Variant {
                                name: "ExistingVestingSchedule",
                                fields: [],
                                index: 5,
                                docs: [
                                    "A vesting schedule already exists for this account.",
                                ],
                            },
                            Variant {
                                name: "DeadAccount",
                                fields: [],
                                index: 6,
                                docs: [
                                    "Beneficiary account must pre-exist.",
                                ],
                            },
                            Variant {
                                name: "TooManyReserves",
                                fields: [],
                                index: 7,
                                docs: [
                                    "Number of named reserves exceed `MaxReserves`.",
                                ],
                            },
                            Variant {
                                name: "TooManyHolds",
                                fields: [],
                                index: 8,
                                docs: [
                                    "Number of holds exceed `MaxHolds`.",
                                ],
                            },
                            Variant {
                                name: "TooManyFreezes",
                                fields: [],
                                index: 9,
                                docs: [
                                    "Number of freezes exceed `MaxFreezes`.",
                                ],
                            },
                        ],
                    },
                ),
                docs: [
                    "The `Error` enum of this pallet.",
                ],
            },
        },
        PortableType {
            id: 534,
            ty: Type {
                path: Path {
                    segments: [
                        "sp_arithmetic",
                        "fixed_point",
                        "FixedU128",
                    ],
                },
                type_params: [],
                type_def: Composite(
                    TypeDefComposite {
                        fields: [
                            Field {
                                name: None,
                                ty: UntrackedSymbol {
                                    id: 6,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "u128",
                                ),
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 535,
            ty: Type {
                path: Path {
                    segments: [
                        "pallet_transaction_payment",
                        "Releases",
                    ],
                },
                type_params: [],
                type_def: Variant(
                    TypeDefVariant {
                        variants: [
                            Variant {
                                name: "V1Ancient",
                                fields: [],
                                index: 0,
                                docs: [],
                            },
                            Variant {
                                name: "V2",
                                fields: [],
                                index: 1,
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 536,
            ty: Type {
                path: Path {
                    segments: [
                        "pallet_staking",
                        "StakingLedger",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "T",
                        ty: None,
                    },
                ],
                type_def: Composite(
                    TypeDefComposite {
                        fields: [
                            Field {
                                name: Some(
                                    "stash",
                                ),
                                ty: UntrackedSymbol {
                                    id: 0,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "T::AccountId",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "total",
                                ),
                                ty: UntrackedSymbol {
                                    id: 60,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "BalanceOf<T>",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "active",
                                ),
                                ty: UntrackedSymbol {
                                    id: 60,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "BalanceOf<T>",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "unlocking",
                                ),
                                ty: UntrackedSymbol {
                                    id: 537,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "BoundedVec<UnlockChunk<BalanceOf<T>>, T::MaxUnlockingChunks>",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "claimed_rewards",
                                ),
                                ty: UntrackedSymbol {
                                    id: 540,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "BoundedVec<EraIndex, T::HistoryDepth>",
                                ),
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 537,
            ty: Type {
                path: Path {
                    segments: [
                        "bounded_collections",
                        "bounded_vec",
                        "BoundedVec",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "T",
                        ty: Some(
                            UntrackedSymbol {
                                id: 538,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ),
                    },
                    TypeParameter {
                        name: "S",
                        ty: None,
                    },
                ],
                type_def: Composite(
                    TypeDefComposite {
                        fields: [
                            Field {
                                name: None,
                                ty: UntrackedSymbol {
                                    id: 539,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "Vec<T>",
                                ),
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 538,
            ty: Type {
                path: Path {
                    segments: [
                        "pallet_staking",
                        "UnlockChunk",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "Balance",
                        ty: Some(
                            UntrackedSymbol {
                                id: 6,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ),
                    },
                ],
                type_def: Composite(
                    TypeDefComposite {
                        fields: [
                            Field {
                                name: Some(
                                    "value",
                                ),
                                ty: UntrackedSymbol {
                                    id: 60,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "Balance",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "era",
                                ),
                                ty: UntrackedSymbol {
                                    id: 91,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "EraIndex",
                                ),
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 539,
            ty: Type {
                path: Path {
                    segments: [],
                },
                type_params: [],
                type_def: Sequence(
                    TypeDefSequence {
                        type_param: UntrackedSymbol {
                            id: 538,
                            marker: PhantomData<fn() -> core::any::TypeId>,
                        },
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 540,
            ty: Type {
                path: Path {
                    segments: [
                        "bounded_collections",
                        "bounded_vec",
                        "BoundedVec",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "T",
                        ty: Some(
                            UntrackedSymbol {
                                id: 4,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ),
                    },
                    TypeParameter {
                        name: "S",
                        ty: None,
                    },
                ],
                type_def: Composite(
                    TypeDefComposite {
                        fields: [
                            Field {
                                name: None,
                                ty: UntrackedSymbol {
                                    id: 109,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "Vec<T>",
                                ),
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 541,
            ty: Type {
                path: Path {
                    segments: [
                        "pallet_staking",
                        "Nominations",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "T",
                        ty: None,
                    },
                ],
                type_def: Composite(
                    TypeDefComposite {
                        fields: [
                            Field {
                                name: Some(
                                    "targets",
                                ),
                                ty: UntrackedSymbol {
                                    id: 542,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "BoundedVec<T::AccountId, T::MaxNominations>",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "submitted_in",
                                ),
                                ty: UntrackedSymbol {
                                    id: 4,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "EraIndex",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "suppressed",
                                ),
                                ty: UntrackedSymbol {
                                    id: 44,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "bool",
                                ),
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 542,
            ty: Type {
                path: Path {
                    segments: [
                        "bounded_collections",
                        "bounded_vec",
                        "BoundedVec",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "T",
                        ty: Some(
                            UntrackedSymbol {
                                id: 0,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ),
                    },
                    TypeParameter {
                        name: "S",
                        ty: None,
                    },
                ],
                type_def: Composite(
                    TypeDefComposite {
                        fields: [
                            Field {
                                name: None,
                                ty: UntrackedSymbol {
                                    id: 104,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "Vec<T>",
                                ),
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 543,
            ty: Type {
                path: Path {
                    segments: [
                        "pallet_staking",
                        "ActiveEraInfo",
                    ],
                },
                type_params: [],
                type_def: Composite(
                    TypeDefComposite {
                        fields: [
                            Field {
                                name: Some(
                                    "index",
                                ),
                                ty: UntrackedSymbol {
                                    id: 4,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "EraIndex",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "start",
                                ),
                                ty: UntrackedSymbol {
                                    id: 544,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "Option<u64>",
                                ),
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 544,
            ty: Type {
                path: Path {
                    segments: [
                        "Option",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "T",
                        ty: Some(
                            UntrackedSymbol {
                                id: 11,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ),
                    },
                ],
                type_def: Variant(
                    TypeDefVariant {
                        variants: [
                            Variant {
                                name: "None",
                                fields: [],
                                index: 0,
                                docs: [],
                            },
                            Variant {
                                name: "Some",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 11,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: None,
                                        docs: [],
                                    },
                                ],
                                index: 1,
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 545,
            ty: Type {
                path: Path {
                    segments: [],
                },
                type_params: [],
                type_def: Tuple(
                    TypeDefTuple {
                        fields: [
                            UntrackedSymbol {
                                id: 4,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                            UntrackedSymbol {
                                id: 0,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 546,
            ty: Type {
                path: Path {
                    segments: [
                        "pallet_staking",
                        "EraRewardPoints",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "AccountId",
                        ty: Some(
                            UntrackedSymbol {
                                id: 0,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ),
                    },
                ],
                type_def: Composite(
                    TypeDefComposite {
                        fields: [
                            Field {
                                name: Some(
                                    "total",
                                ),
                                ty: UntrackedSymbol {
                                    id: 4,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "RewardPoint",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "individual",
                                ),
                                ty: UntrackedSymbol {
                                    id: 547,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "BTreeMap<AccountId, RewardPoint>",
                                ),
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 547,
            ty: Type {
                path: Path {
                    segments: [
                        "BTreeMap",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "K",
                        ty: Some(
                            UntrackedSymbol {
                                id: 0,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ),
                    },
                    TypeParameter {
                        name: "V",
                        ty: Some(
                            UntrackedSymbol {
                                id: 4,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ),
                    },
                ],
                type_def: Composite(
                    TypeDefComposite {
                        fields: [
                            Field {
                                name: None,
                                ty: UntrackedSymbol {
                                    id: 548,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: None,
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 548,
            ty: Type {
                path: Path {
                    segments: [],
                },
                type_params: [],
                type_def: Sequence(
                    TypeDefSequence {
                        type_param: UntrackedSymbol {
                            id: 549,
                            marker: PhantomData<fn() -> core::any::TypeId>,
                        },
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 549,
            ty: Type {
                path: Path {
                    segments: [],
                },
                type_params: [],
                type_def: Tuple(
                    TypeDefTuple {
                        fields: [
                            UntrackedSymbol {
                                id: 0,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                            UntrackedSymbol {
                                id: 4,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 550,
            ty: Type {
                path: Path {
                    segments: [],
                },
                type_params: [],
                type_def: Sequence(
                    TypeDefSequence {
                        type_param: UntrackedSymbol {
                            id: 551,
                            marker: PhantomData<fn() -> core::any::TypeId>,
                        },
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 551,
            ty: Type {
                path: Path {
                    segments: [
                        "pallet_staking",
                        "UnappliedSlash",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "AccountId",
                        ty: Some(
                            UntrackedSymbol {
                                id: 0,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ),
                    },
                    TypeParameter {
                        name: "Balance",
                        ty: Some(
                            UntrackedSymbol {
                                id: 6,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ),
                    },
                ],
                type_def: Composite(
                    TypeDefComposite {
                        fields: [
                            Field {
                                name: Some(
                                    "validator",
                                ),
                                ty: UntrackedSymbol {
                                    id: 0,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "AccountId",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "own",
                                ),
                                ty: UntrackedSymbol {
                                    id: 6,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "Balance",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "others",
                                ),
                                ty: UntrackedSymbol {
                                    id: 71,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "Vec<(AccountId, Balance)>",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "reporters",
                                ),
                                ty: UntrackedSymbol {
                                    id: 104,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "Vec<AccountId>",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "payout",
                                ),
                                ty: UntrackedSymbol {
                                    id: 6,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "Balance",
                                ),
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 552,
            ty: Type {
                path: Path {
                    segments: [],
                },
                type_params: [],
                type_def: Tuple(
                    TypeDefTuple {
                        fields: [
                            UntrackedSymbol {
                                id: 41,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                            UntrackedSymbol {
                                id: 6,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 553,
            ty: Type {
                path: Path {
                    segments: [
                        "pallet_staking",
                        "slashing",
                        "SlashingSpans",
                    ],
                },
                type_params: [],
                type_def: Composite(
                    TypeDefComposite {
                        fields: [
                            Field {
                                name: Some(
                                    "span_index",
                                ),
                                ty: UntrackedSymbol {
                                    id: 4,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "SpanIndex",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "last_start",
                                ),
                                ty: UntrackedSymbol {
                                    id: 4,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "EraIndex",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "last_nonzero_slash",
                                ),
                                ty: UntrackedSymbol {
                                    id: 4,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "EraIndex",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "prior",
                                ),
                                ty: UntrackedSymbol {
                                    id: 109,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "Vec<EraIndex>",
                                ),
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 554,
            ty: Type {
                path: Path {
                    segments: [
                        "pallet_staking",
                        "slashing",
                        "SpanRecord",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "Balance",
                        ty: Some(
                            UntrackedSymbol {
                                id: 6,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ),
                    },
                ],
                type_def: Composite(
                    TypeDefComposite {
                        fields: [
                            Field {
                                name: Some(
                                    "slashed",
                                ),
                                ty: UntrackedSymbol {
                                    id: 6,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "Balance",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "paid_out",
                                ),
                                ty: UntrackedSymbol {
                                    id: 6,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "Balance",
                                ),
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 555,
            ty: Type {
                path: Path {
                    segments: [],
                },
                type_params: [],
                type_def: Sequence(
                    TypeDefSequence {
                        type_param: UntrackedSymbol {
                            id: 556,
                            marker: PhantomData<fn() -> core::any::TypeId>,
                        },
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 556,
            ty: Type {
                path: Path {
                    segments: [],
                },
                type_params: [],
                type_def: Tuple(
                    TypeDefTuple {
                        fields: [
                            UntrackedSymbol {
                                id: 4,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                            UntrackedSymbol {
                                id: 44,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 557,
            ty: Type {
                path: Path {
                    segments: [
                        "pallet_staking",
                        "pallet",
                        "pallet",
                        "Error",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "T",
                        ty: None,
                    },
                ],
                type_def: Variant(
                    TypeDefVariant {
                        variants: [
                            Variant {
                                name: "NotController",
                                fields: [],
                                index: 0,
                                docs: [
                                    "Not a controller account.",
                                ],
                            },
                            Variant {
                                name: "NotStash",
                                fields: [],
                                index: 1,
                                docs: [
                                    "Not a stash account.",
                                ],
                            },
                            Variant {
                                name: "AlreadyBonded",
                                fields: [],
                                index: 2,
                                docs: [
                                    "Stash is already bonded.",
                                ],
                            },
                            Variant {
                                name: "AlreadyPaired",
                                fields: [],
                                index: 3,
                                docs: [
                                    "Controller is already paired.",
                                ],
                            },
                            Variant {
                                name: "EmptyTargets",
                                fields: [],
                                index: 4,
                                docs: [
                                    "Targets cannot be empty.",
                                ],
                            },
                            Variant {
                                name: "DuplicateIndex",
                                fields: [],
                                index: 5,
                                docs: [
                                    "Duplicate index.",
                                ],
                            },
                            Variant {
                                name: "InvalidSlashIndex",
                                fields: [],
                                index: 6,
                                docs: [
                                    "Slash record index out of bounds.",
                                ],
                            },
                            Variant {
                                name: "InsufficientBond",
                                fields: [],
                                index: 7,
                                docs: [
                                    "Cannot have a validator or nominator role, with value less than the minimum defined by",
                                    "governance (see `MinValidatorBond` and `MinNominatorBond`). If unbonding is the",
                                    "intention, `chill` first to remove one's role as validator/nominator.",
                                ],
                            },
                            Variant {
                                name: "NoMoreChunks",
                                fields: [],
                                index: 8,
                                docs: [
                                    "Can not schedule more unlock chunks.",
                                ],
                            },
                            Variant {
                                name: "NoUnlockChunk",
                                fields: [],
                                index: 9,
                                docs: [
                                    "Can not rebond without unlocking chunks.",
                                ],
                            },
                            Variant {
                                name: "FundedTarget",
                                fields: [],
                                index: 10,
                                docs: [
                                    "Attempting to target a stash that still has funds.",
                                ],
                            },
                            Variant {
                                name: "InvalidEraToReward",
                                fields: [],
                                index: 11,
                                docs: [
                                    "Invalid era to reward.",
                                ],
                            },
                            Variant {
                                name: "InvalidNumberOfNominations",
                                fields: [],
                                index: 12,
                                docs: [
                                    "Invalid number of nominations.",
                                ],
                            },
                            Variant {
                                name: "NotSortedAndUnique",
                                fields: [],
                                index: 13,
                                docs: [
                                    "Items are not sorted and unique.",
                                ],
                            },
                            Variant {
                                name: "AlreadyClaimed",
                                fields: [],
                                index: 14,
                                docs: [
                                    "Rewards for this era have already been claimed for this validator.",
                                ],
                            },
                            Variant {
                                name: "IncorrectHistoryDepth",
                                fields: [],
                                index: 15,
                                docs: [
                                    "Incorrect previous history depth input provided.",
                                ],
                            },
                            Variant {
                                name: "IncorrectSlashingSpans",
                                fields: [],
                                index: 16,
                                docs: [
                                    "Incorrect number of slashing spans provided.",
                                ],
                            },
                            Variant {
                                name: "BadState",
                                fields: [],
                                index: 17,
                                docs: [
                                    "Internal state has become somehow corrupted and the operation cannot continue.",
                                ],
                            },
                            Variant {
                                name: "TooManyTargets",
                                fields: [],
                                index: 18,
                                docs: [
                                    "Too many nomination targets supplied.",
                                ],
                            },
                            Variant {
                                name: "BadTarget",
                                fields: [],
                                index: 19,
                                docs: [
                                    "A nomination target was supplied that was blocked or otherwise not a validator.",
                                ],
                            },
                            Variant {
                                name: "CannotChillOther",
                                fields: [],
                                index: 20,
                                docs: [
                                    "The user has enough bond and thus cannot be chilled forcefully by an external person.",
                                ],
                            },
                            Variant {
                                name: "TooManyNominators",
                                fields: [],
                                index: 21,
                                docs: [
                                    "There are too many nominators in the system. Governance needs to adjust the staking",
                                    "settings to keep things safe for the runtime.",
                                ],
                            },
                            Variant {
                                name: "TooManyValidators",
                                fields: [],
                                index: 22,
                                docs: [
                                    "There are too many validator candidates in the system. Governance needs to adjust the",
                                    "staking settings to keep things safe for the runtime.",
                                ],
                            },
                            Variant {
                                name: "CommissionTooLow",
                                fields: [],
                                index: 23,
                                docs: [
                                    "Commission is too low. Must be at least `MinCommission`.",
                                ],
                            },
                            Variant {
                                name: "BoundNotMet",
                                fields: [],
                                index: 24,
                                docs: [
                                    "Some bound is not met.",
                                ],
                            },
                        ],
                    },
                ),
                docs: [
                    "The `Error` enum of this pallet.",
                ],
            },
        },
        PortableType {
            id: 558,
            ty: Type {
                path: Path {
                    segments: [
                        "sp_staking",
                        "offence",
                        "OffenceDetails",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "Reporter",
                        ty: Some(
                            UntrackedSymbol {
                                id: 0,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ),
                    },
                    TypeParameter {
                        name: "Offender",
                        ty: Some(
                            UntrackedSymbol {
                                id: 58,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ),
                    },
                ],
                type_def: Composite(
                    TypeDefComposite {
                        fields: [
                            Field {
                                name: Some(
                                    "offender",
                                ),
                                ty: UntrackedSymbol {
                                    id: 58,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "Offender",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "reporters",
                                ),
                                ty: UntrackedSymbol {
                                    id: 104,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "Vec<Reporter>",
                                ),
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 559,
            ty: Type {
                path: Path {
                    segments: [],
                },
                type_params: [],
                type_def: Tuple(
                    TypeDefTuple {
                        fields: [
                            UntrackedSymbol {
                                id: 47,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                            UntrackedSymbol {
                                id: 13,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 560,
            ty: Type {
                path: Path {
                    segments: [],
                },
                type_params: [],
                type_def: Sequence(
                    TypeDefSequence {
                        type_param: UntrackedSymbol {
                            id: 561,
                            marker: PhantomData<fn() -> core::any::TypeId>,
                        },
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 561,
            ty: Type {
                path: Path {
                    segments: [],
                },
                type_params: [],
                type_def: Tuple(
                    TypeDefTuple {
                        fields: [
                            UntrackedSymbol {
                                id: 0,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                            UntrackedSymbol {
                                id: 115,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 562,
            ty: Type {
                path: Path {
                    segments: [],
                },
                type_params: [],
                type_def: Tuple(
                    TypeDefTuple {
                        fields: [
                            UntrackedSymbol {
                                id: 563,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                            UntrackedSymbol {
                                id: 13,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 563,
            ty: Type {
                path: Path {
                    segments: [
                        "sp_core",
                        "crypto",
                        "KeyTypeId",
                    ],
                },
                type_params: [],
                type_def: Composite(
                    TypeDefComposite {
                        fields: [
                            Field {
                                name: None,
                                ty: UntrackedSymbol {
                                    id: 17,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "[u8; 4]",
                                ),
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 564,
            ty: Type {
                path: Path {
                    segments: [
                        "pallet_session",
                        "pallet",
                        "Error",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "T",
                        ty: None,
                    },
                ],
                type_def: Variant(
                    TypeDefVariant {
                        variants: [
                            Variant {
                                name: "InvalidProof",
                                fields: [],
                                index: 0,
                                docs: [
                                    "Invalid ownership proof.",
                                ],
                            },
                            Variant {
                                name: "NoAssociatedValidatorId",
                                fields: [],
                                index: 1,
                                docs: [
                                    "No associated validator ID for account.",
                                ],
                            },
                            Variant {
                                name: "DuplicatedKey",
                                fields: [],
                                index: 2,
                                docs: [
                                    "Registered duplicate key.",
                                ],
                            },
                            Variant {
                                name: "NoKeys",
                                fields: [],
                                index: 3,
                                docs: [
                                    "No keys are associated with this account.",
                                ],
                            },
                            Variant {
                                name: "NoAccount",
                                fields: [],
                                index: 4,
                                docs: [
                                    "Key setting account is not live, so it's impossible to associate keys.",
                                ],
                            },
                        ],
                    },
                ),
                docs: [
                    "Error for the session pallet.",
                ],
            },
        },
        PortableType {
            id: 565,
            ty: Type {
                path: Path {
                    segments: [
                        "pallet_grandpa",
                        "StoredState",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "N",
                        ty: Some(
                            UntrackedSymbol {
                                id: 4,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ),
                    },
                ],
                type_def: Variant(
                    TypeDefVariant {
                        variants: [
                            Variant {
                                name: "Live",
                                fields: [],
                                index: 0,
                                docs: [],
                            },
                            Variant {
                                name: "PendingPause",
                                fields: [
                                    Field {
                                        name: Some(
                                            "scheduled_at",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 4,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "N",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "delay",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 4,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "N",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 1,
                                docs: [],
                            },
                            Variant {
                                name: "Paused",
                                fields: [],
                                index: 2,
                                docs: [],
                            },
                            Variant {
                                name: "PendingResume",
                                fields: [
                                    Field {
                                        name: Some(
                                            "scheduled_at",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 4,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "N",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "delay",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 4,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "N",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 3,
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 566,
            ty: Type {
                path: Path {
                    segments: [
                        "pallet_grandpa",
                        "StoredPendingChange",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "N",
                        ty: Some(
                            UntrackedSymbol {
                                id: 4,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ),
                    },
                    TypeParameter {
                        name: "Limit",
                        ty: None,
                    },
                ],
                type_def: Composite(
                    TypeDefComposite {
                        fields: [
                            Field {
                                name: Some(
                                    "scheduled_at",
                                ),
                                ty: UntrackedSymbol {
                                    id: 4,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "N",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "delay",
                                ),
                                ty: UntrackedSymbol {
                                    id: 4,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "N",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "next_authorities",
                                ),
                                ty: UntrackedSymbol {
                                    id: 567,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "BoundedAuthorityList<Limit>",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "forced",
                                ),
                                ty: UntrackedSymbol {
                                    id: 137,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "Option<N>",
                                ),
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 567,
            ty: Type {
                path: Path {
                    segments: [
                        "bounded_collections",
                        "weak_bounded_vec",
                        "WeakBoundedVec",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "T",
                        ty: Some(
                            UntrackedSymbol {
                                id: 51,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ),
                    },
                    TypeParameter {
                        name: "S",
                        ty: None,
                    },
                ],
                type_def: Composite(
                    TypeDefComposite {
                        fields: [
                            Field {
                                name: None,
                                ty: UntrackedSymbol {
                                    id: 50,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "Vec<T>",
                                ),
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 568,
            ty: Type {
                path: Path {
                    segments: [
                        "pallet_grandpa",
                        "pallet",
                        "Error",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "T",
                        ty: None,
                    },
                ],
                type_def: Variant(
                    TypeDefVariant {
                        variants: [
                            Variant {
                                name: "PauseFailed",
                                fields: [],
                                index: 0,
                                docs: [
                                    "Attempt to signal GRANDPA pause when the authority set isn't live",
                                    "(either paused or already pending pause).",
                                ],
                            },
                            Variant {
                                name: "ResumeFailed",
                                fields: [],
                                index: 1,
                                docs: [
                                    "Attempt to signal GRANDPA resume when the authority set isn't paused",
                                    "(either live or already pending resume).",
                                ],
                            },
                            Variant {
                                name: "ChangePending",
                                fields: [],
                                index: 2,
                                docs: [
                                    "Attempt to signal GRANDPA change with one already pending.",
                                ],
                            },
                            Variant {
                                name: "TooSoon",
                                fields: [],
                                index: 3,
                                docs: [
                                    "Cannot signal forced change so soon after last.",
                                ],
                            },
                            Variant {
                                name: "InvalidKeyOwnershipProof",
                                fields: [],
                                index: 4,
                                docs: [
                                    "A key ownership proof provided as part of an equivocation report is invalid.",
                                ],
                            },
                            Variant {
                                name: "InvalidEquivocationProof",
                                fields: [],
                                index: 5,
                                docs: [
                                    "An equivocation proof provided as part of an equivocation report is invalid.",
                                ],
                            },
                            Variant {
                                name: "DuplicateOffenceReport",
                                fields: [],
                                index: 6,
                                docs: [
                                    "A given equivocation report is valid but already previously reported.",
                                ],
                            },
                        ],
                    },
                ),
                docs: [
                    "The `Error` enum of this pallet.",
                ],
            },
        },
        PortableType {
            id: 569,
            ty: Type {
                path: Path {
                    segments: [
                        "bounded_collections",
                        "weak_bounded_vec",
                        "WeakBoundedVec",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "T",
                        ty: Some(
                            UntrackedSymbol {
                                id: 55,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ),
                    },
                    TypeParameter {
                        name: "S",
                        ty: None,
                    },
                ],
                type_def: Composite(
                    TypeDefComposite {
                        fields: [
                            Field {
                                name: None,
                                ty: UntrackedSymbol {
                                    id: 570,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "Vec<T>",
                                ),
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 570,
            ty: Type {
                path: Path {
                    segments: [],
                },
                type_params: [],
                type_def: Sequence(
                    TypeDefSequence {
                        type_param: UntrackedSymbol {
                            id: 55,
                            marker: PhantomData<fn() -> core::any::TypeId>,
                        },
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 571,
            ty: Type {
                path: Path {
                    segments: [
                        "pallet_im_online",
                        "pallet",
                        "Error",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "T",
                        ty: None,
                    },
                ],
                type_def: Variant(
                    TypeDefVariant {
                        variants: [
                            Variant {
                                name: "InvalidKey",
                                fields: [],
                                index: 0,
                                docs: [
                                    "Non existent public key.",
                                ],
                            },
                            Variant {
                                name: "DuplicatedHeartbeat",
                                fields: [],
                                index: 1,
                                docs: [
                                    "Duplicated heartbeat.",
                                ],
                            },
                        ],
                    },
                ),
                docs: [
                    "The `Error` enum of this pallet.",
                ],
            },
        },
        PortableType {
            id: 572,
            ty: Type {
                path: Path {
                    segments: [
                        "bounded_collections",
                        "bounded_vec",
                        "BoundedVec",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "T",
                        ty: Some(
                            UntrackedSymbol {
                                id: 573,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ),
                    },
                    TypeParameter {
                        name: "S",
                        ty: None,
                    },
                ],
                type_def: Composite(
                    TypeDefComposite {
                        fields: [
                            Field {
                                name: None,
                                ty: UntrackedSymbol {
                                    id: 574,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "Vec<T>",
                                ),
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 573,
            ty: Type {
                path: Path {
                    segments: [],
                },
                type_params: [],
                type_def: Tuple(
                    TypeDefTuple {
                        fields: [
                            UntrackedSymbol {
                                id: 4,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                            UntrackedSymbol {
                                id: 78,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                            UntrackedSymbol {
                                id: 0,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 574,
            ty: Type {
                path: Path {
                    segments: [],
                },
                type_params: [],
                type_def: Sequence(
                    TypeDefSequence {
                        type_param: UntrackedSymbol {
                            id: 573,
                            marker: PhantomData<fn() -> core::any::TypeId>,
                        },
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 575,
            ty: Type {
                path: Path {
                    segments: [],
                },
                type_params: [],
                type_def: Tuple(
                    TypeDefTuple {
                        fields: [
                            UntrackedSymbol {
                                id: 576,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                            UntrackedSymbol {
                                id: 6,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 576,
            ty: Type {
                path: Path {
                    segments: [
                        "bounded_collections",
                        "bounded_vec",
                        "BoundedVec",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "T",
                        ty: Some(
                            UntrackedSymbol {
                                id: 0,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ),
                    },
                    TypeParameter {
                        name: "S",
                        ty: None,
                    },
                ],
                type_def: Composite(
                    TypeDefComposite {
                        fields: [
                            Field {
                                name: None,
                                ty: UntrackedSymbol {
                                    id: 104,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "Vec<T>",
                                ),
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 577,
            ty: Type {
                path: Path {
                    segments: [
                        "pallet_democracy",
                        "types",
                        "ReferendumInfo",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "BlockNumber",
                        ty: Some(
                            UntrackedSymbol {
                                id: 4,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ),
                    },
                    TypeParameter {
                        name: "Proposal",
                        ty: Some(
                            UntrackedSymbol {
                                id: 78,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ),
                    },
                    TypeParameter {
                        name: "Balance",
                        ty: Some(
                            UntrackedSymbol {
                                id: 6,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ),
                    },
                ],
                type_def: Variant(
                    TypeDefVariant {
                        variants: [
                            Variant {
                                name: "Ongoing",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 578,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "ReferendumStatus<BlockNumber, Proposal, Balance>",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 0,
                                docs: [],
                            },
                            Variant {
                                name: "Finished",
                                fields: [
                                    Field {
                                        name: Some(
                                            "approved",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 44,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "bool",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "end",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 4,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "BlockNumber",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 1,
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 578,
            ty: Type {
                path: Path {
                    segments: [
                        "pallet_democracy",
                        "types",
                        "ReferendumStatus",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "BlockNumber",
                        ty: Some(
                            UntrackedSymbol {
                                id: 4,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ),
                    },
                    TypeParameter {
                        name: "Proposal",
                        ty: Some(
                            UntrackedSymbol {
                                id: 78,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ),
                    },
                    TypeParameter {
                        name: "Balance",
                        ty: Some(
                            UntrackedSymbol {
                                id: 6,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ),
                    },
                ],
                type_def: Composite(
                    TypeDefComposite {
                        fields: [
                            Field {
                                name: Some(
                                    "end",
                                ),
                                ty: UntrackedSymbol {
                                    id: 4,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "BlockNumber",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "proposal",
                                ),
                                ty: UntrackedSymbol {
                                    id: 78,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "Proposal",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "threshold",
                                ),
                                ty: UntrackedSymbol {
                                    id: 64,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "VoteThreshold",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "delay",
                                ),
                                ty: UntrackedSymbol {
                                    id: 4,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "BlockNumber",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "tally",
                                ),
                                ty: UntrackedSymbol {
                                    id: 579,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "Tally<Balance>",
                                ),
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 579,
            ty: Type {
                path: Path {
                    segments: [
                        "pallet_democracy",
                        "types",
                        "Tally",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "Balance",
                        ty: Some(
                            UntrackedSymbol {
                                id: 6,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ),
                    },
                ],
                type_def: Composite(
                    TypeDefComposite {
                        fields: [
                            Field {
                                name: Some(
                                    "ayes",
                                ),
                                ty: UntrackedSymbol {
                                    id: 6,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "Balance",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "nays",
                                ),
                                ty: UntrackedSymbol {
                                    id: 6,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "Balance",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "turnout",
                                ),
                                ty: UntrackedSymbol {
                                    id: 6,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "Balance",
                                ),
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 580,
            ty: Type {
                path: Path {
                    segments: [
                        "pallet_democracy",
                        "vote",
                        "Voting",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "Balance",
                        ty: Some(
                            UntrackedSymbol {
                                id: 6,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ),
                    },
                    TypeParameter {
                        name: "AccountId",
                        ty: Some(
                            UntrackedSymbol {
                                id: 0,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ),
                    },
                    TypeParameter {
                        name: "BlockNumber",
                        ty: Some(
                            UntrackedSymbol {
                                id: 4,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ),
                    },
                    TypeParameter {
                        name: "MaxVotes",
                        ty: None,
                    },
                ],
                type_def: Variant(
                    TypeDefVariant {
                        variants: [
                            Variant {
                                name: "Direct",
                                fields: [
                                    Field {
                                        name: Some(
                                            "votes",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 581,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "BoundedVec<(ReferendumIndex, AccountVote<Balance>), MaxVotes>",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "delegations",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 584,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "Delegations<Balance>",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "prior",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 585,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "PriorLock<BlockNumber, Balance>",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 0,
                                docs: [],
                            },
                            Variant {
                                name: "Delegating",
                                fields: [
                                    Field {
                                        name: Some(
                                            "balance",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 6,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "Balance",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "target",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 0,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "AccountId",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "conviction",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 136,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "Conviction",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "delegations",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 584,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "Delegations<Balance>",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "prior",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 585,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "PriorLock<BlockNumber, Balance>",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 1,
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 581,
            ty: Type {
                path: Path {
                    segments: [
                        "bounded_collections",
                        "bounded_vec",
                        "BoundedVec",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "T",
                        ty: Some(
                            UntrackedSymbol {
                                id: 582,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ),
                    },
                    TypeParameter {
                        name: "S",
                        ty: None,
                    },
                ],
                type_def: Composite(
                    TypeDefComposite {
                        fields: [
                            Field {
                                name: None,
                                ty: UntrackedSymbol {
                                    id: 583,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "Vec<T>",
                                ),
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 582,
            ty: Type {
                path: Path {
                    segments: [],
                },
                type_params: [],
                type_def: Tuple(
                    TypeDefTuple {
                        fields: [
                            UntrackedSymbol {
                                id: 4,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                            UntrackedSymbol {
                                id: 65,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 583,
            ty: Type {
                path: Path {
                    segments: [],
                },
                type_params: [],
                type_def: Sequence(
                    TypeDefSequence {
                        type_param: UntrackedSymbol {
                            id: 582,
                            marker: PhantomData<fn() -> core::any::TypeId>,
                        },
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 584,
            ty: Type {
                path: Path {
                    segments: [
                        "pallet_democracy",
                        "types",
                        "Delegations",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "Balance",
                        ty: Some(
                            UntrackedSymbol {
                                id: 6,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ),
                    },
                ],
                type_def: Composite(
                    TypeDefComposite {
                        fields: [
                            Field {
                                name: Some(
                                    "votes",
                                ),
                                ty: UntrackedSymbol {
                                    id: 6,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "Balance",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "capital",
                                ),
                                ty: UntrackedSymbol {
                                    id: 6,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "Balance",
                                ),
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 585,
            ty: Type {
                path: Path {
                    segments: [
                        "pallet_democracy",
                        "vote",
                        "PriorLock",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "BlockNumber",
                        ty: Some(
                            UntrackedSymbol {
                                id: 4,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ),
                    },
                    TypeParameter {
                        name: "Balance",
                        ty: Some(
                            UntrackedSymbol {
                                id: 6,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ),
                    },
                ],
                type_def: Composite(
                    TypeDefComposite {
                        fields: [
                            Field {
                                name: None,
                                ty: UntrackedSymbol {
                                    id: 4,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "BlockNumber",
                                ),
                                docs: [],
                            },
                            Field {
                                name: None,
                                ty: UntrackedSymbol {
                                    id: 6,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "Balance",
                                ),
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 586,
            ty: Type {
                path: Path {
                    segments: [],
                },
                type_params: [],
                type_def: Tuple(
                    TypeDefTuple {
                        fields: [
                            UntrackedSymbol {
                                id: 78,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                            UntrackedSymbol {
                                id: 64,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 587,
            ty: Type {
                path: Path {
                    segments: [],
                },
                type_params: [],
                type_def: Tuple(
                    TypeDefTuple {
                        fields: [
                            UntrackedSymbol {
                                id: 4,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                            UntrackedSymbol {
                                id: 576,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 588,
            ty: Type {
                path: Path {
                    segments: [
                        "pallet_democracy",
                        "pallet",
                        "Error",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "T",
                        ty: None,
                    },
                ],
                type_def: Variant(
                    TypeDefVariant {
                        variants: [
                            Variant {
                                name: "ValueLow",
                                fields: [],
                                index: 0,
                                docs: [
                                    "Value too low",
                                ],
                            },
                            Variant {
                                name: "ProposalMissing",
                                fields: [],
                                index: 1,
                                docs: [
                                    "Proposal does not exist",
                                ],
                            },
                            Variant {
                                name: "AlreadyCanceled",
                                fields: [],
                                index: 2,
                                docs: [
                                    "Cannot cancel the same proposal twice",
                                ],
                            },
                            Variant {
                                name: "DuplicateProposal",
                                fields: [],
                                index: 3,
                                docs: [
                                    "Proposal already made",
                                ],
                            },
                            Variant {
                                name: "ProposalBlacklisted",
                                fields: [],
                                index: 4,
                                docs: [
                                    "Proposal still blacklisted",
                                ],
                            },
                            Variant {
                                name: "NotSimpleMajority",
                                fields: [],
                                index: 5,
                                docs: [
                                    "Next external proposal not simple majority",
                                ],
                            },
                            Variant {
                                name: "InvalidHash",
                                fields: [],
                                index: 6,
                                docs: [
                                    "Invalid hash",
                                ],
                            },
                            Variant {
                                name: "NoProposal",
                                fields: [],
                                index: 7,
                                docs: [
                                    "No external proposal",
                                ],
                            },
                            Variant {
                                name: "AlreadyVetoed",
                                fields: [],
                                index: 8,
                                docs: [
                                    "Identity may not veto a proposal twice",
                                ],
                            },
                            Variant {
                                name: "ReferendumInvalid",
                                fields: [],
                                index: 9,
                                docs: [
                                    "Vote given for invalid referendum",
                                ],
                            },
                            Variant {
                                name: "NoneWaiting",
                                fields: [],
                                index: 10,
                                docs: [
                                    "No proposals waiting",
                                ],
                            },
                            Variant {
                                name: "NotVoter",
                                fields: [],
                                index: 11,
                                docs: [
                                    "The given account did not vote on the referendum.",
                                ],
                            },
                            Variant {
                                name: "NoPermission",
                                fields: [],
                                index: 12,
                                docs: [
                                    "The actor has no permission to conduct the action.",
                                ],
                            },
                            Variant {
                                name: "AlreadyDelegating",
                                fields: [],
                                index: 13,
                                docs: [
                                    "The account is already delegating.",
                                ],
                            },
                            Variant {
                                name: "InsufficientFunds",
                                fields: [],
                                index: 14,
                                docs: [
                                    "Too high a balance was provided that the account cannot afford.",
                                ],
                            },
                            Variant {
                                name: "NotDelegating",
                                fields: [],
                                index: 15,
                                docs: [
                                    "The account is not currently delegating.",
                                ],
                            },
                            Variant {
                                name: "VotesExist",
                                fields: [],
                                index: 16,
                                docs: [
                                    "The account currently has votes attached to it and the operation cannot succeed until",
                                    "these are removed, either through `unvote` or `reap_vote`.",
                                ],
                            },
                            Variant {
                                name: "InstantNotAllowed",
                                fields: [],
                                index: 17,
                                docs: [
                                    "The instant referendum origin is currently disallowed.",
                                ],
                            },
                            Variant {
                                name: "Nonsense",
                                fields: [],
                                index: 18,
                                docs: [
                                    "Delegation to oneself makes no sense.",
                                ],
                            },
                            Variant {
                                name: "WrongUpperBound",
                                fields: [],
                                index: 19,
                                docs: [
                                    "Invalid upper bound.",
                                ],
                            },
                            Variant {
                                name: "MaxVotesReached",
                                fields: [],
                                index: 20,
                                docs: [
                                    "Maximum number of votes reached.",
                                ],
                            },
                            Variant {
                                name: "TooMany",
                                fields: [],
                                index: 21,
                                docs: [
                                    "Maximum number of items reached.",
                                ],
                            },
                            Variant {
                                name: "VotingPeriodLow",
                                fields: [],
                                index: 22,
                                docs: [
                                    "Voting period too low",
                                ],
                            },
                            Variant {
                                name: "PreimageNotExist",
                                fields: [],
                                index: 23,
                                docs: [
                                    "The preimage does not exist.",
                                ],
                            },
                        ],
                    },
                ),
                docs: [
                    "The `Error` enum of this pallet.",
                ],
            },
        },
        PortableType {
            id: 589,
            ty: Type {
                path: Path {
                    segments: [
                        "bounded_collections",
                        "bounded_vec",
                        "BoundedVec",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "T",
                        ty: Some(
                            UntrackedSymbol {
                                id: 12,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ),
                    },
                    TypeParameter {
                        name: "S",
                        ty: None,
                    },
                ],
                type_def: Composite(
                    TypeDefComposite {
                        fields: [
                            Field {
                                name: None,
                                ty: UntrackedSymbol {
                                    id: 476,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "Vec<T>",
                                ),
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 590,
            ty: Type {
                path: Path {
                    segments: [
                        "pallet_collective",
                        "Votes",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "AccountId",
                        ty: Some(
                            UntrackedSymbol {
                                id: 0,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ),
                    },
                    TypeParameter {
                        name: "BlockNumber",
                        ty: Some(
                            UntrackedSymbol {
                                id: 4,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ),
                    },
                ],
                type_def: Composite(
                    TypeDefComposite {
                        fields: [
                            Field {
                                name: Some(
                                    "index",
                                ),
                                ty: UntrackedSymbol {
                                    id: 4,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "ProposalIndex",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "threshold",
                                ),
                                ty: UntrackedSymbol {
                                    id: 4,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "MemberCount",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "ayes",
                                ),
                                ty: UntrackedSymbol {
                                    id: 104,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "Vec<AccountId>",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "nays",
                                ),
                                ty: UntrackedSymbol {
                                    id: 104,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "Vec<AccountId>",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "end",
                                ),
                                ty: UntrackedSymbol {
                                    id: 4,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "BlockNumber",
                                ),
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 591,
            ty: Type {
                path: Path {
                    segments: [
                        "pallet_collective",
                        "pallet",
                        "Error",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "T",
                        ty: None,
                    },
                    TypeParameter {
                        name: "I",
                        ty: None,
                    },
                ],
                type_def: Variant(
                    TypeDefVariant {
                        variants: [
                            Variant {
                                name: "NotMember",
                                fields: [],
                                index: 0,
                                docs: [
                                    "Account is not a member",
                                ],
                            },
                            Variant {
                                name: "DuplicateProposal",
                                fields: [],
                                index: 1,
                                docs: [
                                    "Duplicate proposals not allowed",
                                ],
                            },
                            Variant {
                                name: "ProposalMissing",
                                fields: [],
                                index: 2,
                                docs: [
                                    "Proposal must exist",
                                ],
                            },
                            Variant {
                                name: "WrongIndex",
                                fields: [],
                                index: 3,
                                docs: [
                                    "Mismatched index",
                                ],
                            },
                            Variant {
                                name: "DuplicateVote",
                                fields: [],
                                index: 4,
                                docs: [
                                    "Duplicate vote ignored",
                                ],
                            },
                            Variant {
                                name: "AlreadyInitialized",
                                fields: [],
                                index: 5,
                                docs: [
                                    "Members are already initialized!",
                                ],
                            },
                            Variant {
                                name: "TooEarly",
                                fields: [],
                                index: 6,
                                docs: [
                                    "The close call was made too early, before the end of the voting.",
                                ],
                            },
                            Variant {
                                name: "TooManyProposals",
                                fields: [],
                                index: 7,
                                docs: [
                                    "There can only be a maximum of `MaxProposals` active proposals.",
                                ],
                            },
                            Variant {
                                name: "WrongProposalWeight",
                                fields: [],
                                index: 8,
                                docs: [
                                    "The given weight bound for the proposal was too low.",
                                ],
                            },
                            Variant {
                                name: "WrongProposalLength",
                                fields: [],
                                index: 9,
                                docs: [
                                    "The given length bound for the proposal was too low.",
                                ],
                            },
                        ],
                    },
                ),
                docs: [
                    "The `Error` enum of this pallet.",
                ],
            },
        },
        PortableType {
            id: 592,
            ty: Type {
                path: Path {
                    segments: [
                        "bounded_collections",
                        "bounded_vec",
                        "BoundedVec",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "T",
                        ty: Some(
                            UntrackedSymbol {
                                id: 12,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ),
                    },
                    TypeParameter {
                        name: "S",
                        ty: None,
                    },
                ],
                type_def: Composite(
                    TypeDefComposite {
                        fields: [
                            Field {
                                name: None,
                                ty: UntrackedSymbol {
                                    id: 476,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "Vec<T>",
                                ),
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 593,
            ty: Type {
                path: Path {
                    segments: [
                        "pallet_collective",
                        "pallet",
                        "Error2",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "T",
                        ty: None,
                    },
                    TypeParameter {
                        name: "I",
                        ty: None,
                    },
                ],
                type_def: Variant(
                    TypeDefVariant {
                        variants: [
                            Variant {
                                name: "NotMember",
                                fields: [],
                                index: 0,
                                docs: [
                                    "Account is not a member",
                                ],
                            },
                            Variant {
                                name: "DuplicateProposal",
                                fields: [],
                                index: 1,
                                docs: [
                                    "Duplicate proposals not allowed",
                                ],
                            },
                            Variant {
                                name: "ProposalMissing",
                                fields: [],
                                index: 2,
                                docs: [
                                    "Proposal must exist",
                                ],
                            },
                            Variant {
                                name: "WrongIndex",
                                fields: [],
                                index: 3,
                                docs: [
                                    "Mismatched index",
                                ],
                            },
                            Variant {
                                name: "DuplicateVote",
                                fields: [],
                                index: 4,
                                docs: [
                                    "Duplicate vote ignored",
                                ],
                            },
                            Variant {
                                name: "AlreadyInitialized",
                                fields: [],
                                index: 5,
                                docs: [
                                    "Members are already initialized!",
                                ],
                            },
                            Variant {
                                name: "TooEarly",
                                fields: [],
                                index: 6,
                                docs: [
                                    "The close call was made too early, before the end of the voting.",
                                ],
                            },
                            Variant {
                                name: "TooManyProposals",
                                fields: [],
                                index: 7,
                                docs: [
                                    "There can only be a maximum of `MaxProposals` active proposals.",
                                ],
                            },
                            Variant {
                                name: "WrongProposalWeight",
                                fields: [],
                                index: 8,
                                docs: [
                                    "The given weight bound for the proposal was too low.",
                                ],
                            },
                            Variant {
                                name: "WrongProposalLength",
                                fields: [],
                                index: 9,
                                docs: [
                                    "The given length bound for the proposal was too low.",
                                ],
                            },
                        ],
                    },
                ),
                docs: [
                    "The `Error` enum of this pallet.",
                ],
            },
        },
        PortableType {
            id: 594,
            ty: Type {
                path: Path {
                    segments: [],
                },
                type_params: [],
                type_def: Sequence(
                    TypeDefSequence {
                        type_param: UntrackedSymbol {
                            id: 595,
                            marker: PhantomData<fn() -> core::any::TypeId>,
                        },
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 595,
            ty: Type {
                path: Path {
                    segments: [
                        "pallet_elections_phragmen",
                        "SeatHolder",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "AccountId",
                        ty: Some(
                            UntrackedSymbol {
                                id: 0,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ),
                    },
                    TypeParameter {
                        name: "Balance",
                        ty: Some(
                            UntrackedSymbol {
                                id: 6,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ),
                    },
                ],
                type_def: Composite(
                    TypeDefComposite {
                        fields: [
                            Field {
                                name: Some(
                                    "who",
                                ),
                                ty: UntrackedSymbol {
                                    id: 0,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "AccountId",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "stake",
                                ),
                                ty: UntrackedSymbol {
                                    id: 6,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "Balance",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "deposit",
                                ),
                                ty: UntrackedSymbol {
                                    id: 6,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "Balance",
                                ),
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 596,
            ty: Type {
                path: Path {
                    segments: [
                        "pallet_elections_phragmen",
                        "Voter",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "AccountId",
                        ty: Some(
                            UntrackedSymbol {
                                id: 0,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ),
                    },
                    TypeParameter {
                        name: "Balance",
                        ty: Some(
                            UntrackedSymbol {
                                id: 6,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ),
                    },
                ],
                type_def: Composite(
                    TypeDefComposite {
                        fields: [
                            Field {
                                name: Some(
                                    "votes",
                                ),
                                ty: UntrackedSymbol {
                                    id: 104,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "Vec<AccountId>",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "stake",
                                ),
                                ty: UntrackedSymbol {
                                    id: 6,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "Balance",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "deposit",
                                ),
                                ty: UntrackedSymbol {
                                    id: 6,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "Balance",
                                ),
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 597,
            ty: Type {
                path: Path {
                    segments: [
                        "pallet_elections_phragmen",
                        "pallet",
                        "Error",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "T",
                        ty: None,
                    },
                ],
                type_def: Variant(
                    TypeDefVariant {
                        variants: [
                            Variant {
                                name: "UnableToVote",
                                fields: [],
                                index: 0,
                                docs: [
                                    "Cannot vote when no candidates or members exist.",
                                ],
                            },
                            Variant {
                                name: "NoVotes",
                                fields: [],
                                index: 1,
                                docs: [
                                    "Must vote for at least one candidate.",
                                ],
                            },
                            Variant {
                                name: "TooManyVotes",
                                fields: [],
                                index: 2,
                                docs: [
                                    "Cannot vote more than candidates.",
                                ],
                            },
                            Variant {
                                name: "MaximumVotesExceeded",
                                fields: [],
                                index: 3,
                                docs: [
                                    "Cannot vote more than maximum allowed.",
                                ],
                            },
                            Variant {
                                name: "LowBalance",
                                fields: [],
                                index: 4,
                                docs: [
                                    "Cannot vote with stake less than minimum balance.",
                                ],
                            },
                            Variant {
                                name: "UnableToPayBond",
                                fields: [],
                                index: 5,
                                docs: [
                                    "Voter can not pay voting bond.",
                                ],
                            },
                            Variant {
                                name: "MustBeVoter",
                                fields: [],
                                index: 6,
                                docs: [
                                    "Must be a voter.",
                                ],
                            },
                            Variant {
                                name: "DuplicatedCandidate",
                                fields: [],
                                index: 7,
                                docs: [
                                    "Duplicated candidate submission.",
                                ],
                            },
                            Variant {
                                name: "TooManyCandidates",
                                fields: [],
                                index: 8,
                                docs: [
                                    "Too many candidates have been created.",
                                ],
                            },
                            Variant {
                                name: "MemberSubmit",
                                fields: [],
                                index: 9,
                                docs: [
                                    "Member cannot re-submit candidacy.",
                                ],
                            },
                            Variant {
                                name: "RunnerUpSubmit",
                                fields: [],
                                index: 10,
                                docs: [
                                    "Runner cannot re-submit candidacy.",
                                ],
                            },
                            Variant {
                                name: "InsufficientCandidateFunds",
                                fields: [],
                                index: 11,
                                docs: [
                                    "Candidate does not have enough funds.",
                                ],
                            },
                            Variant {
                                name: "NotMember",
                                fields: [],
                                index: 12,
                                docs: [
                                    "Not a member.",
                                ],
                            },
                            Variant {
                                name: "InvalidWitnessData",
                                fields: [],
                                index: 13,
                                docs: [
                                    "The provided count of number of candidates is incorrect.",
                                ],
                            },
                            Variant {
                                name: "InvalidVoteCount",
                                fields: [],
                                index: 14,
                                docs: [
                                    "The provided count of number of votes is incorrect.",
                                ],
                            },
                            Variant {
                                name: "InvalidRenouncing",
                                fields: [],
                                index: 15,
                                docs: [
                                    "The renouncing origin presented a wrong `Renouncing` parameter.",
                                ],
                            },
                            Variant {
                                name: "InvalidReplacement",
                                fields: [],
                                index: 16,
                                docs: [
                                    "Prediction regarding replacement after member removal is wrong.",
                                ],
                            },
                        ],
                    },
                ),
                docs: [
                    "The `Error` enum of this pallet.",
                ],
            },
        },
        PortableType {
            id: 598,
            ty: Type {
                path: Path {
                    segments: [
                        "bounded_collections",
                        "bounded_vec",
                        "BoundedVec",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "T",
                        ty: Some(
                            UntrackedSymbol {
                                id: 0,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ),
                    },
                    TypeParameter {
                        name: "S",
                        ty: None,
                    },
                ],
                type_def: Composite(
                    TypeDefComposite {
                        fields: [
                            Field {
                                name: None,
                                ty: UntrackedSymbol {
                                    id: 104,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "Vec<T>",
                                ),
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 599,
            ty: Type {
                path: Path {
                    segments: [
                        "pallet_membership",
                        "pallet",
                        "Error",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "T",
                        ty: None,
                    },
                    TypeParameter {
                        name: "I",
                        ty: None,
                    },
                ],
                type_def: Variant(
                    TypeDefVariant {
                        variants: [
                            Variant {
                                name: "AlreadyMember",
                                fields: [],
                                index: 0,
                                docs: [
                                    "Already a member.",
                                ],
                            },
                            Variant {
                                name: "NotMember",
                                fields: [],
                                index: 1,
                                docs: [
                                    "Not a member.",
                                ],
                            },
                            Variant {
                                name: "TooManyMembers",
                                fields: [],
                                index: 2,
                                docs: [
                                    "Too many members.",
                                ],
                            },
                        ],
                    },
                ),
                docs: [
                    "The `Error` enum of this pallet.",
                ],
            },
        },
        PortableType {
            id: 600,
            ty: Type {
                path: Path {
                    segments: [
                        "pallet_treasury",
                        "Proposal",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "AccountId",
                        ty: Some(
                            UntrackedSymbol {
                                id: 0,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ),
                    },
                    TypeParameter {
                        name: "Balance",
                        ty: Some(
                            UntrackedSymbol {
                                id: 6,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ),
                    },
                ],
                type_def: Composite(
                    TypeDefComposite {
                        fields: [
                            Field {
                                name: Some(
                                    "proposer",
                                ),
                                ty: UntrackedSymbol {
                                    id: 0,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "AccountId",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "value",
                                ),
                                ty: UntrackedSymbol {
                                    id: 6,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "Balance",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "beneficiary",
                                ),
                                ty: UntrackedSymbol {
                                    id: 0,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "AccountId",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "bond",
                                ),
                                ty: UntrackedSymbol {
                                    id: 6,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "Balance",
                                ),
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 601,
            ty: Type {
                path: Path {
                    segments: [
                        "bounded_collections",
                        "bounded_vec",
                        "BoundedVec",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "T",
                        ty: Some(
                            UntrackedSymbol {
                                id: 4,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ),
                    },
                    TypeParameter {
                        name: "S",
                        ty: None,
                    },
                ],
                type_def: Composite(
                    TypeDefComposite {
                        fields: [
                            Field {
                                name: None,
                                ty: UntrackedSymbol {
                                    id: 109,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "Vec<T>",
                                ),
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 602,
            ty: Type {
                path: Path {
                    segments: [
                        "sp_arithmetic",
                        "per_things",
                        "Permill",
                    ],
                },
                type_params: [],
                type_def: Composite(
                    TypeDefComposite {
                        fields: [
                            Field {
                                name: None,
                                ty: UntrackedSymbol {
                                    id: 4,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "u32",
                                ),
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 603,
            ty: Type {
                path: Path {
                    segments: [
                        "Option",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "T",
                        ty: Some(
                            UntrackedSymbol {
                                id: 6,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ),
                    },
                ],
                type_def: Variant(
                    TypeDefVariant {
                        variants: [
                            Variant {
                                name: "None",
                                fields: [],
                                index: 0,
                                docs: [],
                            },
                            Variant {
                                name: "Some",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 6,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: None,
                                        docs: [],
                                    },
                                ],
                                index: 1,
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 604,
            ty: Type {
                path: Path {
                    segments: [
                        "frame_support",
                        "PalletId",
                    ],
                },
                type_params: [],
                type_def: Composite(
                    TypeDefComposite {
                        fields: [
                            Field {
                                name: None,
                                ty: UntrackedSymbol {
                                    id: 194,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "[u8; 8]",
                                ),
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 605,
            ty: Type {
                path: Path {
                    segments: [
                        "pallet_treasury",
                        "pallet",
                        "Error",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "T",
                        ty: None,
                    },
                    TypeParameter {
                        name: "I",
                        ty: None,
                    },
                ],
                type_def: Variant(
                    TypeDefVariant {
                        variants: [
                            Variant {
                                name: "InsufficientProposersBalance",
                                fields: [],
                                index: 0,
                                docs: [
                                    "Proposer's balance is too low.",
                                ],
                            },
                            Variant {
                                name: "InvalidIndex",
                                fields: [],
                                index: 1,
                                docs: [
                                    "No proposal or bounty at that index.",
                                ],
                            },
                            Variant {
                                name: "TooManyApprovals",
                                fields: [],
                                index: 2,
                                docs: [
                                    "Too many approvals in the queue.",
                                ],
                            },
                            Variant {
                                name: "InsufficientPermission",
                                fields: [],
                                index: 3,
                                docs: [
                                    "The spend origin is valid but the amount it is allowed to spend is lower than the",
                                    "amount to be spent.",
                                ],
                            },
                            Variant {
                                name: "ProposalNotApproved",
                                fields: [],
                                index: 4,
                                docs: [
                                    "Proposal has not been approved.",
                                ],
                            },
                        ],
                    },
                ),
                docs: [
                    "Error for the treasury pallet.",
                ],
            },
        },
        PortableType {
            id: 606,
            ty: Type {
                path: Path {
                    segments: [],
                },
                type_params: [],
                type_def: Tuple(
                    TypeDefTuple {
                        fields: [
                            UntrackedSymbol {
                                id: 0,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                            UntrackedSymbol {
                                id: 77,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 607,
            ty: Type {
                path: Path {
                    segments: [
                        "pallet_conviction_voting",
                        "vote",
                        "Voting",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "Balance",
                        ty: Some(
                            UntrackedSymbol {
                                id: 6,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ),
                    },
                    TypeParameter {
                        name: "AccountId",
                        ty: Some(
                            UntrackedSymbol {
                                id: 0,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ),
                    },
                    TypeParameter {
                        name: "BlockNumber",
                        ty: Some(
                            UntrackedSymbol {
                                id: 4,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ),
                    },
                    TypeParameter {
                        name: "PollIndex",
                        ty: Some(
                            UntrackedSymbol {
                                id: 4,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ),
                    },
                    TypeParameter {
                        name: "MaxVotes",
                        ty: None,
                    },
                ],
                type_def: Variant(
                    TypeDefVariant {
                        variants: [
                            Variant {
                                name: "Casting",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 608,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "Casting<Balance, BlockNumber, PollIndex, MaxVotes>",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 0,
                                docs: [],
                            },
                            Variant {
                                name: "Delegating",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 614,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "Delegating<Balance, AccountId, BlockNumber>",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 1,
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 608,
            ty: Type {
                path: Path {
                    segments: [
                        "pallet_conviction_voting",
                        "vote",
                        "Casting",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "Balance",
                        ty: Some(
                            UntrackedSymbol {
                                id: 6,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ),
                    },
                    TypeParameter {
                        name: "BlockNumber",
                        ty: Some(
                            UntrackedSymbol {
                                id: 4,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ),
                    },
                    TypeParameter {
                        name: "PollIndex",
                        ty: Some(
                            UntrackedSymbol {
                                id: 4,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ),
                    },
                    TypeParameter {
                        name: "MaxVotes",
                        ty: None,
                    },
                ],
                type_def: Composite(
                    TypeDefComposite {
                        fields: [
                            Field {
                                name: Some(
                                    "votes",
                                ),
                                ty: UntrackedSymbol {
                                    id: 609,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "BoundedVec<(PollIndex, AccountVote<Balance>), MaxVotes>",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "delegations",
                                ),
                                ty: UntrackedSymbol {
                                    id: 612,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "Delegations<Balance>",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "prior",
                                ),
                                ty: UntrackedSymbol {
                                    id: 613,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "PriorLock<BlockNumber, Balance>",
                                ),
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 609,
            ty: Type {
                path: Path {
                    segments: [
                        "bounded_collections",
                        "bounded_vec",
                        "BoundedVec",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "T",
                        ty: Some(
                            UntrackedSymbol {
                                id: 610,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ),
                    },
                    TypeParameter {
                        name: "S",
                        ty: None,
                    },
                ],
                type_def: Composite(
                    TypeDefComposite {
                        fields: [
                            Field {
                                name: None,
                                ty: UntrackedSymbol {
                                    id: 611,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "Vec<T>",
                                ),
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 610,
            ty: Type {
                path: Path {
                    segments: [],
                },
                type_params: [],
                type_def: Tuple(
                    TypeDefTuple {
                        fields: [
                            UntrackedSymbol {
                                id: 4,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                            UntrackedSymbol {
                                id: 147,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 611,
            ty: Type {
                path: Path {
                    segments: [],
                },
                type_params: [],
                type_def: Sequence(
                    TypeDefSequence {
                        type_param: UntrackedSymbol {
                            id: 610,
                            marker: PhantomData<fn() -> core::any::TypeId>,
                        },
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 612,
            ty: Type {
                path: Path {
                    segments: [
                        "pallet_conviction_voting",
                        "types",
                        "Delegations",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "Balance",
                        ty: Some(
                            UntrackedSymbol {
                                id: 6,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ),
                    },
                ],
                type_def: Composite(
                    TypeDefComposite {
                        fields: [
                            Field {
                                name: Some(
                                    "votes",
                                ),
                                ty: UntrackedSymbol {
                                    id: 6,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "Balance",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "capital",
                                ),
                                ty: UntrackedSymbol {
                                    id: 6,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "Balance",
                                ),
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 613,
            ty: Type {
                path: Path {
                    segments: [
                        "pallet_conviction_voting",
                        "vote",
                        "PriorLock",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "BlockNumber",
                        ty: Some(
                            UntrackedSymbol {
                                id: 4,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ),
                    },
                    TypeParameter {
                        name: "Balance",
                        ty: Some(
                            UntrackedSymbol {
                                id: 6,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ),
                    },
                ],
                type_def: Composite(
                    TypeDefComposite {
                        fields: [
                            Field {
                                name: None,
                                ty: UntrackedSymbol {
                                    id: 4,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "BlockNumber",
                                ),
                                docs: [],
                            },
                            Field {
                                name: None,
                                ty: UntrackedSymbol {
                                    id: 6,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "Balance",
                                ),
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 614,
            ty: Type {
                path: Path {
                    segments: [
                        "pallet_conviction_voting",
                        "vote",
                        "Delegating",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "Balance",
                        ty: Some(
                            UntrackedSymbol {
                                id: 6,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ),
                    },
                    TypeParameter {
                        name: "AccountId",
                        ty: Some(
                            UntrackedSymbol {
                                id: 0,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ),
                    },
                    TypeParameter {
                        name: "BlockNumber",
                        ty: Some(
                            UntrackedSymbol {
                                id: 4,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ),
                    },
                ],
                type_def: Composite(
                    TypeDefComposite {
                        fields: [
                            Field {
                                name: Some(
                                    "balance",
                                ),
                                ty: UntrackedSymbol {
                                    id: 6,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "Balance",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "target",
                                ),
                                ty: UntrackedSymbol {
                                    id: 0,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "AccountId",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "conviction",
                                ),
                                ty: UntrackedSymbol {
                                    id: 149,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "Conviction",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "delegations",
                                ),
                                ty: UntrackedSymbol {
                                    id: 612,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "Delegations<Balance>",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "prior",
                                ),
                                ty: UntrackedSymbol {
                                    id: 613,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "PriorLock<BlockNumber, Balance>",
                                ),
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 615,
            ty: Type {
                path: Path {
                    segments: [
                        "bounded_collections",
                        "bounded_vec",
                        "BoundedVec",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "T",
                        ty: Some(
                            UntrackedSymbol {
                                id: 616,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ),
                    },
                    TypeParameter {
                        name: "S",
                        ty: None,
                    },
                ],
                type_def: Composite(
                    TypeDefComposite {
                        fields: [
                            Field {
                                name: None,
                                ty: UntrackedSymbol {
                                    id: 617,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "Vec<T>",
                                ),
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 616,
            ty: Type {
                path: Path {
                    segments: [],
                },
                type_params: [],
                type_def: Tuple(
                    TypeDefTuple {
                        fields: [
                            UntrackedSymbol {
                                id: 77,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                            UntrackedSymbol {
                                id: 6,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 617,
            ty: Type {
                path: Path {
                    segments: [],
                },
                type_params: [],
                type_def: Sequence(
                    TypeDefSequence {
                        type_param: UntrackedSymbol {
                            id: 616,
                            marker: PhantomData<fn() -> core::any::TypeId>,
                        },
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 618,
            ty: Type {
                path: Path {
                    segments: [
                        "pallet_conviction_voting",
                        "pallet",
                        "Error",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "T",
                        ty: None,
                    },
                    TypeParameter {
                        name: "I",
                        ty: None,
                    },
                ],
                type_def: Variant(
                    TypeDefVariant {
                        variants: [
                            Variant {
                                name: "NotOngoing",
                                fields: [],
                                index: 0,
                                docs: [
                                    "Poll is not ongoing.",
                                ],
                            },
                            Variant {
                                name: "NotVoter",
                                fields: [],
                                index: 1,
                                docs: [
                                    "The given account did not vote on the poll.",
                                ],
                            },
                            Variant {
                                name: "NoPermission",
                                fields: [],
                                index: 2,
                                docs: [
                                    "The actor has no permission to conduct the action.",
                                ],
                            },
                            Variant {
                                name: "NoPermissionYet",
                                fields: [],
                                index: 3,
                                docs: [
                                    "The actor has no permission to conduct the action right now but will do in the future.",
                                ],
                            },
                            Variant {
                                name: "AlreadyDelegating",
                                fields: [],
                                index: 4,
                                docs: [
                                    "The account is already delegating.",
                                ],
                            },
                            Variant {
                                name: "AlreadyVoting",
                                fields: [],
                                index: 5,
                                docs: [
                                    "The account currently has votes attached to it and the operation cannot succeed until",
                                    "these are removed, either through `unvote` or `reap_vote`.",
                                ],
                            },
                            Variant {
                                name: "InsufficientFunds",
                                fields: [],
                                index: 6,
                                docs: [
                                    "Too high a balance was provided that the account cannot afford.",
                                ],
                            },
                            Variant {
                                name: "NotDelegating",
                                fields: [],
                                index: 7,
                                docs: [
                                    "The account is not currently delegating.",
                                ],
                            },
                            Variant {
                                name: "Nonsense",
                                fields: [],
                                index: 8,
                                docs: [
                                    "Delegation to oneself makes no sense.",
                                ],
                            },
                            Variant {
                                name: "MaxVotesReached",
                                fields: [],
                                index: 9,
                                docs: [
                                    "Maximum number of votes reached.",
                                ],
                            },
                            Variant {
                                name: "ClassNeeded",
                                fields: [],
                                index: 10,
                                docs: [
                                    "The class must be supplied since it is not easily determinable from the state.",
                                ],
                            },
                            Variant {
                                name: "BadClass",
                                fields: [],
                                index: 11,
                                docs: [
                                    "The class ID supplied is invalid.",
                                ],
                            },
                        ],
                    },
                ),
                docs: [
                    "The `Error` enum of this pallet.",
                ],
            },
        },
        PortableType {
            id: 619,
            ty: Type {
                path: Path {
                    segments: [
                        "pallet_referenda",
                        "types",
                        "ReferendumInfo",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "TrackId",
                        ty: Some(
                            UntrackedSymbol {
                                id: 77,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ),
                    },
                    TypeParameter {
                        name: "RuntimeOrigin",
                        ty: Some(
                            UntrackedSymbol {
                                id: 152,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ),
                    },
                    TypeParameter {
                        name: "Moment",
                        ty: Some(
                            UntrackedSymbol {
                                id: 4,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ),
                    },
                    TypeParameter {
                        name: "Call",
                        ty: Some(
                            UntrackedSymbol {
                                id: 78,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ),
                    },
                    TypeParameter {
                        name: "Balance",
                        ty: Some(
                            UntrackedSymbol {
                                id: 6,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ),
                    },
                    TypeParameter {
                        name: "Tally",
                        ty: Some(
                            UntrackedSymbol {
                                id: 436,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ),
                    },
                    TypeParameter {
                        name: "AccountId",
                        ty: Some(
                            UntrackedSymbol {
                                id: 0,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ),
                    },
                    TypeParameter {
                        name: "ScheduleAddress",
                        ty: Some(
                            UntrackedSymbol {
                                id: 31,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ),
                    },
                ],
                type_def: Variant(
                    TypeDefVariant {
                        variants: [
                            Variant {
                                name: "Ongoing",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 620,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "ReferendumStatus<TrackId, RuntimeOrigin, Moment, Call, Balance, Tally,\nAccountId, ScheduleAddress,>",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 0,
                                docs: [],
                            },
                            Variant {
                                name: "Approved",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 4,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "Moment",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 622,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "Option<Deposit<AccountId, Balance>>",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 622,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "Option<Deposit<AccountId, Balance>>",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 1,
                                docs: [],
                            },
                            Variant {
                                name: "Rejected",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 4,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "Moment",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 622,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "Option<Deposit<AccountId, Balance>>",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 622,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "Option<Deposit<AccountId, Balance>>",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 2,
                                docs: [],
                            },
                            Variant {
                                name: "Cancelled",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 4,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "Moment",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 622,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "Option<Deposit<AccountId, Balance>>",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 622,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "Option<Deposit<AccountId, Balance>>",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 3,
                                docs: [],
                            },
                            Variant {
                                name: "TimedOut",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 4,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "Moment",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 622,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "Option<Deposit<AccountId, Balance>>",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 622,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "Option<Deposit<AccountId, Balance>>",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 4,
                                docs: [],
                            },
                            Variant {
                                name: "Killed",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 4,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "Moment",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 5,
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 620,
            ty: Type {
                path: Path {
                    segments: [
                        "pallet_referenda",
                        "types",
                        "ReferendumStatus",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "TrackId",
                        ty: Some(
                            UntrackedSymbol {
                                id: 77,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ),
                    },
                    TypeParameter {
                        name: "RuntimeOrigin",
                        ty: Some(
                            UntrackedSymbol {
                                id: 152,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ),
                    },
                    TypeParameter {
                        name: "Moment",
                        ty: Some(
                            UntrackedSymbol {
                                id: 4,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ),
                    },
                    TypeParameter {
                        name: "Call",
                        ty: Some(
                            UntrackedSymbol {
                                id: 78,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ),
                    },
                    TypeParameter {
                        name: "Balance",
                        ty: Some(
                            UntrackedSymbol {
                                id: 6,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ),
                    },
                    TypeParameter {
                        name: "Tally",
                        ty: Some(
                            UntrackedSymbol {
                                id: 436,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ),
                    },
                    TypeParameter {
                        name: "AccountId",
                        ty: Some(
                            UntrackedSymbol {
                                id: 0,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ),
                    },
                    TypeParameter {
                        name: "ScheduleAddress",
                        ty: Some(
                            UntrackedSymbol {
                                id: 31,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ),
                    },
                ],
                type_def: Composite(
                    TypeDefComposite {
                        fields: [
                            Field {
                                name: Some(
                                    "track",
                                ),
                                ty: UntrackedSymbol {
                                    id: 77,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "TrackId",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "origin",
                                ),
                                ty: UntrackedSymbol {
                                    id: 152,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "RuntimeOrigin",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "proposal",
                                ),
                                ty: UntrackedSymbol {
                                    id: 78,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "Call",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "enactment",
                                ),
                                ty: UntrackedSymbol {
                                    id: 168,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "DispatchTime<Moment>",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "submitted",
                                ),
                                ty: UntrackedSymbol {
                                    id: 4,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "Moment",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "submission_deposit",
                                ),
                                ty: UntrackedSymbol {
                                    id: 621,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "Deposit<AccountId, Balance>",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "decision_deposit",
                                ),
                                ty: UntrackedSymbol {
                                    id: 622,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "Option<Deposit<AccountId, Balance>>",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "deciding",
                                ),
                                ty: UntrackedSymbol {
                                    id: 623,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "Option<DecidingStatus<Moment>>",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "tally",
                                ),
                                ty: UntrackedSymbol {
                                    id: 436,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "Tally",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "in_queue",
                                ),
                                ty: UntrackedSymbol {
                                    id: 44,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "bool",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "alarm",
                                ),
                                ty: UntrackedSymbol {
                                    id: 625,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "Option<(Moment, ScheduleAddress)>",
                                ),
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 621,
            ty: Type {
                path: Path {
                    segments: [
                        "pallet_referenda",
                        "types",
                        "Deposit",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "AccountId",
                        ty: Some(
                            UntrackedSymbol {
                                id: 0,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ),
                    },
                    TypeParameter {
                        name: "Balance",
                        ty: Some(
                            UntrackedSymbol {
                                id: 6,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ),
                    },
                ],
                type_def: Composite(
                    TypeDefComposite {
                        fields: [
                            Field {
                                name: Some(
                                    "who",
                                ),
                                ty: UntrackedSymbol {
                                    id: 0,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "AccountId",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "amount",
                                ),
                                ty: UntrackedSymbol {
                                    id: 6,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "Balance",
                                ),
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 622,
            ty: Type {
                path: Path {
                    segments: [
                        "Option",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "T",
                        ty: Some(
                            UntrackedSymbol {
                                id: 621,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ),
                    },
                ],
                type_def: Variant(
                    TypeDefVariant {
                        variants: [
                            Variant {
                                name: "None",
                                fields: [],
                                index: 0,
                                docs: [],
                            },
                            Variant {
                                name: "Some",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 621,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: None,
                                        docs: [],
                                    },
                                ],
                                index: 1,
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 623,
            ty: Type {
                path: Path {
                    segments: [
                        "Option",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "T",
                        ty: Some(
                            UntrackedSymbol {
                                id: 624,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ),
                    },
                ],
                type_def: Variant(
                    TypeDefVariant {
                        variants: [
                            Variant {
                                name: "None",
                                fields: [],
                                index: 0,
                                docs: [],
                            },
                            Variant {
                                name: "Some",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 624,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: None,
                                        docs: [],
                                    },
                                ],
                                index: 1,
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 624,
            ty: Type {
                path: Path {
                    segments: [
                        "pallet_referenda",
                        "types",
                        "DecidingStatus",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "BlockNumber",
                        ty: Some(
                            UntrackedSymbol {
                                id: 4,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ),
                    },
                ],
                type_def: Composite(
                    TypeDefComposite {
                        fields: [
                            Field {
                                name: Some(
                                    "since",
                                ),
                                ty: UntrackedSymbol {
                                    id: 4,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "BlockNumber",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "confirming",
                                ),
                                ty: UntrackedSymbol {
                                    id: 137,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "Option<BlockNumber>",
                                ),
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 625,
            ty: Type {
                path: Path {
                    segments: [
                        "Option",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "T",
                        ty: Some(
                            UntrackedSymbol {
                                id: 626,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ),
                    },
                ],
                type_def: Variant(
                    TypeDefVariant {
                        variants: [
                            Variant {
                                name: "None",
                                fields: [],
                                index: 0,
                                docs: [],
                            },
                            Variant {
                                name: "Some",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 626,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: None,
                                        docs: [],
                                    },
                                ],
                                index: 1,
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 626,
            ty: Type {
                path: Path {
                    segments: [],
                },
                type_params: [],
                type_def: Tuple(
                    TypeDefTuple {
                        fields: [
                            UntrackedSymbol {
                                id: 4,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                            UntrackedSymbol {
                                id: 31,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 627,
            ty: Type {
                path: Path {
                    segments: [
                        "bounded_collections",
                        "bounded_vec",
                        "BoundedVec",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "T",
                        ty: Some(
                            UntrackedSymbol {
                                id: 628,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ),
                    },
                    TypeParameter {
                        name: "S",
                        ty: None,
                    },
                ],
                type_def: Composite(
                    TypeDefComposite {
                        fields: [
                            Field {
                                name: None,
                                ty: UntrackedSymbol {
                                    id: 629,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "Vec<T>",
                                ),
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 628,
            ty: Type {
                path: Path {
                    segments: [],
                },
                type_params: [],
                type_def: Tuple(
                    TypeDefTuple {
                        fields: [
                            UntrackedSymbol {
                                id: 4,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                            UntrackedSymbol {
                                id: 6,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 629,
            ty: Type {
                path: Path {
                    segments: [],
                },
                type_params: [],
                type_def: Sequence(
                    TypeDefSequence {
                        type_param: UntrackedSymbol {
                            id: 628,
                            marker: PhantomData<fn() -> core::any::TypeId>,
                        },
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 630,
            ty: Type {
                path: Path {
                    segments: [],
                },
                type_params: [],
                type_def: Sequence(
                    TypeDefSequence {
                        type_param: UntrackedSymbol {
                            id: 631,
                            marker: PhantomData<fn() -> core::any::TypeId>,
                        },
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 631,
            ty: Type {
                path: Path {
                    segments: [],
                },
                type_params: [],
                type_def: Tuple(
                    TypeDefTuple {
                        fields: [
                            UntrackedSymbol {
                                id: 77,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                            UntrackedSymbol {
                                id: 632,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 632,
            ty: Type {
                path: Path {
                    segments: [
                        "pallet_referenda",
                        "types",
                        "TrackInfo",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "Balance",
                        ty: Some(
                            UntrackedSymbol {
                                id: 6,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ),
                    },
                    TypeParameter {
                        name: "Moment",
                        ty: Some(
                            UntrackedSymbol {
                                id: 4,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ),
                    },
                ],
                type_def: Composite(
                    TypeDefComposite {
                        fields: [
                            Field {
                                name: Some(
                                    "name",
                                ),
                                ty: UntrackedSymbol {
                                    id: 479,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "&'static str",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "max_deciding",
                                ),
                                ty: UntrackedSymbol {
                                    id: 4,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "u32",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "decision_deposit",
                                ),
                                ty: UntrackedSymbol {
                                    id: 6,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "Balance",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "prepare_period",
                                ),
                                ty: UntrackedSymbol {
                                    id: 4,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "Moment",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "decision_period",
                                ),
                                ty: UntrackedSymbol {
                                    id: 4,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "Moment",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "confirm_period",
                                ),
                                ty: UntrackedSymbol {
                                    id: 4,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "Moment",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "min_enactment_period",
                                ),
                                ty: UntrackedSymbol {
                                    id: 4,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "Moment",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "min_approval",
                                ),
                                ty: UntrackedSymbol {
                                    id: 633,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "Curve",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "min_support",
                                ),
                                ty: UntrackedSymbol {
                                    id: 633,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "Curve",
                                ),
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 633,
            ty: Type {
                path: Path {
                    segments: [
                        "pallet_referenda",
                        "types",
                        "Curve",
                    ],
                },
                type_params: [],
                type_def: Variant(
                    TypeDefVariant {
                        variants: [
                            Variant {
                                name: "LinearDecreasing",
                                fields: [
                                    Field {
                                        name: Some(
                                            "length",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 41,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "Perbill",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "floor",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 41,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "Perbill",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "ceil",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 41,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "Perbill",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 0,
                                docs: [],
                            },
                            Variant {
                                name: "SteppedDecreasing",
                                fields: [
                                    Field {
                                        name: Some(
                                            "begin",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 41,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "Perbill",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "end",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 41,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "Perbill",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "step",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 41,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "Perbill",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "period",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 41,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "Perbill",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 1,
                                docs: [],
                            },
                            Variant {
                                name: "Reciprocal",
                                fields: [
                                    Field {
                                        name: Some(
                                            "factor",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 634,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "FixedI64",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "x_offset",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 634,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "FixedI64",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "y_offset",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 634,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "FixedI64",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 2,
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 634,
            ty: Type {
                path: Path {
                    segments: [
                        "sp_arithmetic",
                        "fixed_point",
                        "FixedI64",
                    ],
                },
                type_params: [],
                type_def: Composite(
                    TypeDefComposite {
                        fields: [
                            Field {
                                name: None,
                                ty: UntrackedSymbol {
                                    id: 635,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "i64",
                                ),
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 635,
            ty: Type {
                path: Path {
                    segments: [],
                },
                type_params: [],
                type_def: Primitive(
                    I64,
                ),
                docs: [],
            },
        },
        PortableType {
            id: 636,
            ty: Type {
                path: Path {
                    segments: [
                        "pallet_referenda",
                        "pallet",
                        "Error",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "T",
                        ty: None,
                    },
                    TypeParameter {
                        name: "I",
                        ty: None,
                    },
                ],
                type_def: Variant(
                    TypeDefVariant {
                        variants: [
                            Variant {
                                name: "NotOngoing",
                                fields: [],
                                index: 0,
                                docs: [
                                    "Referendum is not ongoing.",
                                ],
                            },
                            Variant {
                                name: "HasDeposit",
                                fields: [],
                                index: 1,
                                docs: [
                                    "Referendum's decision deposit is already paid.",
                                ],
                            },
                            Variant {
                                name: "BadTrack",
                                fields: [],
                                index: 2,
                                docs: [
                                    "The track identifier given was invalid.",
                                ],
                            },
                            Variant {
                                name: "Full",
                                fields: [],
                                index: 3,
                                docs: [
                                    "There are already a full complement of referenda in progress for this track.",
                                ],
                            },
                            Variant {
                                name: "QueueEmpty",
                                fields: [],
                                index: 4,
                                docs: [
                                    "The queue of the track is empty.",
                                ],
                            },
                            Variant {
                                name: "BadReferendum",
                                fields: [],
                                index: 5,
                                docs: [
                                    "The referendum index provided is invalid in this context.",
                                ],
                            },
                            Variant {
                                name: "NothingToDo",
                                fields: [],
                                index: 6,
                                docs: [
                                    "There was nothing to do in the advancement.",
                                ],
                            },
                            Variant {
                                name: "NoTrack",
                                fields: [],
                                index: 7,
                                docs: [
                                    "No track exists for the proposal origin.",
                                ],
                            },
                            Variant {
                                name: "Unfinished",
                                fields: [],
                                index: 8,
                                docs: [
                                    "Any deposit cannot be refunded until after the decision is over.",
                                ],
                            },
                            Variant {
                                name: "NoPermission",
                                fields: [],
                                index: 9,
                                docs: [
                                    "The deposit refunder is not the depositor.",
                                ],
                            },
                            Variant {
                                name: "NoDeposit",
                                fields: [],
                                index: 10,
                                docs: [
                                    "The deposit cannot be refunded since none was made.",
                                ],
                            },
                            Variant {
                                name: "BadStatus",
                                fields: [],
                                index: 11,
                                docs: [
                                    "The referendum status is invalid for this operation.",
                                ],
                            },
                            Variant {
                                name: "PreimageNotExist",
                                fields: [],
                                index: 12,
                                docs: [
                                    "The preimage does not exist.",
                                ],
                            },
                        ],
                    },
                ),
                docs: [
                    "The `Error` enum of this pallet.",
                ],
            },
        },
        PortableType {
            id: 637,
            ty: Type {
                path: Path {
                    segments: [
                        "pallet_whitelist",
                        "pallet",
                        "Error",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "T",
                        ty: None,
                    },
                ],
                type_def: Variant(
                    TypeDefVariant {
                        variants: [
                            Variant {
                                name: "UnavailablePreImage",
                                fields: [],
                                index: 0,
                                docs: [
                                    "The preimage of the call hash could not be loaded.",
                                ],
                            },
                            Variant {
                                name: "UndecodableCall",
                                fields: [],
                                index: 1,
                                docs: [
                                    "The call could not be decoded.",
                                ],
                            },
                            Variant {
                                name: "InvalidCallWeightWitness",
                                fields: [],
                                index: 2,
                                docs: [
                                    "The weight of the decoded call was higher than the witness.",
                                ],
                            },
                            Variant {
                                name: "CallIsNotWhitelisted",
                                fields: [],
                                index: 3,
                                docs: [
                                    "The call was not whitelisted.",
                                ],
                            },
                            Variant {
                                name: "CallAlreadyWhitelisted",
                                fields: [],
                                index: 4,
                                docs: [
                                    "The call was already whitelisted; No-Op.",
                                ],
                            },
                        ],
                    },
                ),
                docs: [
                    "The `Error` enum of this pallet.",
                ],
            },
        },
        PortableType {
            id: 638,
            ty: Type {
                path: Path {
                    segments: [
                        "polkadot_runtime_common",
                        "claims",
                        "pallet",
                        "Error",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "T",
                        ty: None,
                    },
                ],
                type_def: Variant(
                    TypeDefVariant {
                        variants: [
                            Variant {
                                name: "InvalidEthereumSignature",
                                fields: [],
                                index: 0,
                                docs: [
                                    "Invalid Ethereum signature.",
                                ],
                            },
                            Variant {
                                name: "SignerHasNoClaim",
                                fields: [],
                                index: 1,
                                docs: [
                                    "Ethereum address has no claim.",
                                ],
                            },
                            Variant {
                                name: "SenderHasNoClaim",
                                fields: [],
                                index: 2,
                                docs: [
                                    "Account ID sending transaction has no claim.",
                                ],
                            },
                            Variant {
                                name: "PotUnderflow",
                                fields: [],
                                index: 3,
                                docs: [
                                    "There's not enough in the pot to pay out some unvested amount. Generally implies a logic",
                                    "error.",
                                ],
                            },
                            Variant {
                                name: "InvalidStatement",
                                fields: [],
                                index: 4,
                                docs: [
                                    "A needed statement was not included.",
                                ],
                            },
                            Variant {
                                name: "VestedBalanceExists",
                                fields: [],
                                index: 5,
                                docs: [
                                    "The account already has a vested balance.",
                                ],
                            },
                        ],
                    },
                ),
                docs: [
                    "The `Error` enum of this pallet.",
                ],
            },
        },
        PortableType {
            id: 639,
            ty: Type {
                path: Path {
                    segments: [
                        "bounded_collections",
                        "bounded_vec",
                        "BoundedVec",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "T",
                        ty: Some(
                            UntrackedSymbol {
                                id: 179,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ),
                    },
                    TypeParameter {
                        name: "S",
                        ty: None,
                    },
                ],
                type_def: Composite(
                    TypeDefComposite {
                        fields: [
                            Field {
                                name: None,
                                ty: UntrackedSymbol {
                                    id: 640,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "Vec<T>",
                                ),
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 640,
            ty: Type {
                path: Path {
                    segments: [],
                },
                type_params: [],
                type_def: Sequence(
                    TypeDefSequence {
                        type_param: UntrackedSymbol {
                            id: 179,
                            marker: PhantomData<fn() -> core::any::TypeId>,
                        },
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 641,
            ty: Type {
                path: Path {
                    segments: [
                        "pallet_vesting",
                        "Releases",
                    ],
                },
                type_params: [],
                type_def: Variant(
                    TypeDefVariant {
                        variants: [
                            Variant {
                                name: "V0",
                                fields: [],
                                index: 0,
                                docs: [],
                            },
                            Variant {
                                name: "V1",
                                fields: [],
                                index: 1,
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 642,
            ty: Type {
                path: Path {
                    segments: [
                        "pallet_vesting",
                        "pallet",
                        "Error",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "T",
                        ty: None,
                    },
                ],
                type_def: Variant(
                    TypeDefVariant {
                        variants: [
                            Variant {
                                name: "NotVesting",
                                fields: [],
                                index: 0,
                                docs: [
                                    "The account given is not vesting.",
                                ],
                            },
                            Variant {
                                name: "AtMaxVestingSchedules",
                                fields: [],
                                index: 1,
                                docs: [
                                    "The account already has `MaxVestingSchedules` count of schedules and thus",
                                    "cannot add another one. Consider merging existing schedules in order to add another.",
                                ],
                            },
                            Variant {
                                name: "AmountLow",
                                fields: [],
                                index: 2,
                                docs: [
                                    "Amount being transferred is too low to create a vesting schedule.",
                                ],
                            },
                            Variant {
                                name: "ScheduleIndexOutOfBounds",
                                fields: [],
                                index: 3,
                                docs: [
                                    "An index was out of bounds of the vesting schedules.",
                                ],
                            },
                            Variant {
                                name: "InvalidScheduleParams",
                                fields: [],
                                index: 4,
                                docs: [
                                    "Failed to create a new schedule because some parameter was invalid.",
                                ],
                            },
                        ],
                    },
                ),
                docs: [
                    "Error for the vesting pallet.",
                ],
            },
        },
        PortableType {
            id: 643,
            ty: Type {
                path: Path {
                    segments: [
                        "pallet_utility",
                        "pallet",
                        "Error",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "T",
                        ty: None,
                    },
                ],
                type_def: Variant(
                    TypeDefVariant {
                        variants: [
                            Variant {
                                name: "TooManyCalls",
                                fields: [],
                                index: 0,
                                docs: [
                                    "Too many calls batched.",
                                ],
                            },
                        ],
                    },
                ),
                docs: [
                    "The `Error` enum of this pallet.",
                ],
            },
        },
        PortableType {
            id: 644,
            ty: Type {
                path: Path {
                    segments: [
                        "pallet_identity",
                        "types",
                        "Registration",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "Balance",
                        ty: Some(
                            UntrackedSymbol {
                                id: 6,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ),
                    },
                    TypeParameter {
                        name: "MaxJudgements",
                        ty: None,
                    },
                    TypeParameter {
                        name: "MaxAdditionalFields",
                        ty: None,
                    },
                ],
                type_def: Composite(
                    TypeDefComposite {
                        fields: [
                            Field {
                                name: Some(
                                    "judgements",
                                ),
                                ty: UntrackedSymbol {
                                    id: 645,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "BoundedVec<(RegistrarIndex, Judgement<Balance>), MaxJudgements>",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "deposit",
                                ),
                                ty: UntrackedSymbol {
                                    id: 6,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "Balance",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "info",
                                ),
                                ty: UntrackedSymbol {
                                    id: 183,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "IdentityInfo<MaxAdditionalFields>",
                                ),
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 645,
            ty: Type {
                path: Path {
                    segments: [
                        "bounded_collections",
                        "bounded_vec",
                        "BoundedVec",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "T",
                        ty: Some(
                            UntrackedSymbol {
                                id: 646,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ),
                    },
                    TypeParameter {
                        name: "S",
                        ty: None,
                    },
                ],
                type_def: Composite(
                    TypeDefComposite {
                        fields: [
                            Field {
                                name: None,
                                ty: UntrackedSymbol {
                                    id: 647,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "Vec<T>",
                                ),
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 646,
            ty: Type {
                path: Path {
                    segments: [],
                },
                type_params: [],
                type_def: Tuple(
                    TypeDefTuple {
                        fields: [
                            UntrackedSymbol {
                                id: 4,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                            UntrackedSymbol {
                                id: 222,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 647,
            ty: Type {
                path: Path {
                    segments: [],
                },
                type_params: [],
                type_def: Sequence(
                    TypeDefSequence {
                        type_param: UntrackedSymbol {
                            id: 646,
                            marker: PhantomData<fn() -> core::any::TypeId>,
                        },
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 648,
            ty: Type {
                path: Path {
                    segments: [],
                },
                type_params: [],
                type_def: Tuple(
                    TypeDefTuple {
                        fields: [
                            UntrackedSymbol {
                                id: 6,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                            UntrackedSymbol {
                                id: 649,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 649,
            ty: Type {
                path: Path {
                    segments: [
                        "bounded_collections",
                        "bounded_vec",
                        "BoundedVec",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "T",
                        ty: Some(
                            UntrackedSymbol {
                                id: 0,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ),
                    },
                    TypeParameter {
                        name: "S",
                        ty: None,
                    },
                ],
                type_def: Composite(
                    TypeDefComposite {
                        fields: [
                            Field {
                                name: None,
                                ty: UntrackedSymbol {
                                    id: 104,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "Vec<T>",
                                ),
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 650,
            ty: Type {
                path: Path {
                    segments: [
                        "bounded_collections",
                        "bounded_vec",
                        "BoundedVec",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "T",
                        ty: Some(
                            UntrackedSymbol {
                                id: 651,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ),
                    },
                    TypeParameter {
                        name: "S",
                        ty: None,
                    },
                ],
                type_def: Composite(
                    TypeDefComposite {
                        fields: [
                            Field {
                                name: None,
                                ty: UntrackedSymbol {
                                    id: 653,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "Vec<T>",
                                ),
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 651,
            ty: Type {
                path: Path {
                    segments: [
                        "Option",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "T",
                        ty: Some(
                            UntrackedSymbol {
                                id: 652,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ),
                    },
                ],
                type_def: Variant(
                    TypeDefVariant {
                        variants: [
                            Variant {
                                name: "None",
                                fields: [],
                                index: 0,
                                docs: [],
                            },
                            Variant {
                                name: "Some",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 652,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: None,
                                        docs: [],
                                    },
                                ],
                                index: 1,
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 652,
            ty: Type {
                path: Path {
                    segments: [
                        "pallet_identity",
                        "types",
                        "RegistrarInfo",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "Balance",
                        ty: Some(
                            UntrackedSymbol {
                                id: 6,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ),
                    },
                    TypeParameter {
                        name: "AccountId",
                        ty: Some(
                            UntrackedSymbol {
                                id: 0,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ),
                    },
                ],
                type_def: Composite(
                    TypeDefComposite {
                        fields: [
                            Field {
                                name: Some(
                                    "account",
                                ),
                                ty: UntrackedSymbol {
                                    id: 0,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "AccountId",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "fee",
                                ),
                                ty: UntrackedSymbol {
                                    id: 6,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "Balance",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "fields",
                                ),
                                ty: UntrackedSymbol {
                                    id: 220,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "IdentityFields",
                                ),
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 653,
            ty: Type {
                path: Path {
                    segments: [],
                },
                type_params: [],
                type_def: Sequence(
                    TypeDefSequence {
                        type_param: UntrackedSymbol {
                            id: 651,
                            marker: PhantomData<fn() -> core::any::TypeId>,
                        },
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 654,
            ty: Type {
                path: Path {
                    segments: [
                        "pallet_identity",
                        "pallet",
                        "Error",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "T",
                        ty: None,
                    },
                ],
                type_def: Variant(
                    TypeDefVariant {
                        variants: [
                            Variant {
                                name: "TooManySubAccounts",
                                fields: [],
                                index: 0,
                                docs: [
                                    "Too many subs-accounts.",
                                ],
                            },
                            Variant {
                                name: "NotFound",
                                fields: [],
                                index: 1,
                                docs: [
                                    "Account isn't found.",
                                ],
                            },
                            Variant {
                                name: "NotNamed",
                                fields: [],
                                index: 2,
                                docs: [
                                    "Account isn't named.",
                                ],
                            },
                            Variant {
                                name: "EmptyIndex",
                                fields: [],
                                index: 3,
                                docs: [
                                    "Empty index.",
                                ],
                            },
                            Variant {
                                name: "FeeChanged",
                                fields: [],
                                index: 4,
                                docs: [
                                    "Fee is changed.",
                                ],
                            },
                            Variant {
                                name: "NoIdentity",
                                fields: [],
                                index: 5,
                                docs: [
                                    "No identity found.",
                                ],
                            },
                            Variant {
                                name: "StickyJudgement",
                                fields: [],
                                index: 6,
                                docs: [
                                    "Sticky judgement.",
                                ],
                            },
                            Variant {
                                name: "JudgementGiven",
                                fields: [],
                                index: 7,
                                docs: [
                                    "Judgement given.",
                                ],
                            },
                            Variant {
                                name: "InvalidJudgement",
                                fields: [],
                                index: 8,
                                docs: [
                                    "Invalid judgement.",
                                ],
                            },
                            Variant {
                                name: "InvalidIndex",
                                fields: [],
                                index: 9,
                                docs: [
                                    "The index is invalid.",
                                ],
                            },
                            Variant {
                                name: "InvalidTarget",
                                fields: [],
                                index: 10,
                                docs: [
                                    "The target is invalid.",
                                ],
                            },
                            Variant {
                                name: "TooManyFields",
                                fields: [],
                                index: 11,
                                docs: [
                                    "Too many additional fields.",
                                ],
                            },
                            Variant {
                                name: "TooManyRegistrars",
                                fields: [],
                                index: 12,
                                docs: [
                                    "Maximum amount of registrars reached. Cannot add any more.",
                                ],
                            },
                            Variant {
                                name: "AlreadyClaimed",
                                fields: [],
                                index: 13,
                                docs: [
                                    "Account ID is already named.",
                                ],
                            },
                            Variant {
                                name: "NotSub",
                                fields: [],
                                index: 14,
                                docs: [
                                    "Sender is not a sub-account.",
                                ],
                            },
                            Variant {
                                name: "NotOwned",
                                fields: [],
                                index: 15,
                                docs: [
                                    "Sub-account isn't owned by sender.",
                                ],
                            },
                            Variant {
                                name: "JudgementForDifferentIdentity",
                                fields: [],
                                index: 16,
                                docs: [
                                    "The provided judgement was for a different identity.",
                                ],
                            },
                            Variant {
                                name: "JudgementPaymentFailed",
                                fields: [],
                                index: 17,
                                docs: [
                                    "Error that occurs when there is an issue paying for judgement.",
                                ],
                            },
                        ],
                    },
                ),
                docs: [
                    "The `Error` enum of this pallet.",
                ],
            },
        },
        PortableType {
            id: 655,
            ty: Type {
                path: Path {
                    segments: [],
                },
                type_params: [],
                type_def: Tuple(
                    TypeDefTuple {
                        fields: [
                            UntrackedSymbol {
                                id: 656,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                            UntrackedSymbol {
                                id: 6,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 656,
            ty: Type {
                path: Path {
                    segments: [
                        "bounded_collections",
                        "bounded_vec",
                        "BoundedVec",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "T",
                        ty: Some(
                            UntrackedSymbol {
                                id: 657,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ),
                    },
                    TypeParameter {
                        name: "S",
                        ty: None,
                    },
                ],
                type_def: Composite(
                    TypeDefComposite {
                        fields: [
                            Field {
                                name: None,
                                ty: UntrackedSymbol {
                                    id: 658,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "Vec<T>",
                                ),
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 657,
            ty: Type {
                path: Path {
                    segments: [
                        "pallet_proxy",
                        "ProxyDefinition",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "AccountId",
                        ty: Some(
                            UntrackedSymbol {
                                id: 0,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ),
                    },
                    TypeParameter {
                        name: "ProxyType",
                        ty: Some(
                            UntrackedSymbol {
                                id: 225,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ),
                    },
                    TypeParameter {
                        name: "BlockNumber",
                        ty: Some(
                            UntrackedSymbol {
                                id: 4,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ),
                    },
                ],
                type_def: Composite(
                    TypeDefComposite {
                        fields: [
                            Field {
                                name: Some(
                                    "delegate",
                                ),
                                ty: UntrackedSymbol {
                                    id: 0,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "AccountId",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "proxy_type",
                                ),
                                ty: UntrackedSymbol {
                                    id: 225,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "ProxyType",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "delay",
                                ),
                                ty: UntrackedSymbol {
                                    id: 4,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "BlockNumber",
                                ),
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 658,
            ty: Type {
                path: Path {
                    segments: [],
                },
                type_params: [],
                type_def: Sequence(
                    TypeDefSequence {
                        type_param: UntrackedSymbol {
                            id: 657,
                            marker: PhantomData<fn() -> core::any::TypeId>,
                        },
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 659,
            ty: Type {
                path: Path {
                    segments: [],
                },
                type_params: [],
                type_def: Tuple(
                    TypeDefTuple {
                        fields: [
                            UntrackedSymbol {
                                id: 660,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                            UntrackedSymbol {
                                id: 6,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 660,
            ty: Type {
                path: Path {
                    segments: [
                        "bounded_collections",
                        "bounded_vec",
                        "BoundedVec",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "T",
                        ty: Some(
                            UntrackedSymbol {
                                id: 661,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ),
                    },
                    TypeParameter {
                        name: "S",
                        ty: None,
                    },
                ],
                type_def: Composite(
                    TypeDefComposite {
                        fields: [
                            Field {
                                name: None,
                                ty: UntrackedSymbol {
                                    id: 662,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "Vec<T>",
                                ),
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 661,
            ty: Type {
                path: Path {
                    segments: [
                        "pallet_proxy",
                        "Announcement",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "AccountId",
                        ty: Some(
                            UntrackedSymbol {
                                id: 0,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ),
                    },
                    TypeParameter {
                        name: "Hash",
                        ty: Some(
                            UntrackedSymbol {
                                id: 12,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ),
                    },
                    TypeParameter {
                        name: "BlockNumber",
                        ty: Some(
                            UntrackedSymbol {
                                id: 4,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ),
                    },
                ],
                type_def: Composite(
                    TypeDefComposite {
                        fields: [
                            Field {
                                name: Some(
                                    "real",
                                ),
                                ty: UntrackedSymbol {
                                    id: 0,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "AccountId",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "call_hash",
                                ),
                                ty: UntrackedSymbol {
                                    id: 12,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "Hash",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "height",
                                ),
                                ty: UntrackedSymbol {
                                    id: 4,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "BlockNumber",
                                ),
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 662,
            ty: Type {
                path: Path {
                    segments: [],
                },
                type_params: [],
                type_def: Sequence(
                    TypeDefSequence {
                        type_param: UntrackedSymbol {
                            id: 661,
                            marker: PhantomData<fn() -> core::any::TypeId>,
                        },
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 663,
            ty: Type {
                path: Path {
                    segments: [
                        "pallet_proxy",
                        "pallet",
                        "Error",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "T",
                        ty: None,
                    },
                ],
                type_def: Variant(
                    TypeDefVariant {
                        variants: [
                            Variant {
                                name: "TooMany",
                                fields: [],
                                index: 0,
                                docs: [
                                    "There are too many proxies registered or too many announcements pending.",
                                ],
                            },
                            Variant {
                                name: "NotFound",
                                fields: [],
                                index: 1,
                                docs: [
                                    "Proxy registration not found.",
                                ],
                            },
                            Variant {
                                name: "NotProxy",
                                fields: [],
                                index: 2,
                                docs: [
                                    "Sender is not a proxy of the account to be proxied.",
                                ],
                            },
                            Variant {
                                name: "Unproxyable",
                                fields: [],
                                index: 3,
                                docs: [
                                    "A call which is incompatible with the proxy type's filter was attempted.",
                                ],
                            },
                            Variant {
                                name: "Duplicate",
                                fields: [],
                                index: 4,
                                docs: [
                                    "Account is already a proxy.",
                                ],
                            },
                            Variant {
                                name: "NoPermission",
                                fields: [],
                                index: 5,
                                docs: [
                                    "Call may not be made by proxy because it may escalate its privileges.",
                                ],
                            },
                            Variant {
                                name: "Unannounced",
                                fields: [],
                                index: 6,
                                docs: [
                                    "Announcement, if made at all, was made too recently.",
                                ],
                            },
                            Variant {
                                name: "NoSelfProxy",
                                fields: [],
                                index: 7,
                                docs: [
                                    "Cannot add self as proxy.",
                                ],
                            },
                        ],
                    },
                ),
                docs: [
                    "The `Error` enum of this pallet.",
                ],
            },
        },
        PortableType {
            id: 664,
            ty: Type {
                path: Path {
                    segments: [],
                },
                type_params: [],
                type_def: Tuple(
                    TypeDefTuple {
                        fields: [
                            UntrackedSymbol {
                                id: 0,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                            UntrackedSymbol {
                                id: 1,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 665,
            ty: Type {
                path: Path {
                    segments: [
                        "pallet_multisig",
                        "Multisig",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "BlockNumber",
                        ty: Some(
                            UntrackedSymbol {
                                id: 4,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ),
                    },
                    TypeParameter {
                        name: "Balance",
                        ty: Some(
                            UntrackedSymbol {
                                id: 6,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ),
                    },
                    TypeParameter {
                        name: "AccountId",
                        ty: Some(
                            UntrackedSymbol {
                                id: 0,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ),
                    },
                    TypeParameter {
                        name: "MaxApprovals",
                        ty: None,
                    },
                ],
                type_def: Composite(
                    TypeDefComposite {
                        fields: [
                            Field {
                                name: Some(
                                    "when",
                                ),
                                ty: UntrackedSymbol {
                                    id: 228,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "Timepoint<BlockNumber>",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "deposit",
                                ),
                                ty: UntrackedSymbol {
                                    id: 6,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "Balance",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "depositor",
                                ),
                                ty: UntrackedSymbol {
                                    id: 0,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "AccountId",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "approvals",
                                ),
                                ty: UntrackedSymbol {
                                    id: 666,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "BoundedVec<AccountId, MaxApprovals>",
                                ),
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 666,
            ty: Type {
                path: Path {
                    segments: [
                        "bounded_collections",
                        "bounded_vec",
                        "BoundedVec",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "T",
                        ty: Some(
                            UntrackedSymbol {
                                id: 0,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ),
                    },
                    TypeParameter {
                        name: "S",
                        ty: None,
                    },
                ],
                type_def: Composite(
                    TypeDefComposite {
                        fields: [
                            Field {
                                name: None,
                                ty: UntrackedSymbol {
                                    id: 104,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "Vec<T>",
                                ),
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 667,
            ty: Type {
                path: Path {
                    segments: [
                        "pallet_multisig",
                        "pallet",
                        "Error",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "T",
                        ty: None,
                    },
                ],
                type_def: Variant(
                    TypeDefVariant {
                        variants: [
                            Variant {
                                name: "MinimumThreshold",
                                fields: [],
                                index: 0,
                                docs: [
                                    "Threshold must be 2 or greater.",
                                ],
                            },
                            Variant {
                                name: "AlreadyApproved",
                                fields: [],
                                index: 1,
                                docs: [
                                    "Call is already approved by this signatory.",
                                ],
                            },
                            Variant {
                                name: "NoApprovalsNeeded",
                                fields: [],
                                index: 2,
                                docs: [
                                    "Call doesn't need any (more) approvals.",
                                ],
                            },
                            Variant {
                                name: "TooFewSignatories",
                                fields: [],
                                index: 3,
                                docs: [
                                    "There are too few signatories in the list.",
                                ],
                            },
                            Variant {
                                name: "TooManySignatories",
                                fields: [],
                                index: 4,
                                docs: [
                                    "There are too many signatories in the list.",
                                ],
                            },
                            Variant {
                                name: "SignatoriesOutOfOrder",
                                fields: [],
                                index: 5,
                                docs: [
                                    "The signatories were provided out of order; they should be ordered.",
                                ],
                            },
                            Variant {
                                name: "SenderInSignatories",
                                fields: [],
                                index: 6,
                                docs: [
                                    "The sender was contained in the other signatories; it shouldn't be.",
                                ],
                            },
                            Variant {
                                name: "NotFound",
                                fields: [],
                                index: 7,
                                docs: [
                                    "Multisig operation not found when attempting to cancel.",
                                ],
                            },
                            Variant {
                                name: "NotOwner",
                                fields: [],
                                index: 8,
                                docs: [
                                    "Only the account that originally created the multisig is able to cancel it.",
                                ],
                            },
                            Variant {
                                name: "NoTimepoint",
                                fields: [],
                                index: 9,
                                docs: [
                                    "No timepoint was given, yet the multisig operation is already underway.",
                                ],
                            },
                            Variant {
                                name: "WrongTimepoint",
                                fields: [],
                                index: 10,
                                docs: [
                                    "A different timepoint was given to the multisig operation that is underway.",
                                ],
                            },
                            Variant {
                                name: "UnexpectedTimepoint",
                                fields: [],
                                index: 11,
                                docs: [
                                    "A timepoint was given, yet no multisig operation is underway.",
                                ],
                            },
                            Variant {
                                name: "MaxWeightTooLow",
                                fields: [],
                                index: 12,
                                docs: [
                                    "The maximum weight information provided was too low.",
                                ],
                            },
                            Variant {
                                name: "AlreadyStored",
                                fields: [],
                                index: 13,
                                docs: [
                                    "The data to be stored is already stored.",
                                ],
                            },
                        ],
                    },
                ),
                docs: [
                    "The `Error` enum of this pallet.",
                ],
            },
        },
        PortableType {
            id: 668,
            ty: Type {
                path: Path {
                    segments: [
                        "pallet_bounties",
                        "Bounty",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "AccountId",
                        ty: Some(
                            UntrackedSymbol {
                                id: 0,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ),
                    },
                    TypeParameter {
                        name: "Balance",
                        ty: Some(
                            UntrackedSymbol {
                                id: 6,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ),
                    },
                    TypeParameter {
                        name: "BlockNumber",
                        ty: Some(
                            UntrackedSymbol {
                                id: 4,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ),
                    },
                ],
                type_def: Composite(
                    TypeDefComposite {
                        fields: [
                            Field {
                                name: Some(
                                    "proposer",
                                ),
                                ty: UntrackedSymbol {
                                    id: 0,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "AccountId",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "value",
                                ),
                                ty: UntrackedSymbol {
                                    id: 6,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "Balance",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "fee",
                                ),
                                ty: UntrackedSymbol {
                                    id: 6,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "Balance",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "curator_deposit",
                                ),
                                ty: UntrackedSymbol {
                                    id: 6,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "Balance",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "bond",
                                ),
                                ty: UntrackedSymbol {
                                    id: 6,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "Balance",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "status",
                                ),
                                ty: UntrackedSymbol {
                                    id: 669,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "BountyStatus<AccountId, BlockNumber>",
                                ),
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 669,
            ty: Type {
                path: Path {
                    segments: [
                        "pallet_bounties",
                        "BountyStatus",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "AccountId",
                        ty: Some(
                            UntrackedSymbol {
                                id: 0,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ),
                    },
                    TypeParameter {
                        name: "BlockNumber",
                        ty: Some(
                            UntrackedSymbol {
                                id: 4,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ),
                    },
                ],
                type_def: Variant(
                    TypeDefVariant {
                        variants: [
                            Variant {
                                name: "Proposed",
                                fields: [],
                                index: 0,
                                docs: [],
                            },
                            Variant {
                                name: "Approved",
                                fields: [],
                                index: 1,
                                docs: [],
                            },
                            Variant {
                                name: "Funded",
                                fields: [],
                                index: 2,
                                docs: [],
                            },
                            Variant {
                                name: "CuratorProposed",
                                fields: [
                                    Field {
                                        name: Some(
                                            "curator",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 0,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "AccountId",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 3,
                                docs: [],
                            },
                            Variant {
                                name: "Active",
                                fields: [
                                    Field {
                                        name: Some(
                                            "curator",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 0,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "AccountId",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "update_due",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 4,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "BlockNumber",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 4,
                                docs: [],
                            },
                            Variant {
                                name: "PendingPayout",
                                fields: [
                                    Field {
                                        name: Some(
                                            "curator",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 0,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "AccountId",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "beneficiary",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 0,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "AccountId",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "unlock_at",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 4,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "BlockNumber",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 5,
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 670,
            ty: Type {
                path: Path {
                    segments: [
                        "bounded_collections",
                        "bounded_vec",
                        "BoundedVec",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "T",
                        ty: Some(
                            UntrackedSymbol {
                                id: 2,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ),
                    },
                    TypeParameter {
                        name: "S",
                        ty: None,
                    },
                ],
                type_def: Composite(
                    TypeDefComposite {
                        fields: [
                            Field {
                                name: None,
                                ty: UntrackedSymbol {
                                    id: 13,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "Vec<T>",
                                ),
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 671,
            ty: Type {
                path: Path {
                    segments: [
                        "pallet_bounties",
                        "pallet",
                        "Error",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "T",
                        ty: None,
                    },
                    TypeParameter {
                        name: "I",
                        ty: None,
                    },
                ],
                type_def: Variant(
                    TypeDefVariant {
                        variants: [
                            Variant {
                                name: "InsufficientProposersBalance",
                                fields: [],
                                index: 0,
                                docs: [
                                    "Proposer's balance is too low.",
                                ],
                            },
                            Variant {
                                name: "InvalidIndex",
                                fields: [],
                                index: 1,
                                docs: [
                                    "No proposal or bounty at that index.",
                                ],
                            },
                            Variant {
                                name: "ReasonTooBig",
                                fields: [],
                                index: 2,
                                docs: [
                                    "The reason given is just too big.",
                                ],
                            },
                            Variant {
                                name: "UnexpectedStatus",
                                fields: [],
                                index: 3,
                                docs: [
                                    "The bounty status is unexpected.",
                                ],
                            },
                            Variant {
                                name: "RequireCurator",
                                fields: [],
                                index: 4,
                                docs: [
                                    "Require bounty curator.",
                                ],
                            },
                            Variant {
                                name: "InvalidValue",
                                fields: [],
                                index: 5,
                                docs: [
                                    "Invalid bounty value.",
                                ],
                            },
                            Variant {
                                name: "InvalidFee",
                                fields: [],
                                index: 6,
                                docs: [
                                    "Invalid bounty fee.",
                                ],
                            },
                            Variant {
                                name: "PendingPayout",
                                fields: [],
                                index: 7,
                                docs: [
                                    "A bounty payout is pending.",
                                    "To cancel the bounty, you must unassign and slash the curator.",
                                ],
                            },
                            Variant {
                                name: "Premature",
                                fields: [],
                                index: 8,
                                docs: [
                                    "The bounties cannot be claimed/closed because it's still in the countdown period.",
                                ],
                            },
                            Variant {
                                name: "HasActiveChildBounty",
                                fields: [],
                                index: 9,
                                docs: [
                                    "The bounty cannot be closed because it has active child bounties.",
                                ],
                            },
                            Variant {
                                name: "TooManyQueued",
                                fields: [],
                                index: 10,
                                docs: [
                                    "Too many approvals are already queued.",
                                ],
                            },
                        ],
                    },
                ),
                docs: [
                    "The `Error` enum of this pallet.",
                ],
            },
        },
        PortableType {
            id: 672,
            ty: Type {
                path: Path {
                    segments: [
                        "pallet_child_bounties",
                        "ChildBounty",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "AccountId",
                        ty: Some(
                            UntrackedSymbol {
                                id: 0,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ),
                    },
                    TypeParameter {
                        name: "Balance",
                        ty: Some(
                            UntrackedSymbol {
                                id: 6,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ),
                    },
                    TypeParameter {
                        name: "BlockNumber",
                        ty: Some(
                            UntrackedSymbol {
                                id: 4,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ),
                    },
                ],
                type_def: Composite(
                    TypeDefComposite {
                        fields: [
                            Field {
                                name: Some(
                                    "parent_bounty",
                                ),
                                ty: UntrackedSymbol {
                                    id: 4,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "BountyIndex",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "value",
                                ),
                                ty: UntrackedSymbol {
                                    id: 6,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "Balance",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "fee",
                                ),
                                ty: UntrackedSymbol {
                                    id: 6,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "Balance",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "curator_deposit",
                                ),
                                ty: UntrackedSymbol {
                                    id: 6,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "Balance",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "status",
                                ),
                                ty: UntrackedSymbol {
                                    id: 673,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "ChildBountyStatus<AccountId, BlockNumber>",
                                ),
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 673,
            ty: Type {
                path: Path {
                    segments: [
                        "pallet_child_bounties",
                        "ChildBountyStatus",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "AccountId",
                        ty: Some(
                            UntrackedSymbol {
                                id: 0,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ),
                    },
                    TypeParameter {
                        name: "BlockNumber",
                        ty: Some(
                            UntrackedSymbol {
                                id: 4,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ),
                    },
                ],
                type_def: Variant(
                    TypeDefVariant {
                        variants: [
                            Variant {
                                name: "Added",
                                fields: [],
                                index: 0,
                                docs: [],
                            },
                            Variant {
                                name: "CuratorProposed",
                                fields: [
                                    Field {
                                        name: Some(
                                            "curator",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 0,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "AccountId",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 1,
                                docs: [],
                            },
                            Variant {
                                name: "Active",
                                fields: [
                                    Field {
                                        name: Some(
                                            "curator",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 0,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "AccountId",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 2,
                                docs: [],
                            },
                            Variant {
                                name: "PendingPayout",
                                fields: [
                                    Field {
                                        name: Some(
                                            "curator",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 0,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "AccountId",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "beneficiary",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 0,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "AccountId",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "unlock_at",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 4,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "BlockNumber",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 3,
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 674,
            ty: Type {
                path: Path {
                    segments: [
                        "pallet_child_bounties",
                        "pallet",
                        "Error",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "T",
                        ty: None,
                    },
                ],
                type_def: Variant(
                    TypeDefVariant {
                        variants: [
                            Variant {
                                name: "ParentBountyNotActive",
                                fields: [],
                                index: 0,
                                docs: [
                                    "The parent bounty is not in active state.",
                                ],
                            },
                            Variant {
                                name: "InsufficientBountyBalance",
                                fields: [],
                                index: 1,
                                docs: [
                                    "The bounty balance is not enough to add new child-bounty.",
                                ],
                            },
                            Variant {
                                name: "TooManyChildBounties",
                                fields: [],
                                index: 2,
                                docs: [
                                    "Number of child bounties exceeds limit `MaxActiveChildBountyCount`.",
                                ],
                            },
                        ],
                    },
                ),
                docs: [
                    "The `Error` enum of this pallet.",
                ],
            },
        },
        PortableType {
            id: 675,
            ty: Type {
                path: Path {
                    segments: [
                        "pallet_tips",
                        "OpenTip",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "AccountId",
                        ty: Some(
                            UntrackedSymbol {
                                id: 0,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ),
                    },
                    TypeParameter {
                        name: "Balance",
                        ty: Some(
                            UntrackedSymbol {
                                id: 6,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ),
                    },
                    TypeParameter {
                        name: "BlockNumber",
                        ty: Some(
                            UntrackedSymbol {
                                id: 4,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ),
                    },
                    TypeParameter {
                        name: "Hash",
                        ty: Some(
                            UntrackedSymbol {
                                id: 12,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ),
                    },
                ],
                type_def: Composite(
                    TypeDefComposite {
                        fields: [
                            Field {
                                name: Some(
                                    "reason",
                                ),
                                ty: UntrackedSymbol {
                                    id: 12,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "Hash",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "who",
                                ),
                                ty: UntrackedSymbol {
                                    id: 0,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "AccountId",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "finder",
                                ),
                                ty: UntrackedSymbol {
                                    id: 0,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "AccountId",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "deposit",
                                ),
                                ty: UntrackedSymbol {
                                    id: 6,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "Balance",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "closes",
                                ),
                                ty: UntrackedSymbol {
                                    id: 137,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "Option<BlockNumber>",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "tips",
                                ),
                                ty: UntrackedSymbol {
                                    id: 71,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "Vec<(AccountId, Balance)>",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "finders_fee",
                                ),
                                ty: UntrackedSymbol {
                                    id: 44,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "bool",
                                ),
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 676,
            ty: Type {
                path: Path {
                    segments: [
                        "pallet_tips",
                        "pallet",
                        "Error",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "T",
                        ty: None,
                    },
                    TypeParameter {
                        name: "I",
                        ty: None,
                    },
                ],
                type_def: Variant(
                    TypeDefVariant {
                        variants: [
                            Variant {
                                name: "ReasonTooBig",
                                fields: [],
                                index: 0,
                                docs: [
                                    "The reason given is just too big.",
                                ],
                            },
                            Variant {
                                name: "AlreadyKnown",
                                fields: [],
                                index: 1,
                                docs: [
                                    "The tip was already found/started.",
                                ],
                            },
                            Variant {
                                name: "UnknownTip",
                                fields: [],
                                index: 2,
                                docs: [
                                    "The tip hash is unknown.",
                                ],
                            },
                            Variant {
                                name: "NotFinder",
                                fields: [],
                                index: 3,
                                docs: [
                                    "The account attempting to retract the tip is not the finder of the tip.",
                                ],
                            },
                            Variant {
                                name: "StillOpen",
                                fields: [],
                                index: 4,
                                docs: [
                                    "The tip cannot be claimed/closed because there are not enough tippers yet.",
                                ],
                            },
                            Variant {
                                name: "Premature",
                                fields: [],
                                index: 5,
                                docs: [
                                    "The tip cannot be claimed/closed because it's still in the countdown period.",
                                ],
                            },
                        ],
                    },
                ),
                docs: [
                    "The `Error` enum of this pallet.",
                ],
            },
        },
        PortableType {
            id: 677,
            ty: Type {
                path: Path {
                    segments: [
                        "pallet_election_provider_multi_phase",
                        "ReadySolution",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "AccountId",
                        ty: None,
                    },
                    TypeParameter {
                        name: "MaxWinners",
                        ty: None,
                    },
                ],
                type_def: Composite(
                    TypeDefComposite {
                        fields: [
                            Field {
                                name: Some(
                                    "supports",
                                ),
                                ty: UntrackedSymbol {
                                    id: 678,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "BoundedSupports<AccountId, MaxWinners>",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "score",
                                ),
                                ty: UntrackedSymbol {
                                    id: 285,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "ElectionScore",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "compute",
                                ),
                                ty: UntrackedSymbol {
                                    id: 452,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "ElectionCompute",
                                ),
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 678,
            ty: Type {
                path: Path {
                    segments: [
                        "bounded_collections",
                        "bounded_vec",
                        "BoundedVec",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "T",
                        ty: Some(
                            UntrackedSymbol {
                                id: 289,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ),
                    },
                    TypeParameter {
                        name: "S",
                        ty: None,
                    },
                ],
                type_def: Composite(
                    TypeDefComposite {
                        fields: [
                            Field {
                                name: None,
                                ty: UntrackedSymbol {
                                    id: 288,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "Vec<T>",
                                ),
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 679,
            ty: Type {
                path: Path {
                    segments: [
                        "pallet_election_provider_multi_phase",
                        "RoundSnapshot",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "AccountId",
                        ty: Some(
                            UntrackedSymbol {
                                id: 0,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ),
                    },
                    TypeParameter {
                        name: "DataProvider",
                        ty: Some(
                            UntrackedSymbol {
                                id: 680,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ),
                    },
                ],
                type_def: Composite(
                    TypeDefComposite {
                        fields: [
                            Field {
                                name: Some(
                                    "voters",
                                ),
                                ty: UntrackedSymbol {
                                    id: 681,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "Vec<DataProvider>",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "targets",
                                ),
                                ty: UntrackedSymbol {
                                    id: 104,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "Vec<AccountId>",
                                ),
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 680,
            ty: Type {
                path: Path {
                    segments: [],
                },
                type_params: [],
                type_def: Tuple(
                    TypeDefTuple {
                        fields: [
                            UntrackedSymbol {
                                id: 0,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                            UntrackedSymbol {
                                id: 11,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                            UntrackedSymbol {
                                id: 542,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 681,
            ty: Type {
                path: Path {
                    segments: [],
                },
                type_params: [],
                type_def: Sequence(
                    TypeDefSequence {
                        type_param: UntrackedSymbol {
                            id: 680,
                            marker: PhantomData<fn() -> core::any::TypeId>,
                        },
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 682,
            ty: Type {
                path: Path {
                    segments: [
                        "bounded_collections",
                        "bounded_vec",
                        "BoundedVec",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "T",
                        ty: Some(
                            UntrackedSymbol {
                                id: 683,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ),
                    },
                    TypeParameter {
                        name: "S",
                        ty: None,
                    },
                ],
                type_def: Composite(
                    TypeDefComposite {
                        fields: [
                            Field {
                                name: None,
                                ty: UntrackedSymbol {
                                    id: 684,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "Vec<T>",
                                ),
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 683,
            ty: Type {
                path: Path {
                    segments: [],
                },
                type_params: [],
                type_def: Tuple(
                    TypeDefTuple {
                        fields: [
                            UntrackedSymbol {
                                id: 285,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                            UntrackedSymbol {
                                id: 4,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                            UntrackedSymbol {
                                id: 4,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 684,
            ty: Type {
                path: Path {
                    segments: [],
                },
                type_params: [],
                type_def: Sequence(
                    TypeDefSequence {
                        type_param: UntrackedSymbol {
                            id: 683,
                            marker: PhantomData<fn() -> core::any::TypeId>,
                        },
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 685,
            ty: Type {
                path: Path {
                    segments: [
                        "pallet_election_provider_multi_phase",
                        "signed",
                        "SignedSubmission",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "AccountId",
                        ty: Some(
                            UntrackedSymbol {
                                id: 0,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ),
                    },
                    TypeParameter {
                        name: "Balance",
                        ty: Some(
                            UntrackedSymbol {
                                id: 6,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ),
                    },
                    TypeParameter {
                        name: "Solution",
                        ty: Some(
                            UntrackedSymbol {
                                id: 234,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ),
                    },
                ],
                type_def: Composite(
                    TypeDefComposite {
                        fields: [
                            Field {
                                name: Some(
                                    "who",
                                ),
                                ty: UntrackedSymbol {
                                    id: 0,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "AccountId",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "deposit",
                                ),
                                ty: UntrackedSymbol {
                                    id: 6,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "Balance",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "raw_solution",
                                ),
                                ty: UntrackedSymbol {
                                    id: 233,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "RawSolution<Solution>",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "call_fee",
                                ),
                                ty: UntrackedSymbol {
                                    id: 6,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "Balance",
                                ),
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 686,
            ty: Type {
                path: Path {
                    segments: [
                        "pallet_election_provider_multi_phase",
                        "pallet",
                        "Error",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "T",
                        ty: None,
                    },
                ],
                type_def: Variant(
                    TypeDefVariant {
                        variants: [
                            Variant {
                                name: "PreDispatchEarlySubmission",
                                fields: [],
                                index: 0,
                                docs: [
                                    "Submission was too early.",
                                ],
                            },
                            Variant {
                                name: "PreDispatchWrongWinnerCount",
                                fields: [],
                                index: 1,
                                docs: [
                                    "Wrong number of winners presented.",
                                ],
                            },
                            Variant {
                                name: "PreDispatchWeakSubmission",
                                fields: [],
                                index: 2,
                                docs: [
                                    "Submission was too weak, score-wise.",
                                ],
                            },
                            Variant {
                                name: "SignedQueueFull",
                                fields: [],
                                index: 3,
                                docs: [
                                    "The queue was full, and the solution was not better than any of the existing ones.",
                                ],
                            },
                            Variant {
                                name: "SignedCannotPayDeposit",
                                fields: [],
                                index: 4,
                                docs: [
                                    "The origin failed to pay the deposit.",
                                ],
                            },
                            Variant {
                                name: "SignedInvalidWitness",
                                fields: [],
                                index: 5,
                                docs: [
                                    "Witness data to dispatchable is invalid.",
                                ],
                            },
                            Variant {
                                name: "SignedTooMuchWeight",
                                fields: [],
                                index: 6,
                                docs: [
                                    "The signed submission consumes too much weight",
                                ],
                            },
                            Variant {
                                name: "OcwCallWrongEra",
                                fields: [],
                                index: 7,
                                docs: [
                                    "OCW submitted solution for wrong round",
                                ],
                            },
                            Variant {
                                name: "MissingSnapshotMetadata",
                                fields: [],
                                index: 8,
                                docs: [
                                    "Snapshot metadata should exist but didn't.",
                                ],
                            },
                            Variant {
                                name: "InvalidSubmissionIndex",
                                fields: [],
                                index: 9,
                                docs: [
                                    "`Self::insert_submission` returned an invalid index.",
                                ],
                            },
                            Variant {
                                name: "CallNotAllowed",
                                fields: [],
                                index: 10,
                                docs: [
                                    "The call is not allowed at this point.",
                                ],
                            },
                            Variant {
                                name: "FallbackFailed",
                                fields: [],
                                index: 11,
                                docs: [
                                    "The fallback failed",
                                ],
                            },
                            Variant {
                                name: "BoundNotMet",
                                fields: [],
                                index: 12,
                                docs: [
                                    "Some bound not met",
                                ],
                            },
                            Variant {
                                name: "TooManyWinners",
                                fields: [],
                                index: 13,
                                docs: [
                                    "Submitted solution has too many winners",
                                ],
                            },
                        ],
                    },
                ),
                docs: [
                    "Error of the pallet that can be returned in response to dispatches.",
                ],
            },
        },
        PortableType {
            id: 687,
            ty: Type {
                path: Path {
                    segments: [
                        "pallet_bags_list",
                        "list",
                        "Node",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "T",
                        ty: None,
                    },
                    TypeParameter {
                        name: "I",
                        ty: None,
                    },
                ],
                type_def: Composite(
                    TypeDefComposite {
                        fields: [
                            Field {
                                name: Some(
                                    "id",
                                ),
                                ty: UntrackedSymbol {
                                    id: 0,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "T::AccountId",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "prev",
                                ),
                                ty: UntrackedSymbol {
                                    id: 140,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "Option<T::AccountId>",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "next",
                                ),
                                ty: UntrackedSymbol {
                                    id: 140,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "Option<T::AccountId>",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "bag_upper",
                                ),
                                ty: UntrackedSymbol {
                                    id: 11,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "T::Score",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "score",
                                ),
                                ty: UntrackedSymbol {
                                    id: 11,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "T::Score",
                                ),
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 688,
            ty: Type {
                path: Path {
                    segments: [
                        "pallet_bags_list",
                        "list",
                        "Bag",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "T",
                        ty: None,
                    },
                    TypeParameter {
                        name: "I",
                        ty: None,
                    },
                ],
                type_def: Composite(
                    TypeDefComposite {
                        fields: [
                            Field {
                                name: Some(
                                    "head",
                                ),
                                ty: UntrackedSymbol {
                                    id: 140,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "Option<T::AccountId>",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "tail",
                                ),
                                ty: UntrackedSymbol {
                                    id: 140,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "Option<T::AccountId>",
                                ),
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 689,
            ty: Type {
                path: Path {
                    segments: [],
                },
                type_params: [],
                type_def: Sequence(
                    TypeDefSequence {
                        type_param: UntrackedSymbol {
                            id: 11,
                            marker: PhantomData<fn() -> core::any::TypeId>,
                        },
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 690,
            ty: Type {
                path: Path {
                    segments: [
                        "pallet_bags_list",
                        "pallet",
                        "Error",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "T",
                        ty: None,
                    },
                    TypeParameter {
                        name: "I",
                        ty: None,
                    },
                ],
                type_def: Variant(
                    TypeDefVariant {
                        variants: [
                            Variant {
                                name: "List",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 691,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "ListError",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 0,
                                docs: [
                                    "A error in the list interface implementation.",
                                ],
                            },
                        ],
                    },
                ),
                docs: [
                    "The `Error` enum of this pallet.",
                ],
            },
        },
        PortableType {
            id: 691,
            ty: Type {
                path: Path {
                    segments: [
                        "pallet_bags_list",
                        "list",
                        "ListError",
                    ],
                },
                type_params: [],
                type_def: Variant(
                    TypeDefVariant {
                        variants: [
                            Variant {
                                name: "Duplicate",
                                fields: [],
                                index: 0,
                                docs: [],
                            },
                            Variant {
                                name: "NotHeavier",
                                fields: [],
                                index: 1,
                                docs: [],
                            },
                            Variant {
                                name: "NotInSameBag",
                                fields: [],
                                index: 2,
                                docs: [],
                            },
                            Variant {
                                name: "NodeNotFound",
                                fields: [],
                                index: 3,
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 692,
            ty: Type {
                path: Path {
                    segments: [
                        "pallet_nomination_pools",
                        "PoolMember",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "T",
                        ty: None,
                    },
                ],
                type_def: Composite(
                    TypeDefComposite {
                        fields: [
                            Field {
                                name: Some(
                                    "pool_id",
                                ),
                                ty: UntrackedSymbol {
                                    id: 4,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "PoolId",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "points",
                                ),
                                ty: UntrackedSymbol {
                                    id: 6,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "BalanceOf<T>",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "last_recorded_reward_counter",
                                ),
                                ty: UntrackedSymbol {
                                    id: 534,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "T::RewardCounter",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "unbonding_eras",
                                ),
                                ty: UntrackedSymbol {
                                    id: 693,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "BoundedBTreeMap<EraIndex, BalanceOf<T>, T::MaxUnbonding>",
                                ),
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 693,
            ty: Type {
                path: Path {
                    segments: [
                        "bounded_collections",
                        "bounded_btree_map",
                        "BoundedBTreeMap",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "K",
                        ty: Some(
                            UntrackedSymbol {
                                id: 4,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ),
                    },
                    TypeParameter {
                        name: "V",
                        ty: Some(
                            UntrackedSymbol {
                                id: 6,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ),
                    },
                    TypeParameter {
                        name: "S",
                        ty: None,
                    },
                ],
                type_def: Composite(
                    TypeDefComposite {
                        fields: [
                            Field {
                                name: None,
                                ty: UntrackedSymbol {
                                    id: 694,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "BTreeMap<K, V>",
                                ),
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 694,
            ty: Type {
                path: Path {
                    segments: [
                        "BTreeMap",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "K",
                        ty: Some(
                            UntrackedSymbol {
                                id: 4,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ),
                    },
                    TypeParameter {
                        name: "V",
                        ty: Some(
                            UntrackedSymbol {
                                id: 6,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ),
                    },
                ],
                type_def: Composite(
                    TypeDefComposite {
                        fields: [
                            Field {
                                name: None,
                                ty: UntrackedSymbol {
                                    id: 629,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: None,
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 695,
            ty: Type {
                path: Path {
                    segments: [
                        "pallet_nomination_pools",
                        "BondedPoolInner",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "T",
                        ty: None,
                    },
                ],
                type_def: Composite(
                    TypeDefComposite {
                        fields: [
                            Field {
                                name: Some(
                                    "commission",
                                ),
                                ty: UntrackedSymbol {
                                    id: 696,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "Commission<T>",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "member_counter",
                                ),
                                ty: UntrackedSymbol {
                                    id: 4,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "u32",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "points",
                                ),
                                ty: UntrackedSymbol {
                                    id: 6,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "BalanceOf<T>",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "roles",
                                ),
                                ty: UntrackedSymbol {
                                    id: 699,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "PoolRoles<T::AccountId>",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "state",
                                ),
                                ty: UntrackedSymbol {
                                    id: 294,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "PoolState",
                                ),
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 696,
            ty: Type {
                path: Path {
                    segments: [
                        "pallet_nomination_pools",
                        "Commission",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "T",
                        ty: None,
                    },
                ],
                type_def: Composite(
                    TypeDefComposite {
                        fields: [
                            Field {
                                name: Some(
                                    "current",
                                ),
                                ty: UntrackedSymbol {
                                    id: 300,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "Option<(Perbill, T::AccountId)>",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "max",
                                ),
                                ty: UntrackedSymbol {
                                    id: 697,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "Option<Perbill>",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "change_rate",
                                ),
                                ty: UntrackedSymbol {
                                    id: 698,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "Option<CommissionChangeRate<T::BlockNumber>>",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "throttle_from",
                                ),
                                ty: UntrackedSymbol {
                                    id: 137,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "Option<T::BlockNumber>",
                                ),
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 697,
            ty: Type {
                path: Path {
                    segments: [
                        "Option",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "T",
                        ty: Some(
                            UntrackedSymbol {
                                id: 41,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ),
                    },
                ],
                type_def: Variant(
                    TypeDefVariant {
                        variants: [
                            Variant {
                                name: "None",
                                fields: [],
                                index: 0,
                                docs: [],
                            },
                            Variant {
                                name: "Some",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 41,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: None,
                                        docs: [],
                                    },
                                ],
                                index: 1,
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 698,
            ty: Type {
                path: Path {
                    segments: [
                        "Option",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "T",
                        ty: Some(
                            UntrackedSymbol {
                                id: 302,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ),
                    },
                ],
                type_def: Variant(
                    TypeDefVariant {
                        variants: [
                            Variant {
                                name: "None",
                                fields: [],
                                index: 0,
                                docs: [],
                            },
                            Variant {
                                name: "Some",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 302,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: None,
                                        docs: [],
                                    },
                                ],
                                index: 1,
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 699,
            ty: Type {
                path: Path {
                    segments: [
                        "pallet_nomination_pools",
                        "PoolRoles",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "AccountId",
                        ty: Some(
                            UntrackedSymbol {
                                id: 0,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ),
                    },
                ],
                type_def: Composite(
                    TypeDefComposite {
                        fields: [
                            Field {
                                name: Some(
                                    "depositor",
                                ),
                                ty: UntrackedSymbol {
                                    id: 0,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "AccountId",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "root",
                                ),
                                ty: UntrackedSymbol {
                                    id: 140,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "Option<AccountId>",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "nominator",
                                ),
                                ty: UntrackedSymbol {
                                    id: 140,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "Option<AccountId>",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "bouncer",
                                ),
                                ty: UntrackedSymbol {
                                    id: 140,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "Option<AccountId>",
                                ),
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 700,
            ty: Type {
                path: Path {
                    segments: [
                        "pallet_nomination_pools",
                        "RewardPool",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "T",
                        ty: None,
                    },
                ],
                type_def: Composite(
                    TypeDefComposite {
                        fields: [
                            Field {
                                name: Some(
                                    "last_recorded_reward_counter",
                                ),
                                ty: UntrackedSymbol {
                                    id: 534,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "T::RewardCounter",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "last_recorded_total_payouts",
                                ),
                                ty: UntrackedSymbol {
                                    id: 6,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "BalanceOf<T>",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "total_rewards_claimed",
                                ),
                                ty: UntrackedSymbol {
                                    id: 6,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "BalanceOf<T>",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "total_commission_pending",
                                ),
                                ty: UntrackedSymbol {
                                    id: 6,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "BalanceOf<T>",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "total_commission_claimed",
                                ),
                                ty: UntrackedSymbol {
                                    id: 6,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "BalanceOf<T>",
                                ),
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 701,
            ty: Type {
                path: Path {
                    segments: [
                        "pallet_nomination_pools",
                        "SubPools",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "T",
                        ty: None,
                    },
                ],
                type_def: Composite(
                    TypeDefComposite {
                        fields: [
                            Field {
                                name: Some(
                                    "no_era",
                                ),
                                ty: UntrackedSymbol {
                                    id: 702,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "UnbondPool<T>",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "with_era",
                                ),
                                ty: UntrackedSymbol {
                                    id: 703,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "BoundedBTreeMap<EraIndex, UnbondPool<T>, TotalUnbondingPools<T>>",
                                ),
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 702,
            ty: Type {
                path: Path {
                    segments: [
                        "pallet_nomination_pools",
                        "UnbondPool",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "T",
                        ty: None,
                    },
                ],
                type_def: Composite(
                    TypeDefComposite {
                        fields: [
                            Field {
                                name: Some(
                                    "points",
                                ),
                                ty: UntrackedSymbol {
                                    id: 6,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "BalanceOf<T>",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "balance",
                                ),
                                ty: UntrackedSymbol {
                                    id: 6,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "BalanceOf<T>",
                                ),
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 703,
            ty: Type {
                path: Path {
                    segments: [
                        "bounded_collections",
                        "bounded_btree_map",
                        "BoundedBTreeMap",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "K",
                        ty: Some(
                            UntrackedSymbol {
                                id: 4,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ),
                    },
                    TypeParameter {
                        name: "V",
                        ty: Some(
                            UntrackedSymbol {
                                id: 702,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ),
                    },
                    TypeParameter {
                        name: "S",
                        ty: None,
                    },
                ],
                type_def: Composite(
                    TypeDefComposite {
                        fields: [
                            Field {
                                name: None,
                                ty: UntrackedSymbol {
                                    id: 704,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "BTreeMap<K, V>",
                                ),
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 704,
            ty: Type {
                path: Path {
                    segments: [
                        "BTreeMap",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "K",
                        ty: Some(
                            UntrackedSymbol {
                                id: 4,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ),
                    },
                    TypeParameter {
                        name: "V",
                        ty: Some(
                            UntrackedSymbol {
                                id: 702,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ),
                    },
                ],
                type_def: Composite(
                    TypeDefComposite {
                        fields: [
                            Field {
                                name: None,
                                ty: UntrackedSymbol {
                                    id: 705,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: None,
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 705,
            ty: Type {
                path: Path {
                    segments: [],
                },
                type_params: [],
                type_def: Sequence(
                    TypeDefSequence {
                        type_param: UntrackedSymbol {
                            id: 706,
                            marker: PhantomData<fn() -> core::any::TypeId>,
                        },
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 706,
            ty: Type {
                path: Path {
                    segments: [],
                },
                type_params: [],
                type_def: Tuple(
                    TypeDefTuple {
                        fields: [
                            UntrackedSymbol {
                                id: 4,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                            UntrackedSymbol {
                                id: 702,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 707,
            ty: Type {
                path: Path {
                    segments: [
                        "bounded_collections",
                        "bounded_vec",
                        "BoundedVec",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "T",
                        ty: Some(
                            UntrackedSymbol {
                                id: 2,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ),
                    },
                    TypeParameter {
                        name: "S",
                        ty: None,
                    },
                ],
                type_def: Composite(
                    TypeDefComposite {
                        fields: [
                            Field {
                                name: None,
                                ty: UntrackedSymbol {
                                    id: 13,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "Vec<T>",
                                ),
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 708,
            ty: Type {
                path: Path {
                    segments: [
                        "pallet_nomination_pools",
                        "pallet",
                        "Error",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "T",
                        ty: None,
                    },
                ],
                type_def: Variant(
                    TypeDefVariant {
                        variants: [
                            Variant {
                                name: "PoolNotFound",
                                fields: [],
                                index: 0,
                                docs: [
                                    "A (bonded) pool id does not exist.",
                                ],
                            },
                            Variant {
                                name: "PoolMemberNotFound",
                                fields: [],
                                index: 1,
                                docs: [
                                    "An account is not a member.",
                                ],
                            },
                            Variant {
                                name: "RewardPoolNotFound",
                                fields: [],
                                index: 2,
                                docs: [
                                    "A reward pool does not exist. In all cases this is a system logic error.",
                                ],
                            },
                            Variant {
                                name: "SubPoolsNotFound",
                                fields: [],
                                index: 3,
                                docs: [
                                    "A sub pool does not exist.",
                                ],
                            },
                            Variant {
                                name: "AccountBelongsToOtherPool",
                                fields: [],
                                index: 4,
                                docs: [
                                    "An account is already delegating in another pool. An account may only belong to one",
                                    "pool at a time.",
                                ],
                            },
                            Variant {
                                name: "FullyUnbonding",
                                fields: [],
                                index: 5,
                                docs: [
                                    "The member is fully unbonded (and thus cannot access the bonded and reward pool",
                                    "anymore to, for example, collect rewards).",
                                ],
                            },
                            Variant {
                                name: "MaxUnbondingLimit",
                                fields: [],
                                index: 6,
                                docs: [
                                    "The member cannot unbond further chunks due to reaching the limit.",
                                ],
                            },
                            Variant {
                                name: "CannotWithdrawAny",
                                fields: [],
                                index: 7,
                                docs: [
                                    "None of the funds can be withdrawn yet because the bonding duration has not passed.",
                                ],
                            },
                            Variant {
                                name: "MinimumBondNotMet",
                                fields: [],
                                index: 8,
                                docs: [
                                    "The amount does not meet the minimum bond to either join or create a pool.",
                                    "",
                                    "The depositor can never unbond to a value less than",
                                    "`Pallet::depositor_min_bond`. The caller does not have nominating",
                                    "permissions for the pool. Members can never unbond to a value below `MinJoinBond`.",
                                ],
                            },
                            Variant {
                                name: "OverflowRisk",
                                fields: [],
                                index: 9,
                                docs: [
                                    "The transaction could not be executed due to overflow risk for the pool.",
                                ],
                            },
                            Variant {
                                name: "NotDestroying",
                                fields: [],
                                index: 10,
                                docs: [
                                    "A pool must be in [`PoolState::Destroying`] in order for the depositor to unbond or for",
                                    "other members to be permissionlessly unbonded.",
                                ],
                            },
                            Variant {
                                name: "NotNominator",
                                fields: [],
                                index: 11,
                                docs: [
                                    "The caller does not have nominating permissions for the pool.",
                                ],
                            },
                            Variant {
                                name: "NotKickerOrDestroying",
                                fields: [],
                                index: 12,
                                docs: [
                                    "Either a) the caller cannot make a valid kick or b) the pool is not destroying.",
                                ],
                            },
                            Variant {
                                name: "NotOpen",
                                fields: [],
                                index: 13,
                                docs: [
                                    "The pool is not open to join",
                                ],
                            },
                            Variant {
                                name: "MaxPools",
                                fields: [],
                                index: 14,
                                docs: [
                                    "The system is maxed out on pools.",
                                ],
                            },
                            Variant {
                                name: "MaxPoolMembers",
                                fields: [],
                                index: 15,
                                docs: [
                                    "Too many members in the pool or system.",
                                ],
                            },
                            Variant {
                                name: "CanNotChangeState",
                                fields: [],
                                index: 16,
                                docs: [
                                    "The pools state cannot be changed.",
                                ],
                            },
                            Variant {
                                name: "DoesNotHavePermission",
                                fields: [],
                                index: 17,
                                docs: [
                                    "The caller does not have adequate permissions.",
                                ],
                            },
                            Variant {
                                name: "MetadataExceedsMaxLen",
                                fields: [],
                                index: 18,
                                docs: [
                                    "Metadata exceeds [`Config::MaxMetadataLen`]",
                                ],
                            },
                            Variant {
                                name: "Defensive",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 709,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "DefensiveError",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 19,
                                docs: [
                                    "Some error occurred that should never happen. This should be reported to the",
                                    "maintainers.",
                                ],
                            },
                            Variant {
                                name: "PartialUnbondNotAllowedPermissionlessly",
                                fields: [],
                                index: 20,
                                docs: [
                                    "Partial unbonding now allowed permissionlessly.",
                                ],
                            },
                            Variant {
                                name: "MaxCommissionRestricted",
                                fields: [],
                                index: 21,
                                docs: [
                                    "The pool's max commission cannot be set higher than the existing value.",
                                ],
                            },
                            Variant {
                                name: "CommissionExceedsMaximum",
                                fields: [],
                                index: 22,
                                docs: [
                                    "The supplied commission exceeds the max allowed commission.",
                                ],
                            },
                            Variant {
                                name: "CommissionChangeThrottled",
                                fields: [],
                                index: 23,
                                docs: [
                                    "Not enough blocks have surpassed since the last commission update.",
                                ],
                            },
                            Variant {
                                name: "CommissionChangeRateNotAllowed",
                                fields: [],
                                index: 24,
                                docs: [
                                    "The submitted changes to commission change rate are not allowed.",
                                ],
                            },
                            Variant {
                                name: "NoPendingCommission",
                                fields: [],
                                index: 25,
                                docs: [
                                    "There is no pending commission to claim.",
                                ],
                            },
                            Variant {
                                name: "NoCommissionCurrentSet",
                                fields: [],
                                index: 26,
                                docs: [
                                    "No commission current has been set.",
                                ],
                            },
                            Variant {
                                name: "PoolIdInUse",
                                fields: [],
                                index: 27,
                                docs: [
                                    "Pool id currently in use.",
                                ],
                            },
                            Variant {
                                name: "InvalidPoolId",
                                fields: [],
                                index: 28,
                                docs: [
                                    "Pool id provided is not correct/usable.",
                                ],
                            },
                            Variant {
                                name: "BondExtraRestricted",
                                fields: [],
                                index: 29,
                                docs: [
                                    "Bonding extra is restricted to the exact pending reward amount.",
                                ],
                            },
                        ],
                    },
                ),
                docs: [
                    "The `Error` enum of this pallet.",
                ],
            },
        },
        PortableType {
            id: 709,
            ty: Type {
                path: Path {
                    segments: [
                        "pallet_nomination_pools",
                        "pallet",
                        "DefensiveError",
                    ],
                },
                type_params: [],
                type_def: Variant(
                    TypeDefVariant {
                        variants: [
                            Variant {
                                name: "NotEnoughSpaceInUnbondPool",
                                fields: [],
                                index: 0,
                                docs: [],
                            },
                            Variant {
                                name: "PoolNotFound",
                                fields: [],
                                index: 1,
                                docs: [],
                            },
                            Variant {
                                name: "RewardPoolNotFound",
                                fields: [],
                                index: 2,
                                docs: [],
                            },
                            Variant {
                                name: "SubPoolsNotFound",
                                fields: [],
                                index: 3,
                                docs: [],
                            },
                            Variant {
                                name: "BondedStashKilledPrematurely",
                                fields: [],
                                index: 4,
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 710,
            ty: Type {
                path: Path {
                    segments: [
                        "pallet_fast_unstake",
                        "types",
                        "UnstakeRequest",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "T",
                        ty: None,
                    },
                ],
                type_def: Composite(
                    TypeDefComposite {
                        fields: [
                            Field {
                                name: Some(
                                    "stashes",
                                ),
                                ty: UntrackedSymbol {
                                    id: 711,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "BoundedVec<(T::AccountId, BalanceOf<T>), T::BatchSize>",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "checked",
                                ),
                                ty: UntrackedSymbol {
                                    id: 712,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "BoundedVec<EraIndex, MaxChecking<T>>",
                                ),
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 711,
            ty: Type {
                path: Path {
                    segments: [
                        "bounded_collections",
                        "bounded_vec",
                        "BoundedVec",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "T",
                        ty: Some(
                            UntrackedSymbol {
                                id: 72,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ),
                    },
                    TypeParameter {
                        name: "S",
                        ty: None,
                    },
                ],
                type_def: Composite(
                    TypeDefComposite {
                        fields: [
                            Field {
                                name: None,
                                ty: UntrackedSymbol {
                                    id: 71,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "Vec<T>",
                                ),
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 712,
            ty: Type {
                path: Path {
                    segments: [
                        "bounded_collections",
                        "bounded_vec",
                        "BoundedVec",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "T",
                        ty: Some(
                            UntrackedSymbol {
                                id: 4,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ),
                    },
                    TypeParameter {
                        name: "S",
                        ty: None,
                    },
                ],
                type_def: Composite(
                    TypeDefComposite {
                        fields: [
                            Field {
                                name: None,
                                ty: UntrackedSymbol {
                                    id: 109,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "Vec<T>",
                                ),
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 713,
            ty: Type {
                path: Path {
                    segments: [
                        "pallet_fast_unstake",
                        "pallet",
                        "Error",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "T",
                        ty: None,
                    },
                ],
                type_def: Variant(
                    TypeDefVariant {
                        variants: [
                            Variant {
                                name: "NotController",
                                fields: [],
                                index: 0,
                                docs: [
                                    "The provided Controller account was not found.",
                                    "",
                                    "This means that the given account is not bonded.",
                                ],
                            },
                            Variant {
                                name: "AlreadyQueued",
                                fields: [],
                                index: 1,
                                docs: [
                                    "The bonded account has already been queued.",
                                ],
                            },
                            Variant {
                                name: "NotFullyBonded",
                                fields: [],
                                index: 2,
                                docs: [
                                    "The bonded account has active unlocking chunks.",
                                ],
                            },
                            Variant {
                                name: "NotQueued",
                                fields: [],
                                index: 3,
                                docs: [
                                    "The provided un-staker is not in the `Queue`.",
                                ],
                            },
                            Variant {
                                name: "AlreadyHead",
                                fields: [],
                                index: 4,
                                docs: [
                                    "The provided un-staker is already in Head, and cannot deregister.",
                                ],
                            },
                            Variant {
                                name: "CallNotAllowed",
                                fields: [],
                                index: 5,
                                docs: [
                                    "The call is not allowed at this point because the pallet is not active.",
                                ],
                            },
                        ],
                    },
                ),
                docs: [
                    "The `Error` enum of this pallet.",
                ],
            },
        },
        PortableType {
            id: 714,
            ty: Type {
                path: Path {
                    segments: [
                        "polkadot_runtime_parachains",
                        "configuration",
                        "HostConfiguration",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "BlockNumber",
                        ty: Some(
                            UntrackedSymbol {
                                id: 4,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ),
                    },
                ],
                type_def: Composite(
                    TypeDefComposite {
                        fields: [
                            Field {
                                name: Some(
                                    "max_code_size",
                                ),
                                ty: UntrackedSymbol {
                                    id: 4,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "u32",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "max_head_data_size",
                                ),
                                ty: UntrackedSymbol {
                                    id: 4,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "u32",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "max_upward_queue_count",
                                ),
                                ty: UntrackedSymbol {
                                    id: 4,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "u32",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "max_upward_queue_size",
                                ),
                                ty: UntrackedSymbol {
                                    id: 4,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "u32",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "max_upward_message_size",
                                ),
                                ty: UntrackedSymbol {
                                    id: 4,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "u32",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "max_upward_message_num_per_candidate",
                                ),
                                ty: UntrackedSymbol {
                                    id: 4,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "u32",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "hrmp_max_message_num_per_candidate",
                                ),
                                ty: UntrackedSymbol {
                                    id: 4,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "u32",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "validation_upgrade_cooldown",
                                ),
                                ty: UntrackedSymbol {
                                    id: 4,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "BlockNumber",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "validation_upgrade_delay",
                                ),
                                ty: UntrackedSymbol {
                                    id: 4,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "BlockNumber",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "async_backing_params",
                                ),
                                ty: UntrackedSymbol {
                                    id: 305,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "AsyncBackingParams",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "max_pov_size",
                                ),
                                ty: UntrackedSymbol {
                                    id: 4,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "u32",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "max_downward_message_size",
                                ),
                                ty: UntrackedSymbol {
                                    id: 4,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "u32",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "hrmp_max_parachain_outbound_channels",
                                ),
                                ty: UntrackedSymbol {
                                    id: 4,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "u32",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "hrmp_max_parathread_outbound_channels",
                                ),
                                ty: UntrackedSymbol {
                                    id: 4,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "u32",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "hrmp_sender_deposit",
                                ),
                                ty: UntrackedSymbol {
                                    id: 6,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "Balance",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "hrmp_recipient_deposit",
                                ),
                                ty: UntrackedSymbol {
                                    id: 6,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "Balance",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "hrmp_channel_max_capacity",
                                ),
                                ty: UntrackedSymbol {
                                    id: 4,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "u32",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "hrmp_channel_max_total_size",
                                ),
                                ty: UntrackedSymbol {
                                    id: 4,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "u32",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "hrmp_max_parachain_inbound_channels",
                                ),
                                ty: UntrackedSymbol {
                                    id: 4,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "u32",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "hrmp_max_parathread_inbound_channels",
                                ),
                                ty: UntrackedSymbol {
                                    id: 4,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "u32",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "hrmp_channel_max_message_size",
                                ),
                                ty: UntrackedSymbol {
                                    id: 4,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "u32",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "executor_params",
                                ),
                                ty: UntrackedSymbol {
                                    id: 306,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "ExecutorParams",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "code_retention_period",
                                ),
                                ty: UntrackedSymbol {
                                    id: 4,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "BlockNumber",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "parathread_cores",
                                ),
                                ty: UntrackedSymbol {
                                    id: 4,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "u32",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "parathread_retries",
                                ),
                                ty: UntrackedSymbol {
                                    id: 4,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "u32",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "group_rotation_frequency",
                                ),
                                ty: UntrackedSymbol {
                                    id: 4,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "BlockNumber",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "chain_availability_period",
                                ),
                                ty: UntrackedSymbol {
                                    id: 4,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "BlockNumber",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "thread_availability_period",
                                ),
                                ty: UntrackedSymbol {
                                    id: 4,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "BlockNumber",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "scheduling_lookahead",
                                ),
                                ty: UntrackedSymbol {
                                    id: 4,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "u32",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "max_validators_per_core",
                                ),
                                ty: UntrackedSymbol {
                                    id: 137,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "Option<u32>",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "max_validators",
                                ),
                                ty: UntrackedSymbol {
                                    id: 137,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "Option<u32>",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "dispute_period",
                                ),
                                ty: UntrackedSymbol {
                                    id: 4,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "SessionIndex",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "dispute_post_conclusion_acceptance_period",
                                ),
                                ty: UntrackedSymbol {
                                    id: 4,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "BlockNumber",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "no_show_slots",
                                ),
                                ty: UntrackedSymbol {
                                    id: 4,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "u32",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "n_delay_tranches",
                                ),
                                ty: UntrackedSymbol {
                                    id: 4,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "u32",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "zeroth_delay_tranche_width",
                                ),
                                ty: UntrackedSymbol {
                                    id: 4,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "u32",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "needed_approvals",
                                ),
                                ty: UntrackedSymbol {
                                    id: 4,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "u32",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "relay_vrf_modulo_samples",
                                ),
                                ty: UntrackedSymbol {
                                    id: 4,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "u32",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "pvf_checking_enabled",
                                ),
                                ty: UntrackedSymbol {
                                    id: 44,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "bool",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "pvf_voting_ttl",
                                ),
                                ty: UntrackedSymbol {
                                    id: 4,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "SessionIndex",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "minimum_validation_upgrade_delay",
                                ),
                                ty: UntrackedSymbol {
                                    id: 4,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "BlockNumber",
                                ),
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 715,
            ty: Type {
                path: Path {
                    segments: [],
                },
                type_params: [],
                type_def: Sequence(
                    TypeDefSequence {
                        type_param: UntrackedSymbol {
                            id: 716,
                            marker: PhantomData<fn() -> core::any::TypeId>,
                        },
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 716,
            ty: Type {
                path: Path {
                    segments: [],
                },
                type_params: [],
                type_def: Tuple(
                    TypeDefTuple {
                        fields: [
                            UntrackedSymbol {
                                id: 4,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                            UntrackedSymbol {
                                id: 714,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 717,
            ty: Type {
                path: Path {
                    segments: [
                        "polkadot_runtime_parachains",
                        "configuration",
                        "pallet",
                        "Error",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "T",
                        ty: None,
                    },
                ],
                type_def: Variant(
                    TypeDefVariant {
                        variants: [
                            Variant {
                                name: "InvalidNewValue",
                                fields: [],
                                index: 0,
                                docs: [
                                    "The new value for a configuration parameter is invalid.",
                                ],
                            },
                        ],
                    },
                ),
                docs: [
                    "The `Error` enum of this pallet.",
                ],
            },
        },
        PortableType {
            id: 718,
            ty: Type {
                path: Path {
                    segments: [],
                },
                type_params: [],
                type_def: Sequence(
                    TypeDefSequence {
                        type_param: UntrackedSymbol {
                            id: 320,
                            marker: PhantomData<fn() -> core::any::TypeId>,
                        },
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 719,
            ty: Type {
                path: Path {
                    segments: [],
                },
                type_params: [],
                type_def: Sequence(
                    TypeDefSequence {
                        type_param: UntrackedSymbol {
                            id: 116,
                            marker: PhantomData<fn() -> core::any::TypeId>,
                        },
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 720,
            ty: Type {
                path: Path {
                    segments: [
                        "polkadot_runtime_parachains",
                        "inclusion",
                        "AvailabilityBitfieldRecord",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "N",
                        ty: Some(
                            UntrackedSymbol {
                                id: 4,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ),
                    },
                ],
                type_def: Composite(
                    TypeDefComposite {
                        fields: [
                            Field {
                                name: Some(
                                    "bitfield",
                                ),
                                ty: UntrackedSymbol {
                                    id: 317,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "AvailabilityBitfield",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "submitted_at",
                                ),
                                ty: UntrackedSymbol {
                                    id: 4,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "N",
                                ),
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 721,
            ty: Type {
                path: Path {
                    segments: [
                        "polkadot_runtime_parachains",
                        "inclusion",
                        "CandidatePendingAvailability",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "H",
                        ty: Some(
                            UntrackedSymbol {
                                id: 12,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ),
                    },
                    TypeParameter {
                        name: "N",
                        ty: Some(
                            UntrackedSymbol {
                                id: 4,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ),
                    },
                ],
                type_def: Composite(
                    TypeDefComposite {
                        fields: [
                            Field {
                                name: Some(
                                    "core",
                                ),
                                ty: UntrackedSymbol {
                                    id: 460,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "CoreIndex",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "hash",
                                ),
                                ty: UntrackedSymbol {
                                    id: 341,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "CandidateHash",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "descriptor",
                                ),
                                ty: UntrackedSymbol {
                                    id: 325,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "CandidateDescriptor<H>",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "availability_votes",
                                ),
                                ty: UntrackedSymbol {
                                    id: 318,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "BitVec<u8, BitOrderLsb0>",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "backers",
                                ),
                                ty: UntrackedSymbol {
                                    id: 318,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "BitVec<u8, BitOrderLsb0>",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "relay_parent_number",
                                ),
                                ty: UntrackedSymbol {
                                    id: 4,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "N",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "backed_in_number",
                                ),
                                ty: UntrackedSymbol {
                                    id: 4,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "N",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "backing_group",
                                ),
                                ty: UntrackedSymbol {
                                    id: 461,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "GroupIndex",
                                ),
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 722,
            ty: Type {
                path: Path {
                    segments: [
                        "polkadot_runtime_parachains",
                        "inclusion",
                        "pallet",
                        "Error",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "T",
                        ty: None,
                    },
                ],
                type_def: Variant(
                    TypeDefVariant {
                        variants: [
                            Variant {
                                name: "UnsortedOrDuplicateValidatorIndices",
                                fields: [],
                                index: 0,
                                docs: [
                                    "Validator indices are out of order or contains duplicates.",
                                ],
                            },
                            Variant {
                                name: "UnsortedOrDuplicateDisputeStatementSet",
                                fields: [],
                                index: 1,
                                docs: [
                                    "Dispute statement sets are out of order or contain duplicates.",
                                ],
                            },
                            Variant {
                                name: "UnsortedOrDuplicateBackedCandidates",
                                fields: [],
                                index: 2,
                                docs: [
                                    "Backed candidates are out of order (core index) or contain duplicates.",
                                ],
                            },
                            Variant {
                                name: "UnexpectedRelayParent",
                                fields: [],
                                index: 3,
                                docs: [
                                    "A different relay parent was provided compared to the on-chain stored one.",
                                ],
                            },
                            Variant {
                                name: "WrongBitfieldSize",
                                fields: [],
                                index: 4,
                                docs: [
                                    "Availability bitfield has unexpected size.",
                                ],
                            },
                            Variant {
                                name: "BitfieldAllZeros",
                                fields: [],
                                index: 5,
                                docs: [
                                    "Bitfield consists of zeros only.",
                                ],
                            },
                            Variant {
                                name: "BitfieldDuplicateOrUnordered",
                                fields: [],
                                index: 6,
                                docs: [
                                    "Multiple bitfields submitted by same validator or validators out of order by index.",
                                ],
                            },
                            Variant {
                                name: "ValidatorIndexOutOfBounds",
                                fields: [],
                                index: 7,
                                docs: [
                                    "Validator index out of bounds.",
                                ],
                            },
                            Variant {
                                name: "InvalidBitfieldSignature",
                                fields: [],
                                index: 8,
                                docs: [
                                    "Invalid signature",
                                ],
                            },
                            Variant {
                                name: "UnscheduledCandidate",
                                fields: [],
                                index: 9,
                                docs: [
                                    "Candidate submitted but para not scheduled.",
                                ],
                            },
                            Variant {
                                name: "CandidateScheduledBeforeParaFree",
                                fields: [],
                                index: 10,
                                docs: [
                                    "Candidate scheduled despite pending candidate already existing for the para.",
                                ],
                            },
                            Variant {
                                name: "WrongCollator",
                                fields: [],
                                index: 11,
                                docs: [
                                    "Candidate included with the wrong collator.",
                                ],
                            },
                            Variant {
                                name: "ScheduledOutOfOrder",
                                fields: [],
                                index: 12,
                                docs: [
                                    "Scheduled cores out of order.",
                                ],
                            },
                            Variant {
                                name: "HeadDataTooLarge",
                                fields: [],
                                index: 13,
                                docs: [
                                    "Head data exceeds the configured maximum.",
                                ],
                            },
                            Variant {
                                name: "PrematureCodeUpgrade",
                                fields: [],
                                index: 14,
                                docs: [
                                    "Code upgrade prematurely.",
                                ],
                            },
                            Variant {
                                name: "NewCodeTooLarge",
                                fields: [],
                                index: 15,
                                docs: [
                                    "Output code is too large",
                                ],
                            },
                            Variant {
                                name: "CandidateNotInParentContext",
                                fields: [],
                                index: 16,
                                docs: [
                                    "Candidate not in parent context.",
                                ],
                            },
                            Variant {
                                name: "InvalidGroupIndex",
                                fields: [],
                                index: 17,
                                docs: [
                                    "Invalid group index in core assignment.",
                                ],
                            },
                            Variant {
                                name: "InsufficientBacking",
                                fields: [],
                                index: 18,
                                docs: [
                                    "Insufficient (non-majority) backing.",
                                ],
                            },
                            Variant {
                                name: "InvalidBacking",
                                fields: [],
                                index: 19,
                                docs: [
                                    "Invalid (bad signature, unknown validator, etc.) backing.",
                                ],
                            },
                            Variant {
                                name: "NotCollatorSigned",
                                fields: [],
                                index: 20,
                                docs: [
                                    "Collator did not sign PoV.",
                                ],
                            },
                            Variant {
                                name: "ValidationDataHashMismatch",
                                fields: [],
                                index: 21,
                                docs: [
                                    "The validation data hash does not match expected.",
                                ],
                            },
                            Variant {
                                name: "IncorrectDownwardMessageHandling",
                                fields: [],
                                index: 22,
                                docs: [
                                    "The downward message queue is not processed correctly.",
                                ],
                            },
                            Variant {
                                name: "InvalidUpwardMessages",
                                fields: [],
                                index: 23,
                                docs: [
                                    "At least one upward message sent does not pass the acceptance criteria.",
                                ],
                            },
                            Variant {
                                name: "HrmpWatermarkMishandling",
                                fields: [],
                                index: 24,
                                docs: [
                                    "The candidate didn't follow the rules of HRMP watermark advancement.",
                                ],
                            },
                            Variant {
                                name: "InvalidOutboundHrmp",
                                fields: [],
                                index: 25,
                                docs: [
                                    "The HRMP messages sent by the candidate is not valid.",
                                ],
                            },
                            Variant {
                                name: "InvalidValidationCodeHash",
                                fields: [],
                                index: 26,
                                docs: [
                                    "The validation code hash of the candidate is not valid.",
                                ],
                            },
                            Variant {
                                name: "ParaHeadMismatch",
                                fields: [],
                                index: 27,
                                docs: [
                                    "The `para_head` hash in the candidate descriptor doesn't match the hash of the actual para head in the",
                                    "commitments.",
                                ],
                            },
                            Variant {
                                name: "BitfieldReferencesFreedCore",
                                fields: [],
                                index: 28,
                                docs: [
                                    "A bitfield that references a freed core,",
                                    "either intentionally or as part of a concluded",
                                    "invalid dispute.",
                                ],
                            },
                        ],
                    },
                ),
                docs: [
                    "The `Error` enum of this pallet.",
                ],
            },
        },
        PortableType {
            id: 723,
            ty: Type {
                path: Path {
                    segments: [
                        "polkadot_primitives",
                        "v5",
                        "ScrapedOnChainVotes",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "H",
                        ty: Some(
                            UntrackedSymbol {
                                id: 12,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ),
                    },
                ],
                type_def: Composite(
                    TypeDefComposite {
                        fields: [
                            Field {
                                name: Some(
                                    "session",
                                ),
                                ty: UntrackedSymbol {
                                    id: 4,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "SessionIndex",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "backing_validators_per_candidate",
                                ),
                                ty: UntrackedSymbol {
                                    id: 724,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "Vec<(CandidateReceipt<H>, Vec<(ValidatorIndex, ValidityAttestation)>)\n>",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "disputes",
                                ),
                                ty: UntrackedSymbol {
                                    id: 339,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "MultiDisputeStatementSet",
                                ),
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 724,
            ty: Type {
                path: Path {
                    segments: [],
                },
                type_params: [],
                type_def: Sequence(
                    TypeDefSequence {
                        type_param: UntrackedSymbol {
                            id: 725,
                            marker: PhantomData<fn() -> core::any::TypeId>,
                        },
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 725,
            ty: Type {
                path: Path {
                    segments: [],
                },
                type_params: [],
                type_def: Tuple(
                    TypeDefTuple {
                        fields: [
                            UntrackedSymbol {
                                id: 459,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                            UntrackedSymbol {
                                id: 726,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 726,
            ty: Type {
                path: Path {
                    segments: [],
                },
                type_params: [],
                type_def: Sequence(
                    TypeDefSequence {
                        type_param: UntrackedSymbol {
                            id: 727,
                            marker: PhantomData<fn() -> core::any::TypeId>,
                        },
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 727,
            ty: Type {
                path: Path {
                    segments: [],
                },
                type_params: [],
                type_def: Tuple(
                    TypeDefTuple {
                        fields: [
                            UntrackedSymbol {
                                id: 320,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                            UntrackedSymbol {
                                id: 338,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 728,
            ty: Type {
                path: Path {
                    segments: [
                        "polkadot_runtime_parachains",
                        "paras_inherent",
                        "pallet",
                        "Error",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "T",
                        ty: None,
                    },
                ],
                type_def: Variant(
                    TypeDefVariant {
                        variants: [
                            Variant {
                                name: "TooManyInclusionInherents",
                                fields: [],
                                index: 0,
                                docs: [
                                    "Inclusion inherent called more than once per block.",
                                ],
                            },
                            Variant {
                                name: "InvalidParentHeader",
                                fields: [],
                                index: 1,
                                docs: [
                                    "The hash of the submitted parent header doesn't correspond to the saved block hash of",
                                    "the parent.",
                                ],
                            },
                            Variant {
                                name: "CandidateConcludedInvalid",
                                fields: [],
                                index: 2,
                                docs: [
                                    "Disputed candidate that was concluded invalid.",
                                ],
                            },
                            Variant {
                                name: "InherentOverweight",
                                fields: [],
                                index: 3,
                                docs: [
                                    "The data given to the inherent will result in an overweight block.",
                                ],
                            },
                            Variant {
                                name: "DisputeStatementsUnsortedOrDuplicates",
                                fields: [],
                                index: 4,
                                docs: [
                                    "The ordering of dispute statements was invalid.",
                                ],
                            },
                            Variant {
                                name: "DisputeInvalid",
                                fields: [],
                                index: 5,
                                docs: [
                                    "A dispute statement was invalid.",
                                ],
                            },
                        ],
                    },
                ),
                docs: [
                    "The `Error` enum of this pallet.",
                ],
            },
        },
        PortableType {
            id: 729,
            ty: Type {
                path: Path {
                    segments: [],
                },
                type_params: [],
                type_def: Sequence(
                    TypeDefSequence {
                        type_param: UntrackedSymbol {
                            id: 718,
                            marker: PhantomData<fn() -> core::any::TypeId>,
                        },
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 730,
            ty: Type {
                path: Path {
                    segments: [
                        "polkadot_runtime_parachains",
                        "scheduler",
                        "ParathreadClaimQueue",
                    ],
                },
                type_params: [],
                type_def: Composite(
                    TypeDefComposite {
                        fields: [
                            Field {
                                name: Some(
                                    "queue",
                                ),
                                ty: UntrackedSymbol {
                                    id: 731,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "Vec<QueuedParathread>",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "next_core_offset",
                                ),
                                ty: UntrackedSymbol {
                                    id: 4,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "u32",
                                ),
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 731,
            ty: Type {
                path: Path {
                    segments: [],
                },
                type_params: [],
                type_def: Sequence(
                    TypeDefSequence {
                        type_param: UntrackedSymbol {
                            id: 732,
                            marker: PhantomData<fn() -> core::any::TypeId>,
                        },
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 732,
            ty: Type {
                path: Path {
                    segments: [
                        "polkadot_runtime_parachains",
                        "scheduler",
                        "QueuedParathread",
                    ],
                },
                type_params: [],
                type_def: Composite(
                    TypeDefComposite {
                        fields: [
                            Field {
                                name: Some(
                                    "claim",
                                ),
                                ty: UntrackedSymbol {
                                    id: 733,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "ParathreadEntry",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "core_offset",
                                ),
                                ty: UntrackedSymbol {
                                    id: 4,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "u32",
                                ),
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 733,
            ty: Type {
                path: Path {
                    segments: [
                        "polkadot_primitives",
                        "v5",
                        "ParathreadEntry",
                    ],
                },
                type_params: [],
                type_def: Composite(
                    TypeDefComposite {
                        fields: [
                            Field {
                                name: Some(
                                    "claim",
                                ),
                                ty: UntrackedSymbol {
                                    id: 734,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "ParathreadClaim",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "retries",
                                ),
                                ty: UntrackedSymbol {
                                    id: 4,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "u32",
                                ),
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 734,
            ty: Type {
                path: Path {
                    segments: [
                        "polkadot_primitives",
                        "v5",
                        "ParathreadClaim",
                    ],
                },
                type_params: [],
                type_def: Composite(
                    TypeDefComposite {
                        fields: [
                            Field {
                                name: None,
                                ty: UntrackedSymbol {
                                    id: 158,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "Id",
                                ),
                                docs: [],
                            },
                            Field {
                                name: None,
                                ty: UntrackedSymbol {
                                    id: 326,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "CollatorId",
                                ),
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 735,
            ty: Type {
                path: Path {
                    segments: [],
                },
                type_params: [],
                type_def: Sequence(
                    TypeDefSequence {
                        type_param: UntrackedSymbol {
                            id: 736,
                            marker: PhantomData<fn() -> core::any::TypeId>,
                        },
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 736,
            ty: Type {
                path: Path {
                    segments: [
                        "Option",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "T",
                        ty: Some(
                            UntrackedSymbol {
                                id: 737,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ),
                    },
                ],
                type_def: Variant(
                    TypeDefVariant {
                        variants: [
                            Variant {
                                name: "None",
                                fields: [],
                                index: 0,
                                docs: [],
                            },
                            Variant {
                                name: "Some",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 737,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: None,
                                        docs: [],
                                    },
                                ],
                                index: 1,
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 737,
            ty: Type {
                path: Path {
                    segments: [
                        "polkadot_primitives",
                        "v5",
                        "CoreOccupied",
                    ],
                },
                type_params: [],
                type_def: Variant(
                    TypeDefVariant {
                        variants: [
                            Variant {
                                name: "Parathread",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 733,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "ParathreadEntry",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 0,
                                docs: [],
                            },
                            Variant {
                                name: "Parachain",
                                fields: [],
                                index: 1,
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 738,
            ty: Type {
                path: Path {
                    segments: [],
                },
                type_params: [],
                type_def: Sequence(
                    TypeDefSequence {
                        type_param: UntrackedSymbol {
                            id: 158,
                            marker: PhantomData<fn() -> core::any::TypeId>,
                        },
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 739,
            ty: Type {
                path: Path {
                    segments: [],
                },
                type_params: [],
                type_def: Sequence(
                    TypeDefSequence {
                        type_param: UntrackedSymbol {
                            id: 740,
                            marker: PhantomData<fn() -> core::any::TypeId>,
                        },
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 740,
            ty: Type {
                path: Path {
                    segments: [
                        "polkadot_runtime_parachains",
                        "scheduler",
                        "CoreAssignment",
                    ],
                },
                type_params: [],
                type_def: Composite(
                    TypeDefComposite {
                        fields: [
                            Field {
                                name: Some(
                                    "core",
                                ),
                                ty: UntrackedSymbol {
                                    id: 460,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "CoreIndex",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "para_id",
                                ),
                                ty: UntrackedSymbol {
                                    id: 158,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "ParaId",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "kind",
                                ),
                                ty: UntrackedSymbol {
                                    id: 741,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "AssignmentKind",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "group_idx",
                                ),
                                ty: UntrackedSymbol {
                                    id: 461,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "GroupIndex",
                                ),
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 741,
            ty: Type {
                path: Path {
                    segments: [
                        "polkadot_runtime_parachains",
                        "scheduler",
                        "AssignmentKind",
                    ],
                },
                type_params: [],
                type_def: Variant(
                    TypeDefVariant {
                        variants: [
                            Variant {
                                name: "Parachain",
                                fields: [],
                                index: 0,
                                docs: [],
                            },
                            Variant {
                                name: "Parathread",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 326,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "CollatorId",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 4,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "u32",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 1,
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 742,
            ty: Type {
                path: Path {
                    segments: [
                        "polkadot_runtime_parachains",
                        "paras",
                        "PvfCheckActiveVoteState",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "BlockNumber",
                        ty: Some(
                            UntrackedSymbol {
                                id: 4,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ),
                    },
                ],
                type_def: Composite(
                    TypeDefComposite {
                        fields: [
                            Field {
                                name: Some(
                                    "votes_accept",
                                ),
                                ty: UntrackedSymbol {
                                    id: 318,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "BitVec<u8, BitOrderLsb0>",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "votes_reject",
                                ),
                                ty: UntrackedSymbol {
                                    id: 318,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "BitVec<u8, BitOrderLsb0>",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "age",
                                ),
                                ty: UntrackedSymbol {
                                    id: 4,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "SessionIndex",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "created_at",
                                ),
                                ty: UntrackedSymbol {
                                    id: 4,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "BlockNumber",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "causes",
                                ),
                                ty: UntrackedSymbol {
                                    id: 743,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "Vec<PvfCheckCause<BlockNumber>>",
                                ),
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 743,
            ty: Type {
                path: Path {
                    segments: [],
                },
                type_params: [],
                type_def: Sequence(
                    TypeDefSequence {
                        type_param: UntrackedSymbol {
                            id: 744,
                            marker: PhantomData<fn() -> core::any::TypeId>,
                        },
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 744,
            ty: Type {
                path: Path {
                    segments: [
                        "polkadot_runtime_parachains",
                        "paras",
                        "PvfCheckCause",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "BlockNumber",
                        ty: Some(
                            UntrackedSymbol {
                                id: 4,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ),
                    },
                ],
                type_def: Variant(
                    TypeDefVariant {
                        variants: [
                            Variant {
                                name: "Onboarding",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 158,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "ParaId",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 0,
                                docs: [],
                            },
                            Variant {
                                name: "Upgrade",
                                fields: [
                                    Field {
                                        name: Some(
                                            "id",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 158,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "ParaId",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "relay_parent_number",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 4,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "BlockNumber",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 1,
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 745,
            ty: Type {
                path: Path {
                    segments: [],
                },
                type_params: [],
                type_def: Sequence(
                    TypeDefSequence {
                        type_param: UntrackedSymbol {
                            id: 328,
                            marker: PhantomData<fn() -> core::any::TypeId>,
                        },
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 746,
            ty: Type {
                path: Path {
                    segments: [
                        "polkadot_runtime_parachains",
                        "paras",
                        "ParaLifecycle",
                    ],
                },
                type_params: [],
                type_def: Variant(
                    TypeDefVariant {
                        variants: [
                            Variant {
                                name: "Onboarding",
                                fields: [],
                                index: 0,
                                docs: [],
                            },
                            Variant {
                                name: "Parathread",
                                fields: [],
                                index: 1,
                                docs: [],
                            },
                            Variant {
                                name: "Parachain",
                                fields: [],
                                index: 2,
                                docs: [],
                            },
                            Variant {
                                name: "UpgradingParathread",
                                fields: [],
                                index: 3,
                                docs: [],
                            },
                            Variant {
                                name: "DowngradingParachain",
                                fields: [],
                                index: 4,
                                docs: [],
                            },
                            Variant {
                                name: "OffboardingParathread",
                                fields: [],
                                index: 5,
                                docs: [],
                            },
                            Variant {
                                name: "OffboardingParachain",
                                fields: [],
                                index: 6,
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 747,
            ty: Type {
                path: Path {
                    segments: [],
                },
                type_params: [],
                type_def: Tuple(
                    TypeDefTuple {
                        fields: [
                            UntrackedSymbol {
                                id: 158,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                            UntrackedSymbol {
                                id: 4,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 748,
            ty: Type {
                path: Path {
                    segments: [
                        "polkadot_runtime_parachains",
                        "paras",
                        "ParaPastCodeMeta",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "N",
                        ty: Some(
                            UntrackedSymbol {
                                id: 4,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ),
                    },
                ],
                type_def: Composite(
                    TypeDefComposite {
                        fields: [
                            Field {
                                name: Some(
                                    "upgrade_times",
                                ),
                                ty: UntrackedSymbol {
                                    id: 749,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "Vec<ReplacementTimes<N>>",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "last_pruned",
                                ),
                                ty: UntrackedSymbol {
                                    id: 137,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "Option<N>",
                                ),
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 749,
            ty: Type {
                path: Path {
                    segments: [],
                },
                type_params: [],
                type_def: Sequence(
                    TypeDefSequence {
                        type_param: UntrackedSymbol {
                            id: 750,
                            marker: PhantomData<fn() -> core::any::TypeId>,
                        },
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 750,
            ty: Type {
                path: Path {
                    segments: [
                        "polkadot_runtime_parachains",
                        "paras",
                        "ReplacementTimes",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "N",
                        ty: Some(
                            UntrackedSymbol {
                                id: 4,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ),
                    },
                ],
                type_def: Composite(
                    TypeDefComposite {
                        fields: [
                            Field {
                                name: Some(
                                    "expected_at",
                                ),
                                ty: UntrackedSymbol {
                                    id: 4,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "N",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "activated_at",
                                ),
                                ty: UntrackedSymbol {
                                    id: 4,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "N",
                                ),
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 751,
            ty: Type {
                path: Path {
                    segments: [],
                },
                type_params: [],
                type_def: Sequence(
                    TypeDefSequence {
                        type_param: UntrackedSymbol {
                            id: 747,
                            marker: PhantomData<fn() -> core::any::TypeId>,
                        },
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 752,
            ty: Type {
                path: Path {
                    segments: [
                        "polkadot_primitives",
                        "v5",
                        "UpgradeGoAhead",
                    ],
                },
                type_params: [],
                type_def: Variant(
                    TypeDefVariant {
                        variants: [
                            Variant {
                                name: "Abort",
                                fields: [],
                                index: 0,
                                docs: [],
                            },
                            Variant {
                                name: "GoAhead",
                                fields: [],
                                index: 1,
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 753,
            ty: Type {
                path: Path {
                    segments: [
                        "polkadot_primitives",
                        "v5",
                        "UpgradeRestriction",
                    ],
                },
                type_params: [],
                type_def: Variant(
                    TypeDefVariant {
                        variants: [
                            Variant {
                                name: "Present",
                                fields: [],
                                index: 0,
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 754,
            ty: Type {
                path: Path {
                    segments: [
                        "polkadot_runtime_parachains",
                        "paras",
                        "ParaGenesisArgs",
                    ],
                },
                type_params: [],
                type_def: Composite(
                    TypeDefComposite {
                        fields: [
                            Field {
                                name: Some(
                                    "genesis_head",
                                ),
                                ty: UntrackedSymbol {
                                    id: 336,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "HeadData",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "validation_code",
                                ),
                                ty: UntrackedSymbol {
                                    id: 335,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "ValidationCode",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "para_kind",
                                ),
                                ty: UntrackedSymbol {
                                    id: 44,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "ParaKind",
                                ),
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 755,
            ty: Type {
                path: Path {
                    segments: [
                        "polkadot_runtime_parachains",
                        "paras",
                        "pallet",
                        "Error",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "T",
                        ty: None,
                    },
                ],
                type_def: Variant(
                    TypeDefVariant {
                        variants: [
                            Variant {
                                name: "NotRegistered",
                                fields: [],
                                index: 0,
                                docs: [
                                    "Para is not registered in our system.",
                                ],
                            },
                            Variant {
                                name: "CannotOnboard",
                                fields: [],
                                index: 1,
                                docs: [
                                    "Para cannot be onboarded because it is already tracked by our system.",
                                ],
                            },
                            Variant {
                                name: "CannotOffboard",
                                fields: [],
                                index: 2,
                                docs: [
                                    "Para cannot be offboarded at this time.",
                                ],
                            },
                            Variant {
                                name: "CannotUpgrade",
                                fields: [],
                                index: 3,
                                docs: [
                                    "Para cannot be upgraded to a parachain.",
                                ],
                            },
                            Variant {
                                name: "CannotDowngrade",
                                fields: [],
                                index: 4,
                                docs: [
                                    "Para cannot be downgraded to a parathread.",
                                ],
                            },
                            Variant {
                                name: "PvfCheckStatementStale",
                                fields: [],
                                index: 5,
                                docs: [
                                    "The statement for PVF pre-checking is stale.",
                                ],
                            },
                            Variant {
                                name: "PvfCheckStatementFuture",
                                fields: [],
                                index: 6,
                                docs: [
                                    "The statement for PVF pre-checking is for a future session.",
                                ],
                            },
                            Variant {
                                name: "PvfCheckValidatorIndexOutOfBounds",
                                fields: [],
                                index: 7,
                                docs: [
                                    "Claimed validator index is out of bounds.",
                                ],
                            },
                            Variant {
                                name: "PvfCheckInvalidSignature",
                                fields: [],
                                index: 8,
                                docs: [
                                    "The signature for the PVF pre-checking is invalid.",
                                ],
                            },
                            Variant {
                                name: "PvfCheckDoubleVote",
                                fields: [],
                                index: 9,
                                docs: [
                                    "The given validator already has cast a vote.",
                                ],
                            },
                            Variant {
                                name: "PvfCheckSubjectInvalid",
                                fields: [],
                                index: 10,
                                docs: [
                                    "The given PVF does not exist at the moment of process a vote.",
                                ],
                            },
                            Variant {
                                name: "CannotUpgradeCode",
                                fields: [],
                                index: 11,
                                docs: [
                                    "Parachain cannot currently schedule a code upgrade.",
                                ],
                            },
                        ],
                    },
                ),
                docs: [
                    "The `Error` enum of this pallet.",
                ],
            },
        },
        PortableType {
            id: 756,
            ty: Type {
                path: Path {
                    segments: [],
                },
                type_params: [],
                type_def: Sequence(
                    TypeDefSequence {
                        type_param: UntrackedSymbol {
                            id: 757,
                            marker: PhantomData<fn() -> core::any::TypeId>,
                        },
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 757,
            ty: Type {
                path: Path {
                    segments: [
                        "polkadot_runtime_parachains",
                        "initializer",
                        "BufferedSessionChange",
                    ],
                },
                type_params: [],
                type_def: Composite(
                    TypeDefComposite {
                        fields: [
                            Field {
                                name: Some(
                                    "validators",
                                ),
                                ty: UntrackedSymbol {
                                    id: 719,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "Vec<ValidatorId>",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "queued",
                                ),
                                ty: UntrackedSymbol {
                                    id: 719,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "Vec<ValidatorId>",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "session_index",
                                ),
                                ty: UntrackedSymbol {
                                    id: 4,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "SessionIndex",
                                ),
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 758,
            ty: Type {
                path: Path {
                    segments: [],
                },
                type_params: [],
                type_def: Sequence(
                    TypeDefSequence {
                        type_param: UntrackedSymbol {
                            id: 759,
                            marker: PhantomData<fn() -> core::any::TypeId>,
                        },
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 759,
            ty: Type {
                path: Path {
                    segments: [
                        "polkadot_core_primitives",
                        "InboundDownwardMessage",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "BlockNumber",
                        ty: Some(
                            UntrackedSymbol {
                                id: 4,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ),
                    },
                ],
                type_def: Composite(
                    TypeDefComposite {
                        fields: [
                            Field {
                                name: Some(
                                    "sent_at",
                                ),
                                ty: UntrackedSymbol {
                                    id: 4,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "BlockNumber",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "msg",
                                ),
                                ty: UntrackedSymbol {
                                    id: 13,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "DownwardMessage",
                                ),
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 760,
            ty: Type {
                path: Path {
                    segments: [
                        "polkadot_runtime_parachains",
                        "hrmp",
                        "HrmpOpenChannelRequest",
                    ],
                },
                type_params: [],
                type_def: Composite(
                    TypeDefComposite {
                        fields: [
                            Field {
                                name: Some(
                                    "confirmed",
                                ),
                                ty: UntrackedSymbol {
                                    id: 44,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "bool",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "_age",
                                ),
                                ty: UntrackedSymbol {
                                    id: 4,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "SessionIndex",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "sender_deposit",
                                ),
                                ty: UntrackedSymbol {
                                    id: 6,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "Balance",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "max_message_size",
                                ),
                                ty: UntrackedSymbol {
                                    id: 4,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "u32",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "max_capacity",
                                ),
                                ty: UntrackedSymbol {
                                    id: 4,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "u32",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "max_total_size",
                                ),
                                ty: UntrackedSymbol {
                                    id: 4,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "u32",
                                ),
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 761,
            ty: Type {
                path: Path {
                    segments: [],
                },
                type_params: [],
                type_def: Sequence(
                    TypeDefSequence {
                        type_param: UntrackedSymbol {
                            id: 351,
                            marker: PhantomData<fn() -> core::any::TypeId>,
                        },
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 762,
            ty: Type {
                path: Path {
                    segments: [
                        "polkadot_runtime_parachains",
                        "hrmp",
                        "HrmpChannel",
                    ],
                },
                type_params: [],
                type_def: Composite(
                    TypeDefComposite {
                        fields: [
                            Field {
                                name: Some(
                                    "max_capacity",
                                ),
                                ty: UntrackedSymbol {
                                    id: 4,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "u32",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "max_total_size",
                                ),
                                ty: UntrackedSymbol {
                                    id: 4,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "u32",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "max_message_size",
                                ),
                                ty: UntrackedSymbol {
                                    id: 4,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "u32",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "msg_count",
                                ),
                                ty: UntrackedSymbol {
                                    id: 4,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "u32",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "total_size",
                                ),
                                ty: UntrackedSymbol {
                                    id: 4,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "u32",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "mqc_head",
                                ),
                                ty: UntrackedSymbol {
                                    id: 138,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "Option<Hash>",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "sender_deposit",
                                ),
                                ty: UntrackedSymbol {
                                    id: 6,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "Balance",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "recipient_deposit",
                                ),
                                ty: UntrackedSymbol {
                                    id: 6,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "Balance",
                                ),
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 763,
            ty: Type {
                path: Path {
                    segments: [],
                },
                type_params: [],
                type_def: Sequence(
                    TypeDefSequence {
                        type_param: UntrackedSymbol {
                            id: 764,
                            marker: PhantomData<fn() -> core::any::TypeId>,
                        },
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 764,
            ty: Type {
                path: Path {
                    segments: [
                        "polkadot_core_primitives",
                        "InboundHrmpMessage",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "BlockNumber",
                        ty: Some(
                            UntrackedSymbol {
                                id: 4,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ),
                    },
                ],
                type_def: Composite(
                    TypeDefComposite {
                        fields: [
                            Field {
                                name: Some(
                                    "sent_at",
                                ),
                                ty: UntrackedSymbol {
                                    id: 4,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "BlockNumber",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "data",
                                ),
                                ty: UntrackedSymbol {
                                    id: 13,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "sp_std::vec::Vec<u8>",
                                ),
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 765,
            ty: Type {
                path: Path {
                    segments: [],
                },
                type_params: [],
                type_def: Sequence(
                    TypeDefSequence {
                        type_param: UntrackedSymbol {
                            id: 766,
                            marker: PhantomData<fn() -> core::any::TypeId>,
                        },
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 766,
            ty: Type {
                path: Path {
                    segments: [],
                },
                type_params: [],
                type_def: Tuple(
                    TypeDefTuple {
                        fields: [
                            UntrackedSymbol {
                                id: 4,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                            UntrackedSymbol {
                                id: 738,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 767,
            ty: Type {
                path: Path {
                    segments: [
                        "polkadot_runtime_parachains",
                        "hrmp",
                        "pallet",
                        "Error",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "T",
                        ty: None,
                    },
                ],
                type_def: Variant(
                    TypeDefVariant {
                        variants: [
                            Variant {
                                name: "OpenHrmpChannelToSelf",
                                fields: [],
                                index: 0,
                                docs: [
                                    "The sender tried to open a channel to themselves.",
                                ],
                            },
                            Variant {
                                name: "OpenHrmpChannelInvalidRecipient",
                                fields: [],
                                index: 1,
                                docs: [
                                    "The recipient is not a valid para.",
                                ],
                            },
                            Variant {
                                name: "OpenHrmpChannelZeroCapacity",
                                fields: [],
                                index: 2,
                                docs: [
                                    "The requested capacity is zero.",
                                ],
                            },
                            Variant {
                                name: "OpenHrmpChannelCapacityExceedsLimit",
                                fields: [],
                                index: 3,
                                docs: [
                                    "The requested capacity exceeds the global limit.",
                                ],
                            },
                            Variant {
                                name: "OpenHrmpChannelZeroMessageSize",
                                fields: [],
                                index: 4,
                                docs: [
                                    "The requested maximum message size is 0.",
                                ],
                            },
                            Variant {
                                name: "OpenHrmpChannelMessageSizeExceedsLimit",
                                fields: [],
                                index: 5,
                                docs: [
                                    "The open request requested the message size that exceeds the global limit.",
                                ],
                            },
                            Variant {
                                name: "OpenHrmpChannelAlreadyExists",
                                fields: [],
                                index: 6,
                                docs: [
                                    "The channel already exists",
                                ],
                            },
                            Variant {
                                name: "OpenHrmpChannelAlreadyRequested",
                                fields: [],
                                index: 7,
                                docs: [
                                    "There is already a request to open the same channel.",
                                ],
                            },
                            Variant {
                                name: "OpenHrmpChannelLimitExceeded",
                                fields: [],
                                index: 8,
                                docs: [
                                    "The sender already has the maximum number of allowed outbound channels.",
                                ],
                            },
                            Variant {
                                name: "AcceptHrmpChannelDoesntExist",
                                fields: [],
                                index: 9,
                                docs: [
                                    "The channel from the sender to the origin doesn't exist.",
                                ],
                            },
                            Variant {
                                name: "AcceptHrmpChannelAlreadyConfirmed",
                                fields: [],
                                index: 10,
                                docs: [
                                    "The channel is already confirmed.",
                                ],
                            },
                            Variant {
                                name: "AcceptHrmpChannelLimitExceeded",
                                fields: [],
                                index: 11,
                                docs: [
                                    "The recipient already has the maximum number of allowed inbound channels.",
                                ],
                            },
                            Variant {
                                name: "CloseHrmpChannelUnauthorized",
                                fields: [],
                                index: 12,
                                docs: [
                                    "The origin tries to close a channel where it is neither the sender nor the recipient.",
                                ],
                            },
                            Variant {
                                name: "CloseHrmpChannelDoesntExist",
                                fields: [],
                                index: 13,
                                docs: [
                                    "The channel to be closed doesn't exist.",
                                ],
                            },
                            Variant {
                                name: "CloseHrmpChannelAlreadyUnderway",
                                fields: [],
                                index: 14,
                                docs: [
                                    "The channel close request is already requested.",
                                ],
                            },
                            Variant {
                                name: "CancelHrmpOpenChannelUnauthorized",
                                fields: [],
                                index: 15,
                                docs: [
                                    "Canceling is requested by neither the sender nor recipient of the open channel request.",
                                ],
                            },
                            Variant {
                                name: "OpenHrmpChannelDoesntExist",
                                fields: [],
                                index: 16,
                                docs: [
                                    "The open request doesn't exist.",
                                ],
                            },
                            Variant {
                                name: "OpenHrmpChannelAlreadyConfirmed",
                                fields: [],
                                index: 17,
                                docs: [
                                    "Cannot cancel an HRMP open channel request because it is already confirmed.",
                                ],
                            },
                            Variant {
                                name: "WrongWitness",
                                fields: [],
                                index: 18,
                                docs: [
                                    "The provided witness data is wrong.",
                                ],
                            },
                        ],
                    },
                ),
                docs: [
                    "The `Error` enum of this pallet.",
                ],
            },
        },
        PortableType {
            id: 768,
            ty: Type {
                path: Path {
                    segments: [],
                },
                type_params: [],
                type_def: Sequence(
                    TypeDefSequence {
                        type_param: UntrackedSymbol {
                            id: 117,
                            marker: PhantomData<fn() -> core::any::TypeId>,
                        },
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 769,
            ty: Type {
                path: Path {
                    segments: [
                        "polkadot_primitives",
                        "v5",
                        "SessionInfo",
                    ],
                },
                type_params: [],
                type_def: Composite(
                    TypeDefComposite {
                        fields: [
                            Field {
                                name: Some(
                                    "active_validator_indices",
                                ),
                                ty: UntrackedSymbol {
                                    id: 718,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "Vec<ValidatorIndex>",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "random_seed",
                                ),
                                ty: UntrackedSymbol {
                                    id: 1,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "[u8; 32]",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "dispute_period",
                                ),
                                ty: UntrackedSymbol {
                                    id: 4,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "SessionIndex",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "validators",
                                ),
                                ty: UntrackedSymbol {
                                    id: 770,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "IndexedVec<ValidatorIndex, ValidatorId>",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "discovery_keys",
                                ),
                                ty: UntrackedSymbol {
                                    id: 771,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "Vec<AuthorityDiscoveryId>",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "assignment_keys",
                                ),
                                ty: UntrackedSymbol {
                                    id: 768,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "Vec<AssignmentId>",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "validator_groups",
                                ),
                                ty: UntrackedSymbol {
                                    id: 772,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "IndexedVec<GroupIndex, Vec<ValidatorIndex>>",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "n_cores",
                                ),
                                ty: UntrackedSymbol {
                                    id: 4,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "u32",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "zeroth_delay_tranche_width",
                                ),
                                ty: UntrackedSymbol {
                                    id: 4,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "u32",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "relay_vrf_modulo_samples",
                                ),
                                ty: UntrackedSymbol {
                                    id: 4,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "u32",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "n_delay_tranches",
                                ),
                                ty: UntrackedSymbol {
                                    id: 4,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "u32",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "no_show_slots",
                                ),
                                ty: UntrackedSymbol {
                                    id: 4,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "u32",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "needed_approvals",
                                ),
                                ty: UntrackedSymbol {
                                    id: 4,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "u32",
                                ),
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 770,
            ty: Type {
                path: Path {
                    segments: [
                        "polkadot_primitives",
                        "v5",
                        "IndexedVec",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "K",
                        ty: Some(
                            UntrackedSymbol {
                                id: 320,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ),
                    },
                    TypeParameter {
                        name: "V",
                        ty: Some(
                            UntrackedSymbol {
                                id: 116,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ),
                    },
                ],
                type_def: Composite(
                    TypeDefComposite {
                        fields: [
                            Field {
                                name: None,
                                ty: UntrackedSymbol {
                                    id: 719,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "Vec<V>",
                                ),
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 771,
            ty: Type {
                path: Path {
                    segments: [],
                },
                type_params: [],
                type_def: Sequence(
                    TypeDefSequence {
                        type_param: UntrackedSymbol {
                            id: 118,
                            marker: PhantomData<fn() -> core::any::TypeId>,
                        },
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 772,
            ty: Type {
                path: Path {
                    segments: [
                        "polkadot_primitives",
                        "v5",
                        "IndexedVec",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "K",
                        ty: Some(
                            UntrackedSymbol {
                                id: 461,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ),
                    },
                    TypeParameter {
                        name: "V",
                        ty: Some(
                            UntrackedSymbol {
                                id: 718,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ),
                    },
                ],
                type_def: Composite(
                    TypeDefComposite {
                        fields: [
                            Field {
                                name: None,
                                ty: UntrackedSymbol {
                                    id: 729,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "Vec<V>",
                                ),
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 773,
            ty: Type {
                path: Path {
                    segments: [],
                },
                type_params: [],
                type_def: Tuple(
                    TypeDefTuple {
                        fields: [
                            UntrackedSymbol {
                                id: 4,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                            UntrackedSymbol {
                                id: 341,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 774,
            ty: Type {
                path: Path {
                    segments: [
                        "polkadot_primitives",
                        "v5",
                        "DisputeState",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "N",
                        ty: Some(
                            UntrackedSymbol {
                                id: 4,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ),
                    },
                ],
                type_def: Composite(
                    TypeDefComposite {
                        fields: [
                            Field {
                                name: Some(
                                    "validators_for",
                                ),
                                ty: UntrackedSymbol {
                                    id: 318,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "BitVec<u8, bitvec::order::Lsb0>",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "validators_against",
                                ),
                                ty: UntrackedSymbol {
                                    id: 318,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "BitVec<u8, bitvec::order::Lsb0>",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "start",
                                ),
                                ty: UntrackedSymbol {
                                    id: 4,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "N",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "concluded_at",
                                ),
                                ty: UntrackedSymbol {
                                    id: 137,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "Option<N>",
                                ),
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 775,
            ty: Type {
                path: Path {
                    segments: [
                        "BTreeSet",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "T",
                        ty: Some(
                            UntrackedSymbol {
                                id: 320,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ),
                    },
                ],
                type_def: Composite(
                    TypeDefComposite {
                        fields: [
                            Field {
                                name: None,
                                ty: UntrackedSymbol {
                                    id: 718,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: None,
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 776,
            ty: Type {
                path: Path {
                    segments: [
                        "polkadot_runtime_parachains",
                        "disputes",
                        "pallet",
                        "Error",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "T",
                        ty: None,
                    },
                ],
                type_def: Variant(
                    TypeDefVariant {
                        variants: [
                            Variant {
                                name: "DuplicateDisputeStatementSets",
                                fields: [],
                                index: 0,
                                docs: [
                                    "Duplicate dispute statement sets provided.",
                                ],
                            },
                            Variant {
                                name: "AncientDisputeStatement",
                                fields: [],
                                index: 1,
                                docs: [
                                    "Ancient dispute statement provided.",
                                ],
                            },
                            Variant {
                                name: "ValidatorIndexOutOfBounds",
                                fields: [],
                                index: 2,
                                docs: [
                                    "Validator index on statement is out of bounds for session.",
                                ],
                            },
                            Variant {
                                name: "InvalidSignature",
                                fields: [],
                                index: 3,
                                docs: [
                                    "Invalid signature on statement.",
                                ],
                            },
                            Variant {
                                name: "DuplicateStatement",
                                fields: [],
                                index: 4,
                                docs: [
                                    "Validator vote submitted more than once to dispute.",
                                ],
                            },
                            Variant {
                                name: "SingleSidedDispute",
                                fields: [],
                                index: 5,
                                docs: [
                                    "A dispute where there are only votes on one side.",
                                ],
                            },
                            Variant {
                                name: "MaliciousBacker",
                                fields: [],
                                index: 6,
                                docs: [
                                    "A dispute vote from a malicious backer.",
                                ],
                            },
                            Variant {
                                name: "MissingBackingVotes",
                                fields: [],
                                index: 7,
                                docs: [
                                    "No backing votes were provides along dispute statements.",
                                ],
                            },
                            Variant {
                                name: "UnconfirmedDispute",
                                fields: [],
                                index: 8,
                                docs: [
                                    "Unconfirmed dispute statement sets provided.",
                                ],
                            },
                        ],
                    },
                ),
                docs: [
                    "The `Error` enum of this pallet.",
                ],
            },
        },
        PortableType {
            id: 777,
            ty: Type {
                path: Path {
                    segments: [
                        "polkadot_primitives",
                        "v5",
                        "slashing",
                        "PendingSlashes",
                    ],
                },
                type_params: [],
                type_def: Composite(
                    TypeDefComposite {
                        fields: [
                            Field {
                                name: Some(
                                    "keys",
                                ),
                                ty: UntrackedSymbol {
                                    id: 778,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "BTreeMap<ValidatorIndex, ValidatorId>",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "kind",
                                ),
                                ty: UntrackedSymbol {
                                    id: 356,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "SlashingOffenceKind",
                                ),
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 778,
            ty: Type {
                path: Path {
                    segments: [
                        "BTreeMap",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "K",
                        ty: Some(
                            UntrackedSymbol {
                                id: 320,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ),
                    },
                    TypeParameter {
                        name: "V",
                        ty: Some(
                            UntrackedSymbol {
                                id: 116,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ),
                    },
                ],
                type_def: Composite(
                    TypeDefComposite {
                        fields: [
                            Field {
                                name: None,
                                ty: UntrackedSymbol {
                                    id: 779,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: None,
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 779,
            ty: Type {
                path: Path {
                    segments: [],
                },
                type_params: [],
                type_def: Sequence(
                    TypeDefSequence {
                        type_param: UntrackedSymbol {
                            id: 780,
                            marker: PhantomData<fn() -> core::any::TypeId>,
                        },
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 780,
            ty: Type {
                path: Path {
                    segments: [],
                },
                type_params: [],
                type_def: Tuple(
                    TypeDefTuple {
                        fields: [
                            UntrackedSymbol {
                                id: 320,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                            UntrackedSymbol {
                                id: 116,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 781,
            ty: Type {
                path: Path {
                    segments: [
                        "polkadot_runtime_parachains",
                        "disputes",
                        "slashing",
                        "pallet",
                        "Error",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "T",
                        ty: None,
                    },
                ],
                type_def: Variant(
                    TypeDefVariant {
                        variants: [
                            Variant {
                                name: "InvalidKeyOwnershipProof",
                                fields: [],
                                index: 0,
                                docs: [
                                    "The key ownership proof is invalid.",
                                ],
                            },
                            Variant {
                                name: "InvalidSessionIndex",
                                fields: [],
                                index: 1,
                                docs: [
                                    "The session index is too old or invalid.",
                                ],
                            },
                            Variant {
                                name: "InvalidCandidateHash",
                                fields: [],
                                index: 2,
                                docs: [
                                    "The candidate hash is invalid.",
                                ],
                            },
                            Variant {
                                name: "InvalidValidatorIndex",
                                fields: [],
                                index: 3,
                                docs: [
                                    "There is no pending slash for the given validator index and time",
                                    "slot.",
                                ],
                            },
                            Variant {
                                name: "ValidatorIndexIdMismatch",
                                fields: [],
                                index: 4,
                                docs: [
                                    "The validator index does not match the validator id.",
                                ],
                            },
                            Variant {
                                name: "DuplicateSlashingReport",
                                fields: [],
                                index: 5,
                                docs: [
                                    "The given slashing report is valid but already previously reported.",
                                ],
                            },
                        ],
                    },
                ),
                docs: [
                    "The `Error` enum of this pallet.",
                ],
            },
        },
        PortableType {
            id: 782,
            ty: Type {
                path: Path {
                    segments: [
                        "polkadot_runtime_common",
                        "paras_registrar",
                        "ParaInfo",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "Account",
                        ty: Some(
                            UntrackedSymbol {
                                id: 0,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ),
                    },
                    TypeParameter {
                        name: "Balance",
                        ty: Some(
                            UntrackedSymbol {
                                id: 6,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ),
                    },
                ],
                type_def: Composite(
                    TypeDefComposite {
                        fields: [
                            Field {
                                name: Some(
                                    "manager",
                                ),
                                ty: UntrackedSymbol {
                                    id: 0,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "Account",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "deposit",
                                ),
                                ty: UntrackedSymbol {
                                    id: 6,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "Balance",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "locked",
                                ),
                                ty: UntrackedSymbol {
                                    id: 44,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "bool",
                                ),
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 783,
            ty: Type {
                path: Path {
                    segments: [
                        "polkadot_runtime_common",
                        "paras_registrar",
                        "pallet",
                        "Error",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "T",
                        ty: None,
                    },
                ],
                type_def: Variant(
                    TypeDefVariant {
                        variants: [
                            Variant {
                                name: "NotRegistered",
                                fields: [],
                                index: 0,
                                docs: [
                                    "The ID is not registered.",
                                ],
                            },
                            Variant {
                                name: "AlreadyRegistered",
                                fields: [],
                                index: 1,
                                docs: [
                                    "The ID is already registered.",
                                ],
                            },
                            Variant {
                                name: "NotOwner",
                                fields: [],
                                index: 2,
                                docs: [
                                    "The caller is not the owner of this Id.",
                                ],
                            },
                            Variant {
                                name: "CodeTooLarge",
                                fields: [],
                                index: 3,
                                docs: [
                                    "Invalid para code size.",
                                ],
                            },
                            Variant {
                                name: "HeadDataTooLarge",
                                fields: [],
                                index: 4,
                                docs: [
                                    "Invalid para head data size.",
                                ],
                            },
                            Variant {
                                name: "NotParachain",
                                fields: [],
                                index: 5,
                                docs: [
                                    "Para is not a Parachain.",
                                ],
                            },
                            Variant {
                                name: "NotParathread",
                                fields: [],
                                index: 6,
                                docs: [
                                    "Para is not a Parathread.",
                                ],
                            },
                            Variant {
                                name: "CannotDeregister",
                                fields: [],
                                index: 7,
                                docs: [
                                    "Cannot deregister para",
                                ],
                            },
                            Variant {
                                name: "CannotDowngrade",
                                fields: [],
                                index: 8,
                                docs: [
                                    "Cannot schedule downgrade of parachain to parathread",
                                ],
                            },
                            Variant {
                                name: "CannotUpgrade",
                                fields: [],
                                index: 9,
                                docs: [
                                    "Cannot schedule upgrade of parathread to parachain",
                                ],
                            },
                            Variant {
                                name: "ParaLocked",
                                fields: [],
                                index: 10,
                                docs: [
                                    "Para is locked from manipulation by the manager. Must use parachain or relay chain governance.",
                                ],
                            },
                            Variant {
                                name: "NotReserved",
                                fields: [],
                                index: 11,
                                docs: [
                                    "The ID given for registration has not been reserved.",
                                ],
                            },
                            Variant {
                                name: "EmptyCode",
                                fields: [],
                                index: 12,
                                docs: [
                                    "Registering parachain with empty code is not allowed.",
                                ],
                            },
                            Variant {
                                name: "CannotSwap",
                                fields: [],
                                index: 13,
                                docs: [
                                    "Cannot perform a parachain slot / lifecycle swap. Check that the state of both paras are",
                                    "correct for the swap to work.",
                                ],
                            },
                        ],
                    },
                ),
                docs: [
                    "The `Error` enum of this pallet.",
                ],
            },
        },
        PortableType {
            id: 784,
            ty: Type {
                path: Path {
                    segments: [],
                },
                type_params: [],
                type_def: Sequence(
                    TypeDefSequence {
                        type_param: UntrackedSymbol {
                            id: 497,
                            marker: PhantomData<fn() -> core::any::TypeId>,
                        },
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 785,
            ty: Type {
                path: Path {
                    segments: [
                        "polkadot_runtime_common",
                        "slots",
                        "pallet",
                        "Error",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "T",
                        ty: None,
                    },
                ],
                type_def: Variant(
                    TypeDefVariant {
                        variants: [
                            Variant {
                                name: "ParaNotOnboarding",
                                fields: [],
                                index: 0,
                                docs: [
                                    "The parachain ID is not onboarding.",
                                ],
                            },
                            Variant {
                                name: "LeaseError",
                                fields: [],
                                index: 1,
                                docs: [
                                    "There was an error with the lease.",
                                ],
                            },
                        ],
                    },
                ),
                docs: [
                    "The `Error` enum of this pallet.",
                ],
            },
        },
        PortableType {
            id: 786,
            ty: Type {
                path: Path {
                    segments: [],
                },
                type_params: [],
                type_def: Tuple(
                    TypeDefTuple {
                        fields: [
                            UntrackedSymbol {
                                id: 0,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                            UntrackedSymbol {
                                id: 158,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 787,
            ty: Type {
                path: Path {
                    segments: [],
                },
                type_params: [],
                type_def: Array(
                    TypeDefArray {
                        len: 36,
                        type_param: UntrackedSymbol {
                            id: 788,
                            marker: PhantomData<fn() -> core::any::TypeId>,
                        },
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 788,
            ty: Type {
                path: Path {
                    segments: [
                        "Option",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "T",
                        ty: Some(
                            UntrackedSymbol {
                                id: 789,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ),
                    },
                ],
                type_def: Variant(
                    TypeDefVariant {
                        variants: [
                            Variant {
                                name: "None",
                                fields: [],
                                index: 0,
                                docs: [],
                            },
                            Variant {
                                name: "Some",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 789,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: None,
                                        docs: [],
                                    },
                                ],
                                index: 1,
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 789,
            ty: Type {
                path: Path {
                    segments: [],
                },
                type_params: [],
                type_def: Tuple(
                    TypeDefTuple {
                        fields: [
                            UntrackedSymbol {
                                id: 0,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                            UntrackedSymbol {
                                id: 158,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                            UntrackedSymbol {
                                id: 6,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 790,
            ty: Type {
                path: Path {
                    segments: [
                        "polkadot_runtime_common",
                        "auctions",
                        "pallet",
                        "Error",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "T",
                        ty: None,
                    },
                ],
                type_def: Variant(
                    TypeDefVariant {
                        variants: [
                            Variant {
                                name: "AuctionInProgress",
                                fields: [],
                                index: 0,
                                docs: [
                                    "This auction is already in progress.",
                                ],
                            },
                            Variant {
                                name: "LeasePeriodInPast",
                                fields: [],
                                index: 1,
                                docs: [
                                    "The lease period is in the past.",
                                ],
                            },
                            Variant {
                                name: "ParaNotRegistered",
                                fields: [],
                                index: 2,
                                docs: [
                                    "Para is not registered",
                                ],
                            },
                            Variant {
                                name: "NotCurrentAuction",
                                fields: [],
                                index: 3,
                                docs: [
                                    "Not a current auction.",
                                ],
                            },
                            Variant {
                                name: "NotAuction",
                                fields: [],
                                index: 4,
                                docs: [
                                    "Not an auction.",
                                ],
                            },
                            Variant {
                                name: "AuctionEnded",
                                fields: [],
                                index: 5,
                                docs: [
                                    "Auction has already ended.",
                                ],
                            },
                            Variant {
                                name: "AlreadyLeasedOut",
                                fields: [],
                                index: 6,
                                docs: [
                                    "The para is already leased out for part of this range.",
                                ],
                            },
                        ],
                    },
                ),
                docs: [
                    "The `Error` enum of this pallet.",
                ],
            },
        },
        PortableType {
            id: 791,
            ty: Type {
                path: Path {
                    segments: [
                        "polkadot_runtime_common",
                        "crowdloan",
                        "FundInfo",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "AccountId",
                        ty: Some(
                            UntrackedSymbol {
                                id: 0,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ),
                    },
                    TypeParameter {
                        name: "Balance",
                        ty: Some(
                            UntrackedSymbol {
                                id: 6,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ),
                    },
                    TypeParameter {
                        name: "BlockNumber",
                        ty: Some(
                            UntrackedSymbol {
                                id: 4,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ),
                    },
                    TypeParameter {
                        name: "LeasePeriod",
                        ty: Some(
                            UntrackedSymbol {
                                id: 4,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ),
                    },
                ],
                type_def: Composite(
                    TypeDefComposite {
                        fields: [
                            Field {
                                name: Some(
                                    "depositor",
                                ),
                                ty: UntrackedSymbol {
                                    id: 0,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "AccountId",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "verifier",
                                ),
                                ty: UntrackedSymbol {
                                    id: 362,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "Option<MultiSigner>",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "deposit",
                                ),
                                ty: UntrackedSymbol {
                                    id: 6,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "Balance",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "raised",
                                ),
                                ty: UntrackedSymbol {
                                    id: 6,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "Balance",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "end",
                                ),
                                ty: UntrackedSymbol {
                                    id: 4,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "BlockNumber",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "cap",
                                ),
                                ty: UntrackedSymbol {
                                    id: 6,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "Balance",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "last_contribution",
                                ),
                                ty: UntrackedSymbol {
                                    id: 792,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "LastContribution<BlockNumber>",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "first_period",
                                ),
                                ty: UntrackedSymbol {
                                    id: 4,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "LeasePeriod",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "last_period",
                                ),
                                ty: UntrackedSymbol {
                                    id: 4,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "LeasePeriod",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "fund_index",
                                ),
                                ty: UntrackedSymbol {
                                    id: 4,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "FundIndex",
                                ),
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 792,
            ty: Type {
                path: Path {
                    segments: [
                        "polkadot_runtime_common",
                        "crowdloan",
                        "LastContribution",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "BlockNumber",
                        ty: Some(
                            UntrackedSymbol {
                                id: 4,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ),
                    },
                ],
                type_def: Variant(
                    TypeDefVariant {
                        variants: [
                            Variant {
                                name: "Never",
                                fields: [],
                                index: 0,
                                docs: [],
                            },
                            Variant {
                                name: "PreEnding",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 4,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "u32",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 1,
                                docs: [],
                            },
                            Variant {
                                name: "Ending",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 4,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "BlockNumber",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 2,
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 793,
            ty: Type {
                path: Path {
                    segments: [
                        "polkadot_runtime_common",
                        "crowdloan",
                        "pallet",
                        "Error",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "T",
                        ty: None,
                    },
                ],
                type_def: Variant(
                    TypeDefVariant {
                        variants: [
                            Variant {
                                name: "FirstPeriodInPast",
                                fields: [],
                                index: 0,
                                docs: [
                                    "The current lease period is more than the first lease period.",
                                ],
                            },
                            Variant {
                                name: "FirstPeriodTooFarInFuture",
                                fields: [],
                                index: 1,
                                docs: [
                                    "The first lease period needs to at least be less than 3 `max_value`.",
                                ],
                            },
                            Variant {
                                name: "LastPeriodBeforeFirstPeriod",
                                fields: [],
                                index: 2,
                                docs: [
                                    "Last lease period must be greater than first lease period.",
                                ],
                            },
                            Variant {
                                name: "LastPeriodTooFarInFuture",
                                fields: [],
                                index: 3,
                                docs: [
                                    "The last lease period cannot be more than 3 periods after the first period.",
                                ],
                            },
                            Variant {
                                name: "CannotEndInPast",
                                fields: [],
                                index: 4,
                                docs: [
                                    "The campaign ends before the current block number. The end must be in the future.",
                                ],
                            },
                            Variant {
                                name: "EndTooFarInFuture",
                                fields: [],
                                index: 5,
                                docs: [
                                    "The end date for this crowdloan is not sensible.",
                                ],
                            },
                            Variant {
                                name: "Overflow",
                                fields: [],
                                index: 6,
                                docs: [
                                    "There was an overflow.",
                                ],
                            },
                            Variant {
                                name: "ContributionTooSmall",
                                fields: [],
                                index: 7,
                                docs: [
                                    "The contribution was below the minimum, `MinContribution`.",
                                ],
                            },
                            Variant {
                                name: "InvalidParaId",
                                fields: [],
                                index: 8,
                                docs: [
                                    "Invalid fund index.",
                                ],
                            },
                            Variant {
                                name: "CapExceeded",
                                fields: [],
                                index: 9,
                                docs: [
                                    "Contributions exceed maximum amount.",
                                ],
                            },
                            Variant {
                                name: "ContributionPeriodOver",
                                fields: [],
                                index: 10,
                                docs: [
                                    "The contribution period has already ended.",
                                ],
                            },
                            Variant {
                                name: "InvalidOrigin",
                                fields: [],
                                index: 11,
                                docs: [
                                    "The origin of this call is invalid.",
                                ],
                            },
                            Variant {
                                name: "NotParachain",
                                fields: [],
                                index: 12,
                                docs: [
                                    "This crowdloan does not correspond to a parachain.",
                                ],
                            },
                            Variant {
                                name: "LeaseActive",
                                fields: [],
                                index: 13,
                                docs: [
                                    "This parachain lease is still active and retirement cannot yet begin.",
                                ],
                            },
                            Variant {
                                name: "BidOrLeaseActive",
                                fields: [],
                                index: 14,
                                docs: [
                                    "This parachain's bid or lease is still active and withdraw cannot yet begin.",
                                ],
                            },
                            Variant {
                                name: "FundNotEnded",
                                fields: [],
                                index: 15,
                                docs: [
                                    "The crowdloan has not yet ended.",
                                ],
                            },
                            Variant {
                                name: "NoContributions",
                                fields: [],
                                index: 16,
                                docs: [
                                    "There are no contributions stored in this crowdloan.",
                                ],
                            },
                            Variant {
                                name: "NotReadyToDissolve",
                                fields: [],
                                index: 17,
                                docs: [
                                    "The crowdloan is not ready to dissolve. Potentially still has a slot or in retirement period.",
                                ],
                            },
                            Variant {
                                name: "InvalidSignature",
                                fields: [],
                                index: 18,
                                docs: [
                                    "Invalid signature.",
                                ],
                            },
                            Variant {
                                name: "MemoTooLarge",
                                fields: [],
                                index: 19,
                                docs: [
                                    "The provided memo is too large.",
                                ],
                            },
                            Variant {
                                name: "AlreadyInNewRaise",
                                fields: [],
                                index: 20,
                                docs: [
                                    "The fund is already in `NewRaise`",
                                ],
                            },
                            Variant {
                                name: "VrfDelayInProgress",
                                fields: [],
                                index: 21,
                                docs: [
                                    "No contributions allowed during the VRF delay",
                                ],
                            },
                            Variant {
                                name: "NoLeasePeriod",
                                fields: [],
                                index: 22,
                                docs: [
                                    "A lease period has not started yet, due to an offset in the starting block.",
                                ],
                            },
                        ],
                    },
                ),
                docs: [
                    "The `Error` enum of this pallet.",
                ],
            },
        },
        PortableType {
            id: 794,
            ty: Type {
                path: Path {
                    segments: [
                        "pallet_xcm",
                        "pallet",
                        "QueryStatus",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "BlockNumber",
                        ty: Some(
                            UntrackedSymbol {
                                id: 4,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ),
                    },
                ],
                type_def: Variant(
                    TypeDefVariant {
                        variants: [
                            Variant {
                                name: "Pending",
                                fields: [
                                    Field {
                                        name: Some(
                                            "responder",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 370,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "VersionedMultiLocation",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "maybe_match_querier",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 795,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "Option<VersionedMultiLocation>",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "maybe_notify",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 796,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "Option<(u8, u8)>",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "timeout",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 4,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "BlockNumber",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 0,
                                docs: [],
                            },
                            Variant {
                                name: "VersionNotifier",
                                fields: [
                                    Field {
                                        name: Some(
                                            "origin",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 370,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "VersionedMultiLocation",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "is_active",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 44,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "bool",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 1,
                                docs: [],
                            },
                            Variant {
                                name: "Ready",
                                fields: [
                                    Field {
                                        name: Some(
                                            "response",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 798,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "VersionedResponse",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: Some(
                                            "at",
                                        ),
                                        ty: UntrackedSymbol {
                                            id: 4,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "BlockNumber",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 2,
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 795,
            ty: Type {
                path: Path {
                    segments: [
                        "Option",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "T",
                        ty: Some(
                            UntrackedSymbol {
                                id: 370,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ),
                    },
                ],
                type_def: Variant(
                    TypeDefVariant {
                        variants: [
                            Variant {
                                name: "None",
                                fields: [],
                                index: 0,
                                docs: [],
                            },
                            Variant {
                                name: "Some",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 370,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: None,
                                        docs: [],
                                    },
                                ],
                                index: 1,
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 796,
            ty: Type {
                path: Path {
                    segments: [
                        "Option",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "T",
                        ty: Some(
                            UntrackedSymbol {
                                id: 797,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ),
                    },
                ],
                type_def: Variant(
                    TypeDefVariant {
                        variants: [
                            Variant {
                                name: "None",
                                fields: [],
                                index: 0,
                                docs: [],
                            },
                            Variant {
                                name: "Some",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 797,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: None,
                                        docs: [],
                                    },
                                ],
                                index: 1,
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 797,
            ty: Type {
                path: Path {
                    segments: [],
                },
                type_params: [],
                type_def: Tuple(
                    TypeDefTuple {
                        fields: [
                            UntrackedSymbol {
                                id: 2,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                            UntrackedSymbol {
                                id: 2,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 798,
            ty: Type {
                path: Path {
                    segments: [
                        "xcm",
                        "VersionedResponse",
                    ],
                },
                type_params: [],
                type_def: Variant(
                    TypeDefVariant {
                        variants: [
                            Variant {
                                name: "V2",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 388,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "v2::Response",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 2,
                                docs: [],
                            },
                            Variant {
                                name: "V3",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 407,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "v3::Response",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 3,
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 799,
            ty: Type {
                path: Path {
                    segments: [],
                },
                type_params: [],
                type_def: Tuple(
                    TypeDefTuple {
                        fields: [
                            UntrackedSymbol {
                                id: 4,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                            UntrackedSymbol {
                                id: 370,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 800,
            ty: Type {
                path: Path {
                    segments: [],
                },
                type_params: [],
                type_def: Tuple(
                    TypeDefTuple {
                        fields: [
                            UntrackedSymbol {
                                id: 11,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                            UntrackedSymbol {
                                id: 9,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                            UntrackedSymbol {
                                id: 4,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 801,
            ty: Type {
                path: Path {
                    segments: [
                        "bounded_collections",
                        "bounded_vec",
                        "BoundedVec",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "T",
                        ty: Some(
                            UntrackedSymbol {
                                id: 802,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ),
                    },
                    TypeParameter {
                        name: "S",
                        ty: None,
                    },
                ],
                type_def: Composite(
                    TypeDefComposite {
                        fields: [
                            Field {
                                name: None,
                                ty: UntrackedSymbol {
                                    id: 803,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "Vec<T>",
                                ),
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 802,
            ty: Type {
                path: Path {
                    segments: [],
                },
                type_params: [],
                type_def: Tuple(
                    TypeDefTuple {
                        fields: [
                            UntrackedSymbol {
                                id: 370,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                            UntrackedSymbol {
                                id: 4,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 803,
            ty: Type {
                path: Path {
                    segments: [],
                },
                type_params: [],
                type_def: Sequence(
                    TypeDefSequence {
                        type_param: UntrackedSymbol {
                            id: 802,
                            marker: PhantomData<fn() -> core::any::TypeId>,
                        },
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 804,
            ty: Type {
                path: Path {
                    segments: [
                        "pallet_xcm",
                        "pallet",
                        "VersionMigrationStage",
                    ],
                },
                type_params: [],
                type_def: Variant(
                    TypeDefVariant {
                        variants: [
                            Variant {
                                name: "MigrateSupportedVersion",
                                fields: [],
                                index: 0,
                                docs: [],
                            },
                            Variant {
                                name: "MigrateVersionNotifiers",
                                fields: [],
                                index: 1,
                                docs: [],
                            },
                            Variant {
                                name: "NotifyCurrentTargets",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 805,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "Option<Vec<u8>>",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 2,
                                docs: [],
                            },
                            Variant {
                                name: "MigrateAndNotifyOldTargets",
                                fields: [],
                                index: 3,
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 805,
            ty: Type {
                path: Path {
                    segments: [
                        "Option",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "T",
                        ty: Some(
                            UntrackedSymbol {
                                id: 13,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ),
                    },
                ],
                type_def: Variant(
                    TypeDefVariant {
                        variants: [
                            Variant {
                                name: "None",
                                fields: [],
                                index: 0,
                                docs: [],
                            },
                            Variant {
                                name: "Some",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 13,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: None,
                                        docs: [],
                                    },
                                ],
                                index: 1,
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 806,
            ty: Type {
                path: Path {
                    segments: [],
                },
                type_params: [],
                type_def: Tuple(
                    TypeDefTuple {
                        fields: [
                            UntrackedSymbol {
                                id: 4,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                            UntrackedSymbol {
                                id: 0,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                            UntrackedSymbol {
                                id: 807,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 807,
            ty: Type {
                path: Path {
                    segments: [
                        "xcm",
                        "VersionedAssetId",
                    ],
                },
                type_params: [],
                type_def: Variant(
                    TypeDefVariant {
                        variants: [
                            Variant {
                                name: "V3",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 404,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "v3::AssetId",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 3,
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 808,
            ty: Type {
                path: Path {
                    segments: [
                        "pallet_xcm",
                        "pallet",
                        "RemoteLockedFungibleRecord",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "ConsumerIdentifier",
                        ty: Some(
                            UntrackedSymbol {
                                id: 34,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ),
                    },
                    TypeParameter {
                        name: "MaxConsumers",
                        ty: None,
                    },
                ],
                type_def: Composite(
                    TypeDefComposite {
                        fields: [
                            Field {
                                name: Some(
                                    "amount",
                                ),
                                ty: UntrackedSymbol {
                                    id: 6,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "u128",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "owner",
                                ),
                                ty: UntrackedSymbol {
                                    id: 370,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "VersionedMultiLocation",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "locker",
                                ),
                                ty: UntrackedSymbol {
                                    id: 370,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "VersionedMultiLocation",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "consumers",
                                ),
                                ty: UntrackedSymbol {
                                    id: 809,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "BoundedVec<(ConsumerIdentifier, u128), MaxConsumers>",
                                ),
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 809,
            ty: Type {
                path: Path {
                    segments: [
                        "bounded_collections",
                        "bounded_vec",
                        "BoundedVec",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "T",
                        ty: Some(
                            UntrackedSymbol {
                                id: 810,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ),
                    },
                    TypeParameter {
                        name: "S",
                        ty: None,
                    },
                ],
                type_def: Composite(
                    TypeDefComposite {
                        fields: [
                            Field {
                                name: None,
                                ty: UntrackedSymbol {
                                    id: 811,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "Vec<T>",
                                ),
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 810,
            ty: Type {
                path: Path {
                    segments: [],
                },
                type_params: [],
                type_def: Tuple(
                    TypeDefTuple {
                        fields: [
                            UntrackedSymbol {
                                id: 34,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                            UntrackedSymbol {
                                id: 6,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 811,
            ty: Type {
                path: Path {
                    segments: [],
                },
                type_params: [],
                type_def: Sequence(
                    TypeDefSequence {
                        type_param: UntrackedSymbol {
                            id: 810,
                            marker: PhantomData<fn() -> core::any::TypeId>,
                        },
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 812,
            ty: Type {
                path: Path {
                    segments: [
                        "bounded_collections",
                        "bounded_vec",
                        "BoundedVec",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "T",
                        ty: Some(
                            UntrackedSymbol {
                                id: 813,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ),
                    },
                    TypeParameter {
                        name: "S",
                        ty: None,
                    },
                ],
                type_def: Composite(
                    TypeDefComposite {
                        fields: [
                            Field {
                                name: None,
                                ty: UntrackedSymbol {
                                    id: 814,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "Vec<T>",
                                ),
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 813,
            ty: Type {
                path: Path {
                    segments: [],
                },
                type_params: [],
                type_def: Tuple(
                    TypeDefTuple {
                        fields: [
                            UntrackedSymbol {
                                id: 6,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                            UntrackedSymbol {
                                id: 370,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 814,
            ty: Type {
                path: Path {
                    segments: [],
                },
                type_params: [],
                type_def: Sequence(
                    TypeDefSequence {
                        type_param: UntrackedSymbol {
                            id: 813,
                            marker: PhantomData<fn() -> core::any::TypeId>,
                        },
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 815,
            ty: Type {
                path: Path {
                    segments: [
                        "pallet_xcm",
                        "pallet",
                        "Error",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "T",
                        ty: None,
                    },
                ],
                type_def: Variant(
                    TypeDefVariant {
                        variants: [
                            Variant {
                                name: "Unreachable",
                                fields: [],
                                index: 0,
                                docs: [
                                    "The desired destination was unreachable, generally because there is a no way of routing",
                                    "to it.",
                                ],
                            },
                            Variant {
                                name: "SendFailure",
                                fields: [],
                                index: 1,
                                docs: [
                                    "There was some other issue (i.e. not to do with routing) in sending the message. Perhaps",
                                    "a lack of space for buffering the message.",
                                ],
                            },
                            Variant {
                                name: "Filtered",
                                fields: [],
                                index: 2,
                                docs: [
                                    "The message execution fails the filter.",
                                ],
                            },
                            Variant {
                                name: "UnweighableMessage",
                                fields: [],
                                index: 3,
                                docs: [
                                    "The message's weight could not be determined.",
                                ],
                            },
                            Variant {
                                name: "DestinationNotInvertible",
                                fields: [],
                                index: 4,
                                docs: [
                                    "The destination `MultiLocation` provided cannot be inverted.",
                                ],
                            },
                            Variant {
                                name: "Empty",
                                fields: [],
                                index: 5,
                                docs: [
                                    "The assets to be sent are empty.",
                                ],
                            },
                            Variant {
                                name: "CannotReanchor",
                                fields: [],
                                index: 6,
                                docs: [
                                    "Could not re-anchor the assets to declare the fees for the destination chain.",
                                ],
                            },
                            Variant {
                                name: "TooManyAssets",
                                fields: [],
                                index: 7,
                                docs: [
                                    "Too many assets have been attempted for transfer.",
                                ],
                            },
                            Variant {
                                name: "InvalidOrigin",
                                fields: [],
                                index: 8,
                                docs: [
                                    "Origin is invalid for sending.",
                                ],
                            },
                            Variant {
                                name: "BadVersion",
                                fields: [],
                                index: 9,
                                docs: [
                                    "The version of the `Versioned` value used is not able to be interpreted.",
                                ],
                            },
                            Variant {
                                name: "BadLocation",
                                fields: [],
                                index: 10,
                                docs: [
                                    "The given location could not be used (e.g. because it cannot be expressed in the",
                                    "desired version of XCM).",
                                ],
                            },
                            Variant {
                                name: "NoSubscription",
                                fields: [],
                                index: 11,
                                docs: [
                                    "The referenced subscription could not be found.",
                                ],
                            },
                            Variant {
                                name: "AlreadySubscribed",
                                fields: [],
                                index: 12,
                                docs: [
                                    "The location is invalid since it already has a subscription from us.",
                                ],
                            },
                            Variant {
                                name: "InvalidAsset",
                                fields: [],
                                index: 13,
                                docs: [
                                    "Invalid asset for the operation.",
                                ],
                            },
                            Variant {
                                name: "LowBalance",
                                fields: [],
                                index: 14,
                                docs: [
                                    "The owner does not own (all) of the asset that they wish to do the operation on.",
                                ],
                            },
                            Variant {
                                name: "TooManyLocks",
                                fields: [],
                                index: 15,
                                docs: [
                                    "The asset owner has too many locks on the asset.",
                                ],
                            },
                            Variant {
                                name: "AccountNotSovereign",
                                fields: [],
                                index: 16,
                                docs: [
                                    "The given account is not an identifiable sovereign account for any location.",
                                ],
                            },
                            Variant {
                                name: "FeesNotMet",
                                fields: [],
                                index: 17,
                                docs: [
                                    "The operation required fees to be paid which the initiator could not meet.",
                                ],
                            },
                            Variant {
                                name: "LockNotFound",
                                fields: [],
                                index: 18,
                                docs: [
                                    "A remote lock with the corresponding data could not be found.",
                                ],
                            },
                            Variant {
                                name: "InUse",
                                fields: [],
                                index: 19,
                                docs: [
                                    "The unlock operation cannot succeed because there are still consumers of the lock.",
                                ],
                            },
                        ],
                    },
                ),
                docs: [
                    "The `Error` enum of this pallet.",
                ],
            },
        },
        PortableType {
            id: 816,
            ty: Type {
                path: Path {
                    segments: [
                        "pallet_message_queue",
                        "BookState",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "MessageOrigin",
                        ty: Some(
                            UntrackedSymbol {
                                id: 433,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ),
                    },
                ],
                type_def: Composite(
                    TypeDefComposite {
                        fields: [
                            Field {
                                name: Some(
                                    "begin",
                                ),
                                ty: UntrackedSymbol {
                                    id: 4,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "PageIndex",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "end",
                                ),
                                ty: UntrackedSymbol {
                                    id: 4,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "PageIndex",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "count",
                                ),
                                ty: UntrackedSymbol {
                                    id: 4,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "PageIndex",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "ready_neighbours",
                                ),
                                ty: UntrackedSymbol {
                                    id: 817,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "Option<Neighbours<MessageOrigin>>",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "message_count",
                                ),
                                ty: UntrackedSymbol {
                                    id: 11,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "u64",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "size",
                                ),
                                ty: UntrackedSymbol {
                                    id: 11,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "u64",
                                ),
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 817,
            ty: Type {
                path: Path {
                    segments: [
                        "Option",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "T",
                        ty: Some(
                            UntrackedSymbol {
                                id: 818,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ),
                    },
                ],
                type_def: Variant(
                    TypeDefVariant {
                        variants: [
                            Variant {
                                name: "None",
                                fields: [],
                                index: 0,
                                docs: [],
                            },
                            Variant {
                                name: "Some",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 818,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: None,
                                        docs: [],
                                    },
                                ],
                                index: 1,
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 818,
            ty: Type {
                path: Path {
                    segments: [
                        "pallet_message_queue",
                        "Neighbours",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "MessageOrigin",
                        ty: Some(
                            UntrackedSymbol {
                                id: 433,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ),
                    },
                ],
                type_def: Composite(
                    TypeDefComposite {
                        fields: [
                            Field {
                                name: Some(
                                    "prev",
                                ),
                                ty: UntrackedSymbol {
                                    id: 433,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "MessageOrigin",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "next",
                                ),
                                ty: UntrackedSymbol {
                                    id: 433,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "MessageOrigin",
                                ),
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 819,
            ty: Type {
                path: Path {
                    segments: [],
                },
                type_params: [],
                type_def: Tuple(
                    TypeDefTuple {
                        fields: [
                            UntrackedSymbol {
                                id: 433,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                            UntrackedSymbol {
                                id: 4,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 820,
            ty: Type {
                path: Path {
                    segments: [
                        "pallet_message_queue",
                        "Page",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "Size",
                        ty: Some(
                            UntrackedSymbol {
                                id: 4,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ),
                    },
                    TypeParameter {
                        name: "HeapSize",
                        ty: None,
                    },
                ],
                type_def: Composite(
                    TypeDefComposite {
                        fields: [
                            Field {
                                name: Some(
                                    "remaining",
                                ),
                                ty: UntrackedSymbol {
                                    id: 4,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "Size",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "remaining_size",
                                ),
                                ty: UntrackedSymbol {
                                    id: 4,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "Size",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "first_index",
                                ),
                                ty: UntrackedSymbol {
                                    id: 4,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "Size",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "first",
                                ),
                                ty: UntrackedSymbol {
                                    id: 4,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "Size",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "last",
                                ),
                                ty: UntrackedSymbol {
                                    id: 4,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "Size",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "heap",
                                ),
                                ty: UntrackedSymbol {
                                    id: 821,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "BoundedVec<u8, IntoU32<HeapSize, Size>>",
                                ),
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 821,
            ty: Type {
                path: Path {
                    segments: [
                        "bounded_collections",
                        "bounded_vec",
                        "BoundedVec",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "T",
                        ty: Some(
                            UntrackedSymbol {
                                id: 2,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ),
                    },
                    TypeParameter {
                        name: "S",
                        ty: None,
                    },
                ],
                type_def: Composite(
                    TypeDefComposite {
                        fields: [
                            Field {
                                name: None,
                                ty: UntrackedSymbol {
                                    id: 13,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "Vec<T>",
                                ),
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 822,
            ty: Type {
                path: Path {
                    segments: [
                        "pallet_message_queue",
                        "pallet",
                        "Error",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "T",
                        ty: None,
                    },
                ],
                type_def: Variant(
                    TypeDefVariant {
                        variants: [
                            Variant {
                                name: "NotReapable",
                                fields: [],
                                index: 0,
                                docs: [
                                    "Page is not reapable because it has items remaining to be processed and is not old",
                                    "enough.",
                                ],
                            },
                            Variant {
                                name: "NoPage",
                                fields: [],
                                index: 1,
                                docs: [
                                    "Page to be reaped does not exist.",
                                ],
                            },
                            Variant {
                                name: "NoMessage",
                                fields: [],
                                index: 2,
                                docs: [
                                    "The referenced message could not be found.",
                                ],
                            },
                            Variant {
                                name: "AlreadyProcessed",
                                fields: [],
                                index: 3,
                                docs: [
                                    "The message was already processed and cannot be processed again.",
                                ],
                            },
                            Variant {
                                name: "Queued",
                                fields: [],
                                index: 4,
                                docs: [
                                    "The message is queued for future execution.",
                                ],
                            },
                            Variant {
                                name: "InsufficientWeight",
                                fields: [],
                                index: 5,
                                docs: [
                                    "There is temporarily not enough weight to continue servicing messages.",
                                ],
                            },
                            Variant {
                                name: "TemporarilyUnprocessable",
                                fields: [],
                                index: 6,
                                docs: [
                                    "This message is temporarily unprocessable.",
                                    "",
                                    "Such errors are expected, but not guaranteed, to resolve themselves eventually through",
                                    "retrying.",
                                ],
                            },
                            Variant {
                                name: "QueuePaused",
                                fields: [],
                                index: 7,
                                docs: [
                                    "The queue is paused and no message can be executed from it.",
                                    "",
                                    "This can change at any time and may resolve in the future by re-trying.",
                                ],
                            },
                        ],
                    },
                ),
                docs: [
                    "The `Error` enum of this pallet.",
                ],
            },
        },
        PortableType {
            id: 823,
            ty: Type {
                path: Path {
                    segments: [],
                },
                type_params: [],
                type_def: Tuple(
                    TypeDefTuple {
                        fields: [
                            UntrackedSymbol {
                                id: 824,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                            UntrackedSymbol {
                                id: 825,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                            UntrackedSymbol {
                                id: 826,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                            UntrackedSymbol {
                                id: 827,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                            UntrackedSymbol {
                                id: 828,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                            UntrackedSymbol {
                                id: 830,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                            UntrackedSymbol {
                                id: 831,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                            UntrackedSymbol {
                                id: 832,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                            UntrackedSymbol {
                                id: 833,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 824,
            ty: Type {
                path: Path {
                    segments: [
                        "frame_system",
                        "extensions",
                        "check_non_zero_sender",
                        "CheckNonZeroSender",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "T",
                        ty: None,
                    },
                ],
                type_def: Composite(
                    TypeDefComposite {
                        fields: [],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 825,
            ty: Type {
                path: Path {
                    segments: [
                        "frame_system",
                        "extensions",
                        "check_spec_version",
                        "CheckSpecVersion",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "T",
                        ty: None,
                    },
                ],
                type_def: Composite(
                    TypeDefComposite {
                        fields: [],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 826,
            ty: Type {
                path: Path {
                    segments: [
                        "frame_system",
                        "extensions",
                        "check_tx_version",
                        "CheckTxVersion",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "T",
                        ty: None,
                    },
                ],
                type_def: Composite(
                    TypeDefComposite {
                        fields: [],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 827,
            ty: Type {
                path: Path {
                    segments: [
                        "frame_system",
                        "extensions",
                        "check_genesis",
                        "CheckGenesis",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "T",
                        ty: None,
                    },
                ],
                type_def: Composite(
                    TypeDefComposite {
                        fields: [],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 828,
            ty: Type {
                path: Path {
                    segments: [
                        "frame_system",
                        "extensions",
                        "check_mortality",
                        "CheckMortality",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "T",
                        ty: None,
                    },
                ],
                type_def: Composite(
                    TypeDefComposite {
                        fields: [
                            Field {
                                name: None,
                                ty: UntrackedSymbol {
                                    id: 829,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "Era",
                                ),
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 829,
            ty: Type {
                path: Path {
                    segments: [
                        "sp_runtime",
                        "generic",
                        "era",
                        "Era",
                    ],
                },
                type_params: [],
                type_def: Variant(
                    TypeDefVariant {
                        variants: [
                            Variant {
                                name: "Immortal",
                                fields: [],
                                index: 0,
                                docs: [],
                            },
                            Variant {
                                name: "Mortal1",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 2,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: None,
                                        docs: [],
                                    },
                                ],
                                index: 1,
                                docs: [],
                            },
                            Variant {
                                name: "Mortal2",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 2,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: None,
                                        docs: [],
                                    },
                                ],
                                index: 2,
                                docs: [],
                            },
                            Variant {
                                name: "Mortal3",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 2,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: None,
                                        docs: [],
                                    },
                                ],
                                index: 3,
                                docs: [],
                            },
                            Variant {
                                name: "Mortal4",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 2,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: None,
                                        docs: [],
                                    },
                                ],
                                index: 4,
                                docs: [],
                            },
                            Variant {
                                name: "Mortal5",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 2,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: None,
                                        docs: [],
                                    },
                                ],
                                index: 5,
                                docs: [],
                            },
                            Variant {
                                name: "Mortal6",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 2,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: None,
                                        docs: [],
                                    },
                                ],
                                index: 6,
                                docs: [],
                            },
                            Variant {
                                name: "Mortal7",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 2,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: None,
                                        docs: [],
                                    },
                                ],
                                index: 7,
                                docs: [],
                            },
                            Variant {
                                name: "Mortal8",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 2,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: None,
                                        docs: [],
                                    },
                                ],
                                index: 8,
                                docs: [],
                            },
                            Variant {
                                name: "Mortal9",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 2,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: None,
                                        docs: [],
                                    },
                                ],
                                index: 9,
                                docs: [],
                            },
                            Variant {
                                name: "Mortal10",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 2,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: None,
                                        docs: [],
                                    },
                                ],
                                index: 10,
                                docs: [],
                            },
                            Variant {
                                name: "Mortal11",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 2,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: None,
                                        docs: [],
                                    },
                                ],
                                index: 11,
                                docs: [],
                            },
                            Variant {
                                name: "Mortal12",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 2,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: None,
                                        docs: [],
                                    },
                                ],
                                index: 12,
                                docs: [],
                            },
                            Variant {
                                name: "Mortal13",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 2,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: None,
                                        docs: [],
                                    },
                                ],
                                index: 13,
                                docs: [],
                            },
                            Variant {
                                name: "Mortal14",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 2,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: None,
                                        docs: [],
                                    },
                                ],
                                index: 14,
                                docs: [],
                            },
                            Variant {
                                name: "Mortal15",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 2,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: None,
                                        docs: [],
                                    },
                                ],
                                index: 15,
                                docs: [],
                            },
                            Variant {
                                name: "Mortal16",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 2,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: None,
                                        docs: [],
                                    },
                                ],
                                index: 16,
                                docs: [],
                            },
                            Variant {
                                name: "Mortal17",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 2,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: None,
                                        docs: [],
                                    },
                                ],
                                index: 17,
                                docs: [],
                            },
                            Variant {
                                name: "Mortal18",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 2,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: None,
                                        docs: [],
                                    },
                                ],
                                index: 18,
                                docs: [],
                            },
                            Variant {
                                name: "Mortal19",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 2,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: None,
                                        docs: [],
                                    },
                                ],
                                index: 19,
                                docs: [],
                            },
                            Variant {
                                name: "Mortal20",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 2,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: None,
                                        docs: [],
                                    },
                                ],
                                index: 20,
                                docs: [],
                            },
                            Variant {
                                name: "Mortal21",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 2,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: None,
                                        docs: [],
                                    },
                                ],
                                index: 21,
                                docs: [],
                            },
                            Variant {
                                name: "Mortal22",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 2,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: None,
                                        docs: [],
                                    },
                                ],
                                index: 22,
                                docs: [],
                            },
                            Variant {
                                name: "Mortal23",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 2,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: None,
                                        docs: [],
                                    },
                                ],
                                index: 23,
                                docs: [],
                            },
                            Variant {
                                name: "Mortal24",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 2,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: None,
                                        docs: [],
                                    },
                                ],
                                index: 24,
                                docs: [],
                            },
                            Variant {
                                name: "Mortal25",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 2,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: None,
                                        docs: [],
                                    },
                                ],
                                index: 25,
                                docs: [],
                            },
                            Variant {
                                name: "Mortal26",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 2,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: None,
                                        docs: [],
                                    },
                                ],
                                index: 26,
                                docs: [],
                            },
                            Variant {
                                name: "Mortal27",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 2,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: None,
                                        docs: [],
                                    },
                                ],
                                index: 27,
                                docs: [],
                            },
                            Variant {
                                name: "Mortal28",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 2,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: None,
                                        docs: [],
                                    },
                                ],
                                index: 28,
                                docs: [],
                            },
                            Variant {
                                name: "Mortal29",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 2,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: None,
                                        docs: [],
                                    },
                                ],
                                index: 29,
                                docs: [],
                            },
                            Variant {
                                name: "Mortal30",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 2,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: None,
                                        docs: [],
                                    },
                                ],
                                index: 30,
                                docs: [],
                            },
                            Variant {
                                name: "Mortal31",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 2,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: None,
                                        docs: [],
                                    },
                                ],
                                index: 31,
                                docs: [],
                            },
                            Variant {
                                name: "Mortal32",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 2,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: None,
                                        docs: [],
                                    },
                                ],
                                index: 32,
                                docs: [],
                            },
                            Variant {
                                name: "Mortal33",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 2,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: None,
                                        docs: [],
                                    },
                                ],
                                index: 33,
                                docs: [],
                            },
                            Variant {
                                name: "Mortal34",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 2,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: None,
                                        docs: [],
                                    },
                                ],
                                index: 34,
                                docs: [],
                            },
                            Variant {
                                name: "Mortal35",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 2,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: None,
                                        docs: [],
                                    },
                                ],
                                index: 35,
                                docs: [],
                            },
                            Variant {
                                name: "Mortal36",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 2,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: None,
                                        docs: [],
                                    },
                                ],
                                index: 36,
                                docs: [],
                            },
                            Variant {
                                name: "Mortal37",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 2,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: None,
                                        docs: [],
                                    },
                                ],
                                index: 37,
                                docs: [],
                            },
                            Variant {
                                name: "Mortal38",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 2,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: None,
                                        docs: [],
                                    },
                                ],
                                index: 38,
                                docs: [],
                            },
                            Variant {
                                name: "Mortal39",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 2,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: None,
                                        docs: [],
                                    },
                                ],
                                index: 39,
                                docs: [],
                            },
                            Variant {
                                name: "Mortal40",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 2,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: None,
                                        docs: [],
                                    },
                                ],
                                index: 40,
                                docs: [],
                            },
                            Variant {
                                name: "Mortal41",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 2,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: None,
                                        docs: [],
                                    },
                                ],
                                index: 41,
                                docs: [],
                            },
                            Variant {
                                name: "Mortal42",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 2,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: None,
                                        docs: [],
                                    },
                                ],
                                index: 42,
                                docs: [],
                            },
                            Variant {
                                name: "Mortal43",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 2,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: None,
                                        docs: [],
                                    },
                                ],
                                index: 43,
                                docs: [],
                            },
                            Variant {
                                name: "Mortal44",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 2,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: None,
                                        docs: [],
                                    },
                                ],
                                index: 44,
                                docs: [],
                            },
                            Variant {
                                name: "Mortal45",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 2,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: None,
                                        docs: [],
                                    },
                                ],
                                index: 45,
                                docs: [],
                            },
                            Variant {
                                name: "Mortal46",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 2,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: None,
                                        docs: [],
                                    },
                                ],
                                index: 46,
                                docs: [],
                            },
                            Variant {
                                name: "Mortal47",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 2,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: None,
                                        docs: [],
                                    },
                                ],
                                index: 47,
                                docs: [],
                            },
                            Variant {
                                name: "Mortal48",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 2,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: None,
                                        docs: [],
                                    },
                                ],
                                index: 48,
                                docs: [],
                            },
                            Variant {
                                name: "Mortal49",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 2,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: None,
                                        docs: [],
                                    },
                                ],
                                index: 49,
                                docs: [],
                            },
                            Variant {
                                name: "Mortal50",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 2,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: None,
                                        docs: [],
                                    },
                                ],
                                index: 50,
                                docs: [],
                            },
                            Variant {
                                name: "Mortal51",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 2,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: None,
                                        docs: [],
                                    },
                                ],
                                index: 51,
                                docs: [],
                            },
                            Variant {
                                name: "Mortal52",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 2,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: None,
                                        docs: [],
                                    },
                                ],
                                index: 52,
                                docs: [],
                            },
                            Variant {
                                name: "Mortal53",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 2,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: None,
                                        docs: [],
                                    },
                                ],
                                index: 53,
                                docs: [],
                            },
                            Variant {
                                name: "Mortal54",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 2,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: None,
                                        docs: [],
                                    },
                                ],
                                index: 54,
                                docs: [],
                            },
                            Variant {
                                name: "Mortal55",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 2,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: None,
                                        docs: [],
                                    },
                                ],
                                index: 55,
                                docs: [],
                            },
                            Variant {
                                name: "Mortal56",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 2,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: None,
                                        docs: [],
                                    },
                                ],
                                index: 56,
                                docs: [],
                            },
                            Variant {
                                name: "Mortal57",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 2,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: None,
                                        docs: [],
                                    },
                                ],
                                index: 57,
                                docs: [],
                            },
                            Variant {
                                name: "Mortal58",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 2,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: None,
                                        docs: [],
                                    },
                                ],
                                index: 58,
                                docs: [],
                            },
                            Variant {
                                name: "Mortal59",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 2,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: None,
                                        docs: [],
                                    },
                                ],
                                index: 59,
                                docs: [],
                            },
                            Variant {
                                name: "Mortal60",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 2,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: None,
                                        docs: [],
                                    },
                                ],
                                index: 60,
                                docs: [],
                            },
                            Variant {
                                name: "Mortal61",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 2,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: None,
                                        docs: [],
                                    },
                                ],
                                index: 61,
                                docs: [],
                            },
                            Variant {
                                name: "Mortal62",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 2,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: None,
                                        docs: [],
                                    },
                                ],
                                index: 62,
                                docs: [],
                            },
                            Variant {
                                name: "Mortal63",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 2,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: None,
                                        docs: [],
                                    },
                                ],
                                index: 63,
                                docs: [],
                            },
                            Variant {
                                name: "Mortal64",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 2,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: None,
                                        docs: [],
                                    },
                                ],
                                index: 64,
                                docs: [],
                            },
                            Variant {
                                name: "Mortal65",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 2,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: None,
                                        docs: [],
                                    },
                                ],
                                index: 65,
                                docs: [],
                            },
                            Variant {
                                name: "Mortal66",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 2,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: None,
                                        docs: [],
                                    },
                                ],
                                index: 66,
                                docs: [],
                            },
                            Variant {
                                name: "Mortal67",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 2,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: None,
                                        docs: [],
                                    },
                                ],
                                index: 67,
                                docs: [],
                            },
                            Variant {
                                name: "Mortal68",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 2,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: None,
                                        docs: [],
                                    },
                                ],
                                index: 68,
                                docs: [],
                            },
                            Variant {
                                name: "Mortal69",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 2,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: None,
                                        docs: [],
                                    },
                                ],
                                index: 69,
                                docs: [],
                            },
                            Variant {
                                name: "Mortal70",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 2,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: None,
                                        docs: [],
                                    },
                                ],
                                index: 70,
                                docs: [],
                            },
                            Variant {
                                name: "Mortal71",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 2,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: None,
                                        docs: [],
                                    },
                                ],
                                index: 71,
                                docs: [],
                            },
                            Variant {
                                name: "Mortal72",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 2,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: None,
                                        docs: [],
                                    },
                                ],
                                index: 72,
                                docs: [],
                            },
                            Variant {
                                name: "Mortal73",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 2,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: None,
                                        docs: [],
                                    },
                                ],
                                index: 73,
                                docs: [],
                            },
                            Variant {
                                name: "Mortal74",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 2,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: None,
                                        docs: [],
                                    },
                                ],
                                index: 74,
                                docs: [],
                            },
                            Variant {
                                name: "Mortal75",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 2,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: None,
                                        docs: [],
                                    },
                                ],
                                index: 75,
                                docs: [],
                            },
                            Variant {
                                name: "Mortal76",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 2,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: None,
                                        docs: [],
                                    },
                                ],
                                index: 76,
                                docs: [],
                            },
                            Variant {
                                name: "Mortal77",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 2,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: None,
                                        docs: [],
                                    },
                                ],
                                index: 77,
                                docs: [],
                            },
                            Variant {
                                name: "Mortal78",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 2,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: None,
                                        docs: [],
                                    },
                                ],
                                index: 78,
                                docs: [],
                            },
                            Variant {
                                name: "Mortal79",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 2,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: None,
                                        docs: [],
                                    },
                                ],
                                index: 79,
                                docs: [],
                            },
                            Variant {
                                name: "Mortal80",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 2,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: None,
                                        docs: [],
                                    },
                                ],
                                index: 80,
                                docs: [],
                            },
                            Variant {
                                name: "Mortal81",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 2,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: None,
                                        docs: [],
                                    },
                                ],
                                index: 81,
                                docs: [],
                            },
                            Variant {
                                name: "Mortal82",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 2,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: None,
                                        docs: [],
                                    },
                                ],
                                index: 82,
                                docs: [],
                            },
                            Variant {
                                name: "Mortal83",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 2,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: None,
                                        docs: [],
                                    },
                                ],
                                index: 83,
                                docs: [],
                            },
                            Variant {
                                name: "Mortal84",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 2,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: None,
                                        docs: [],
                                    },
                                ],
                                index: 84,
                                docs: [],
                            },
                            Variant {
                                name: "Mortal85",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 2,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: None,
                                        docs: [],
                                    },
                                ],
                                index: 85,
                                docs: [],
                            },
                            Variant {
                                name: "Mortal86",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 2,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: None,
                                        docs: [],
                                    },
                                ],
                                index: 86,
                                docs: [],
                            },
                            Variant {
                                name: "Mortal87",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 2,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: None,
                                        docs: [],
                                    },
                                ],
                                index: 87,
                                docs: [],
                            },
                            Variant {
                                name: "Mortal88",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 2,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: None,
                                        docs: [],
                                    },
                                ],
                                index: 88,
                                docs: [],
                            },
                            Variant {
                                name: "Mortal89",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 2,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: None,
                                        docs: [],
                                    },
                                ],
                                index: 89,
                                docs: [],
                            },
                            Variant {
                                name: "Mortal90",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 2,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: None,
                                        docs: [],
                                    },
                                ],
                                index: 90,
                                docs: [],
                            },
                            Variant {
                                name: "Mortal91",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 2,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: None,
                                        docs: [],
                                    },
                                ],
                                index: 91,
                                docs: [],
                            },
                            Variant {
                                name: "Mortal92",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 2,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: None,
                                        docs: [],
                                    },
                                ],
                                index: 92,
                                docs: [],
                            },
                            Variant {
                                name: "Mortal93",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 2,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: None,
                                        docs: [],
                                    },
                                ],
                                index: 93,
                                docs: [],
                            },
                            Variant {
                                name: "Mortal94",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 2,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: None,
                                        docs: [],
                                    },
                                ],
                                index: 94,
                                docs: [],
                            },
                            Variant {
                                name: "Mortal95",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 2,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: None,
                                        docs: [],
                                    },
                                ],
                                index: 95,
                                docs: [],
                            },
                            Variant {
                                name: "Mortal96",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 2,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: None,
                                        docs: [],
                                    },
                                ],
                                index: 96,
                                docs: [],
                            },
                            Variant {
                                name: "Mortal97",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 2,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: None,
                                        docs: [],
                                    },
                                ],
                                index: 97,
                                docs: [],
                            },
                            Variant {
                                name: "Mortal98",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 2,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: None,
                                        docs: [],
                                    },
                                ],
                                index: 98,
                                docs: [],
                            },
                            Variant {
                                name: "Mortal99",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 2,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: None,
                                        docs: [],
                                    },
                                ],
                                index: 99,
                                docs: [],
                            },
                            Variant {
                                name: "Mortal100",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 2,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: None,
                                        docs: [],
                                    },
                                ],
                                index: 100,
                                docs: [],
                            },
                            Variant {
                                name: "Mortal101",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 2,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: None,
                                        docs: [],
                                    },
                                ],
                                index: 101,
                                docs: [],
                            },
                            Variant {
                                name: "Mortal102",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 2,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: None,
                                        docs: [],
                                    },
                                ],
                                index: 102,
                                docs: [],
                            },
                            Variant {
                                name: "Mortal103",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 2,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: None,
                                        docs: [],
                                    },
                                ],
                                index: 103,
                                docs: [],
                            },
                            Variant {
                                name: "Mortal104",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 2,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: None,
                                        docs: [],
                                    },
                                ],
                                index: 104,
                                docs: [],
                            },
                            Variant {
                                name: "Mortal105",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 2,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: None,
                                        docs: [],
                                    },
                                ],
                                index: 105,
                                docs: [],
                            },
                            Variant {
                                name: "Mortal106",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 2,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: None,
                                        docs: [],
                                    },
                                ],
                                index: 106,
                                docs: [],
                            },
                            Variant {
                                name: "Mortal107",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 2,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: None,
                                        docs: [],
                                    },
                                ],
                                index: 107,
                                docs: [],
                            },
                            Variant {
                                name: "Mortal108",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 2,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: None,
                                        docs: [],
                                    },
                                ],
                                index: 108,
                                docs: [],
                            },
                            Variant {
                                name: "Mortal109",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 2,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: None,
                                        docs: [],
                                    },
                                ],
                                index: 109,
                                docs: [],
                            },
                            Variant {
                                name: "Mortal110",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 2,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: None,
                                        docs: [],
                                    },
                                ],
                                index: 110,
                                docs: [],
                            },
                            Variant {
                                name: "Mortal111",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 2,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: None,
                                        docs: [],
                                    },
                                ],
                                index: 111,
                                docs: [],
                            },
                            Variant {
                                name: "Mortal112",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 2,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: None,
                                        docs: [],
                                    },
                                ],
                                index: 112,
                                docs: [],
                            },
                            Variant {
                                name: "Mortal113",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 2,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: None,
                                        docs: [],
                                    },
                                ],
                                index: 113,
                                docs: [],
                            },
                            Variant {
                                name: "Mortal114",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 2,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: None,
                                        docs: [],
                                    },
                                ],
                                index: 114,
                                docs: [],
                            },
                            Variant {
                                name: "Mortal115",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 2,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: None,
                                        docs: [],
                                    },
                                ],
                                index: 115,
                                docs: [],
                            },
                            Variant {
                                name: "Mortal116",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 2,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: None,
                                        docs: [],
                                    },
                                ],
                                index: 116,
                                docs: [],
                            },
                            Variant {
                                name: "Mortal117",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 2,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: None,
                                        docs: [],
                                    },
                                ],
                                index: 117,
                                docs: [],
                            },
                            Variant {
                                name: "Mortal118",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 2,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: None,
                                        docs: [],
                                    },
                                ],
                                index: 118,
                                docs: [],
                            },
                            Variant {
                                name: "Mortal119",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 2,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: None,
                                        docs: [],
                                    },
                                ],
                                index: 119,
                                docs: [],
                            },
                            Variant {
                                name: "Mortal120",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 2,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: None,
                                        docs: [],
                                    },
                                ],
                                index: 120,
                                docs: [],
                            },
                            Variant {
                                name: "Mortal121",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 2,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: None,
                                        docs: [],
                                    },
                                ],
                                index: 121,
                                docs: [],
                            },
                            Variant {
                                name: "Mortal122",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 2,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: None,
                                        docs: [],
                                    },
                                ],
                                index: 122,
                                docs: [],
                            },
                            Variant {
                                name: "Mortal123",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 2,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: None,
                                        docs: [],
                                    },
                                ],
                                index: 123,
                                docs: [],
                            },
                            Variant {
                                name: "Mortal124",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 2,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: None,
                                        docs: [],
                                    },
                                ],
                                index: 124,
                                docs: [],
                            },
                            Variant {
                                name: "Mortal125",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 2,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: None,
                                        docs: [],
                                    },
                                ],
                                index: 125,
                                docs: [],
                            },
                            Variant {
                                name: "Mortal126",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 2,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: None,
                                        docs: [],
                                    },
                                ],
                                index: 126,
                                docs: [],
                            },
                            Variant {
                                name: "Mortal127",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 2,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: None,
                                        docs: [],
                                    },
                                ],
                                index: 127,
                                docs: [],
                            },
                            Variant {
                                name: "Mortal128",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 2,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: None,
                                        docs: [],
                                    },
                                ],
                                index: 128,
                                docs: [],
                            },
                            Variant {
                                name: "Mortal129",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 2,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: None,
                                        docs: [],
                                    },
                                ],
                                index: 129,
                                docs: [],
                            },
                            Variant {
                                name: "Mortal130",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 2,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: None,
                                        docs: [],
                                    },
                                ],
                                index: 130,
                                docs: [],
                            },
                            Variant {
                                name: "Mortal131",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 2,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: None,
                                        docs: [],
                                    },
                                ],
                                index: 131,
                                docs: [],
                            },
                            Variant {
                                name: "Mortal132",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 2,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: None,
                                        docs: [],
                                    },
                                ],
                                index: 132,
                                docs: [],
                            },
                            Variant {
                                name: "Mortal133",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 2,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: None,
                                        docs: [],
                                    },
                                ],
                                index: 133,
                                docs: [],
                            },
                            Variant {
                                name: "Mortal134",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 2,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: None,
                                        docs: [],
                                    },
                                ],
                                index: 134,
                                docs: [],
                            },
                            Variant {
                                name: "Mortal135",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 2,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: None,
                                        docs: [],
                                    },
                                ],
                                index: 135,
                                docs: [],
                            },
                            Variant {
                                name: "Mortal136",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 2,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: None,
                                        docs: [],
                                    },
                                ],
                                index: 136,
                                docs: [],
                            },
                            Variant {
                                name: "Mortal137",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 2,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: None,
                                        docs: [],
                                    },
                                ],
                                index: 137,
                                docs: [],
                            },
                            Variant {
                                name: "Mortal138",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 2,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: None,
                                        docs: [],
                                    },
                                ],
                                index: 138,
                                docs: [],
                            },
                            Variant {
                                name: "Mortal139",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 2,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: None,
                                        docs: [],
                                    },
                                ],
                                index: 139,
                                docs: [],
                            },
                            Variant {
                                name: "Mortal140",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 2,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: None,
                                        docs: [],
                                    },
                                ],
                                index: 140,
                                docs: [],
                            },
                            Variant {
                                name: "Mortal141",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 2,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: None,
                                        docs: [],
                                    },
                                ],
                                index: 141,
                                docs: [],
                            },
                            Variant {
                                name: "Mortal142",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 2,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: None,
                                        docs: [],
                                    },
                                ],
                                index: 142,
                                docs: [],
                            },
                            Variant {
                                name: "Mortal143",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 2,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: None,
                                        docs: [],
                                    },
                                ],
                                index: 143,
                                docs: [],
                            },
                            Variant {
                                name: "Mortal144",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 2,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: None,
                                        docs: [],
                                    },
                                ],
                                index: 144,
                                docs: [],
                            },
                            Variant {
                                name: "Mortal145",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 2,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: None,
                                        docs: [],
                                    },
                                ],
                                index: 145,
                                docs: [],
                            },
                            Variant {
                                name: "Mortal146",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 2,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: None,
                                        docs: [],
                                    },
                                ],
                                index: 146,
                                docs: [],
                            },
                            Variant {
                                name: "Mortal147",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 2,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: None,
                                        docs: [],
                                    },
                                ],
                                index: 147,
                                docs: [],
                            },
                            Variant {
                                name: "Mortal148",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 2,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: None,
                                        docs: [],
                                    },
                                ],
                                index: 148,
                                docs: [],
                            },
                            Variant {
                                name: "Mortal149",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 2,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: None,
                                        docs: [],
                                    },
                                ],
                                index: 149,
                                docs: [],
                            },
                            Variant {
                                name: "Mortal150",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 2,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: None,
                                        docs: [],
                                    },
                                ],
                                index: 150,
                                docs: [],
                            },
                            Variant {
                                name: "Mortal151",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 2,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: None,
                                        docs: [],
                                    },
                                ],
                                index: 151,
                                docs: [],
                            },
                            Variant {
                                name: "Mortal152",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 2,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: None,
                                        docs: [],
                                    },
                                ],
                                index: 152,
                                docs: [],
                            },
                            Variant {
                                name: "Mortal153",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 2,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: None,
                                        docs: [],
                                    },
                                ],
                                index: 153,
                                docs: [],
                            },
                            Variant {
                                name: "Mortal154",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 2,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: None,
                                        docs: [],
                                    },
                                ],
                                index: 154,
                                docs: [],
                            },
                            Variant {
                                name: "Mortal155",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 2,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: None,
                                        docs: [],
                                    },
                                ],
                                index: 155,
                                docs: [],
                            },
                            Variant {
                                name: "Mortal156",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 2,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: None,
                                        docs: [],
                                    },
                                ],
                                index: 156,
                                docs: [],
                            },
                            Variant {
                                name: "Mortal157",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 2,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: None,
                                        docs: [],
                                    },
                                ],
                                index: 157,
                                docs: [],
                            },
                            Variant {
                                name: "Mortal158",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 2,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: None,
                                        docs: [],
                                    },
                                ],
                                index: 158,
                                docs: [],
                            },
                            Variant {
                                name: "Mortal159",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 2,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: None,
                                        docs: [],
                                    },
                                ],
                                index: 159,
                                docs: [],
                            },
                            Variant {
                                name: "Mortal160",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 2,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: None,
                                        docs: [],
                                    },
                                ],
                                index: 160,
                                docs: [],
                            },
                            Variant {
                                name: "Mortal161",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 2,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: None,
                                        docs: [],
                                    },
                                ],
                                index: 161,
                                docs: [],
                            },
                            Variant {
                                name: "Mortal162",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 2,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: None,
                                        docs: [],
                                    },
                                ],
                                index: 162,
                                docs: [],
                            },
                            Variant {
                                name: "Mortal163",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 2,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: None,
                                        docs: [],
                                    },
                                ],
                                index: 163,
                                docs: [],
                            },
                            Variant {
                                name: "Mortal164",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 2,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: None,
                                        docs: [],
                                    },
                                ],
                                index: 164,
                                docs: [],
                            },
                            Variant {
                                name: "Mortal165",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 2,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: None,
                                        docs: [],
                                    },
                                ],
                                index: 165,
                                docs: [],
                            },
                            Variant {
                                name: "Mortal166",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 2,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: None,
                                        docs: [],
                                    },
                                ],
                                index: 166,
                                docs: [],
                            },
                            Variant {
                                name: "Mortal167",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 2,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: None,
                                        docs: [],
                                    },
                                ],
                                index: 167,
                                docs: [],
                            },
                            Variant {
                                name: "Mortal168",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 2,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: None,
                                        docs: [],
                                    },
                                ],
                                index: 168,
                                docs: [],
                            },
                            Variant {
                                name: "Mortal169",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 2,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: None,
                                        docs: [],
                                    },
                                ],
                                index: 169,
                                docs: [],
                            },
                            Variant {
                                name: "Mortal170",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 2,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: None,
                                        docs: [],
                                    },
                                ],
                                index: 170,
                                docs: [],
                            },
                            Variant {
                                name: "Mortal171",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 2,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: None,
                                        docs: [],
                                    },
                                ],
                                index: 171,
                                docs: [],
                            },
                            Variant {
                                name: "Mortal172",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 2,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: None,
                                        docs: [],
                                    },
                                ],
                                index: 172,
                                docs: [],
                            },
                            Variant {
                                name: "Mortal173",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 2,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: None,
                                        docs: [],
                                    },
                                ],
                                index: 173,
                                docs: [],
                            },
                            Variant {
                                name: "Mortal174",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 2,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: None,
                                        docs: [],
                                    },
                                ],
                                index: 174,
                                docs: [],
                            },
                            Variant {
                                name: "Mortal175",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 2,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: None,
                                        docs: [],
                                    },
                                ],
                                index: 175,
                                docs: [],
                            },
                            Variant {
                                name: "Mortal176",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 2,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: None,
                                        docs: [],
                                    },
                                ],
                                index: 176,
                                docs: [],
                            },
                            Variant {
                                name: "Mortal177",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 2,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: None,
                                        docs: [],
                                    },
                                ],
                                index: 177,
                                docs: [],
                            },
                            Variant {
                                name: "Mortal178",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 2,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: None,
                                        docs: [],
                                    },
                                ],
                                index: 178,
                                docs: [],
                            },
                            Variant {
                                name: "Mortal179",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 2,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: None,
                                        docs: [],
                                    },
                                ],
                                index: 179,
                                docs: [],
                            },
                            Variant {
                                name: "Mortal180",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 2,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: None,
                                        docs: [],
                                    },
                                ],
                                index: 180,
                                docs: [],
                            },
                            Variant {
                                name: "Mortal181",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 2,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: None,
                                        docs: [],
                                    },
                                ],
                                index: 181,
                                docs: [],
                            },
                            Variant {
                                name: "Mortal182",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 2,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: None,
                                        docs: [],
                                    },
                                ],
                                index: 182,
                                docs: [],
                            },
                            Variant {
                                name: "Mortal183",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 2,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: None,
                                        docs: [],
                                    },
                                ],
                                index: 183,
                                docs: [],
                            },
                            Variant {
                                name: "Mortal184",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 2,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: None,
                                        docs: [],
                                    },
                                ],
                                index: 184,
                                docs: [],
                            },
                            Variant {
                                name: "Mortal185",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 2,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: None,
                                        docs: [],
                                    },
                                ],
                                index: 185,
                                docs: [],
                            },
                            Variant {
                                name: "Mortal186",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 2,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: None,
                                        docs: [],
                                    },
                                ],
                                index: 186,
                                docs: [],
                            },
                            Variant {
                                name: "Mortal187",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 2,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: None,
                                        docs: [],
                                    },
                                ],
                                index: 187,
                                docs: [],
                            },
                            Variant {
                                name: "Mortal188",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 2,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: None,
                                        docs: [],
                                    },
                                ],
                                index: 188,
                                docs: [],
                            },
                            Variant {
                                name: "Mortal189",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 2,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: None,
                                        docs: [],
                                    },
                                ],
                                index: 189,
                                docs: [],
                            },
                            Variant {
                                name: "Mortal190",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 2,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: None,
                                        docs: [],
                                    },
                                ],
                                index: 190,
                                docs: [],
                            },
                            Variant {
                                name: "Mortal191",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 2,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: None,
                                        docs: [],
                                    },
                                ],
                                index: 191,
                                docs: [],
                            },
                            Variant {
                                name: "Mortal192",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 2,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: None,
                                        docs: [],
                                    },
                                ],
                                index: 192,
                                docs: [],
                            },
                            Variant {
                                name: "Mortal193",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 2,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: None,
                                        docs: [],
                                    },
                                ],
                                index: 193,
                                docs: [],
                            },
                            Variant {
                                name: "Mortal194",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 2,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: None,
                                        docs: [],
                                    },
                                ],
                                index: 194,
                                docs: [],
                            },
                            Variant {
                                name: "Mortal195",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 2,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: None,
                                        docs: [],
                                    },
                                ],
                                index: 195,
                                docs: [],
                            },
                            Variant {
                                name: "Mortal196",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 2,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: None,
                                        docs: [],
                                    },
                                ],
                                index: 196,
                                docs: [],
                            },
                            Variant {
                                name: "Mortal197",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 2,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: None,
                                        docs: [],
                                    },
                                ],
                                index: 197,
                                docs: [],
                            },
                            Variant {
                                name: "Mortal198",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 2,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: None,
                                        docs: [],
                                    },
                                ],
                                index: 198,
                                docs: [],
                            },
                            Variant {
                                name: "Mortal199",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 2,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: None,
                                        docs: [],
                                    },
                                ],
                                index: 199,
                                docs: [],
                            },
                            Variant {
                                name: "Mortal200",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 2,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: None,
                                        docs: [],
                                    },
                                ],
                                index: 200,
                                docs: [],
                            },
                            Variant {
                                name: "Mortal201",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 2,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: None,
                                        docs: [],
                                    },
                                ],
                                index: 201,
                                docs: [],
                            },
                            Variant {
                                name: "Mortal202",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 2,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: None,
                                        docs: [],
                                    },
                                ],
                                index: 202,
                                docs: [],
                            },
                            Variant {
                                name: "Mortal203",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 2,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: None,
                                        docs: [],
                                    },
                                ],
                                index: 203,
                                docs: [],
                            },
                            Variant {
                                name: "Mortal204",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 2,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: None,
                                        docs: [],
                                    },
                                ],
                                index: 204,
                                docs: [],
                            },
                            Variant {
                                name: "Mortal205",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 2,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: None,
                                        docs: [],
                                    },
                                ],
                                index: 205,
                                docs: [],
                            },
                            Variant {
                                name: "Mortal206",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 2,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: None,
                                        docs: [],
                                    },
                                ],
                                index: 206,
                                docs: [],
                            },
                            Variant {
                                name: "Mortal207",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 2,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: None,
                                        docs: [],
                                    },
                                ],
                                index: 207,
                                docs: [],
                            },
                            Variant {
                                name: "Mortal208",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 2,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: None,
                                        docs: [],
                                    },
                                ],
                                index: 208,
                                docs: [],
                            },
                            Variant {
                                name: "Mortal209",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 2,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: None,
                                        docs: [],
                                    },
                                ],
                                index: 209,
                                docs: [],
                            },
                            Variant {
                                name: "Mortal210",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 2,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: None,
                                        docs: [],
                                    },
                                ],
                                index: 210,
                                docs: [],
                            },
                            Variant {
                                name: "Mortal211",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 2,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: None,
                                        docs: [],
                                    },
                                ],
                                index: 211,
                                docs: [],
                            },
                            Variant {
                                name: "Mortal212",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 2,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: None,
                                        docs: [],
                                    },
                                ],
                                index: 212,
                                docs: [],
                            },
                            Variant {
                                name: "Mortal213",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 2,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: None,
                                        docs: [],
                                    },
                                ],
                                index: 213,
                                docs: [],
                            },
                            Variant {
                                name: "Mortal214",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 2,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: None,
                                        docs: [],
                                    },
                                ],
                                index: 214,
                                docs: [],
                            },
                            Variant {
                                name: "Mortal215",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 2,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: None,
                                        docs: [],
                                    },
                                ],
                                index: 215,
                                docs: [],
                            },
                            Variant {
                                name: "Mortal216",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 2,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: None,
                                        docs: [],
                                    },
                                ],
                                index: 216,
                                docs: [],
                            },
                            Variant {
                                name: "Mortal217",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 2,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: None,
                                        docs: [],
                                    },
                                ],
                                index: 217,
                                docs: [],
                            },
                            Variant {
                                name: "Mortal218",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 2,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: None,
                                        docs: [],
                                    },
                                ],
                                index: 218,
                                docs: [],
                            },
                            Variant {
                                name: "Mortal219",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 2,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: None,
                                        docs: [],
                                    },
                                ],
                                index: 219,
                                docs: [],
                            },
                            Variant {
                                name: "Mortal220",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 2,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: None,
                                        docs: [],
                                    },
                                ],
                                index: 220,
                                docs: [],
                            },
                            Variant {
                                name: "Mortal221",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 2,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: None,
                                        docs: [],
                                    },
                                ],
                                index: 221,
                                docs: [],
                            },
                            Variant {
                                name: "Mortal222",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 2,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: None,
                                        docs: [],
                                    },
                                ],
                                index: 222,
                                docs: [],
                            },
                            Variant {
                                name: "Mortal223",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 2,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: None,
                                        docs: [],
                                    },
                                ],
                                index: 223,
                                docs: [],
                            },
                            Variant {
                                name: "Mortal224",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 2,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: None,
                                        docs: [],
                                    },
                                ],
                                index: 224,
                                docs: [],
                            },
                            Variant {
                                name: "Mortal225",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 2,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: None,
                                        docs: [],
                                    },
                                ],
                                index: 225,
                                docs: [],
                            },
                            Variant {
                                name: "Mortal226",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 2,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: None,
                                        docs: [],
                                    },
                                ],
                                index: 226,
                                docs: [],
                            },
                            Variant {
                                name: "Mortal227",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 2,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: None,
                                        docs: [],
                                    },
                                ],
                                index: 227,
                                docs: [],
                            },
                            Variant {
                                name: "Mortal228",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 2,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: None,
                                        docs: [],
                                    },
                                ],
                                index: 228,
                                docs: [],
                            },
                            Variant {
                                name: "Mortal229",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 2,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: None,
                                        docs: [],
                                    },
                                ],
                                index: 229,
                                docs: [],
                            },
                            Variant {
                                name: "Mortal230",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 2,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: None,
                                        docs: [],
                                    },
                                ],
                                index: 230,
                                docs: [],
                            },
                            Variant {
                                name: "Mortal231",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 2,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: None,
                                        docs: [],
                                    },
                                ],
                                index: 231,
                                docs: [],
                            },
                            Variant {
                                name: "Mortal232",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 2,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: None,
                                        docs: [],
                                    },
                                ],
                                index: 232,
                                docs: [],
                            },
                            Variant {
                                name: "Mortal233",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 2,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: None,
                                        docs: [],
                                    },
                                ],
                                index: 233,
                                docs: [],
                            },
                            Variant {
                                name: "Mortal234",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 2,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: None,
                                        docs: [],
                                    },
                                ],
                                index: 234,
                                docs: [],
                            },
                            Variant {
                                name: "Mortal235",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 2,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: None,
                                        docs: [],
                                    },
                                ],
                                index: 235,
                                docs: [],
                            },
                            Variant {
                                name: "Mortal236",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 2,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: None,
                                        docs: [],
                                    },
                                ],
                                index: 236,
                                docs: [],
                            },
                            Variant {
                                name: "Mortal237",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 2,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: None,
                                        docs: [],
                                    },
                                ],
                                index: 237,
                                docs: [],
                            },
                            Variant {
                                name: "Mortal238",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 2,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: None,
                                        docs: [],
                                    },
                                ],
                                index: 238,
                                docs: [],
                            },
                            Variant {
                                name: "Mortal239",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 2,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: None,
                                        docs: [],
                                    },
                                ],
                                index: 239,
                                docs: [],
                            },
                            Variant {
                                name: "Mortal240",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 2,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: None,
                                        docs: [],
                                    },
                                ],
                                index: 240,
                                docs: [],
                            },
                            Variant {
                                name: "Mortal241",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 2,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: None,
                                        docs: [],
                                    },
                                ],
                                index: 241,
                                docs: [],
                            },
                            Variant {
                                name: "Mortal242",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 2,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: None,
                                        docs: [],
                                    },
                                ],
                                index: 242,
                                docs: [],
                            },
                            Variant {
                                name: "Mortal243",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 2,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: None,
                                        docs: [],
                                    },
                                ],
                                index: 243,
                                docs: [],
                            },
                            Variant {
                                name: "Mortal244",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 2,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: None,
                                        docs: [],
                                    },
                                ],
                                index: 244,
                                docs: [],
                            },
                            Variant {
                                name: "Mortal245",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 2,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: None,
                                        docs: [],
                                    },
                                ],
                                index: 245,
                                docs: [],
                            },
                            Variant {
                                name: "Mortal246",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 2,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: None,
                                        docs: [],
                                    },
                                ],
                                index: 246,
                                docs: [],
                            },
                            Variant {
                                name: "Mortal247",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 2,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: None,
                                        docs: [],
                                    },
                                ],
                                index: 247,
                                docs: [],
                            },
                            Variant {
                                name: "Mortal248",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 2,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: None,
                                        docs: [],
                                    },
                                ],
                                index: 248,
                                docs: [],
                            },
                            Variant {
                                name: "Mortal249",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 2,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: None,
                                        docs: [],
                                    },
                                ],
                                index: 249,
                                docs: [],
                            },
                            Variant {
                                name: "Mortal250",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 2,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: None,
                                        docs: [],
                                    },
                                ],
                                index: 250,
                                docs: [],
                            },
                            Variant {
                                name: "Mortal251",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 2,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: None,
                                        docs: [],
                                    },
                                ],
                                index: 251,
                                docs: [],
                            },
                            Variant {
                                name: "Mortal252",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 2,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: None,
                                        docs: [],
                                    },
                                ],
                                index: 252,
                                docs: [],
                            },
                            Variant {
                                name: "Mortal253",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 2,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: None,
                                        docs: [],
                                    },
                                ],
                                index: 253,
                                docs: [],
                            },
                            Variant {
                                name: "Mortal254",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 2,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: None,
                                        docs: [],
                                    },
                                ],
                                index: 254,
                                docs: [],
                            },
                            Variant {
                                name: "Mortal255",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 2,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: None,
                                        docs: [],
                                    },
                                ],
                                index: 255,
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 830,
            ty: Type {
                path: Path {
                    segments: [
                        "frame_system",
                        "extensions",
                        "check_nonce",
                        "CheckNonce",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "T",
                        ty: None,
                    },
                ],
                type_def: Composite(
                    TypeDefComposite {
                        fields: [
                            Field {
                                name: None,
                                ty: UntrackedSymbol {
                                    id: 91,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "T::Index",
                                ),
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 831,
            ty: Type {
                path: Path {
                    segments: [
                        "frame_system",
                        "extensions",
                        "check_weight",
                        "CheckWeight",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "T",
                        ty: None,
                    },
                ],
                type_def: Composite(
                    TypeDefComposite {
                        fields: [],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 832,
            ty: Type {
                path: Path {
                    segments: [
                        "pallet_transaction_payment",
                        "ChargeTransactionPayment",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "T",
                        ty: None,
                    },
                ],
                type_def: Composite(
                    TypeDefComposite {
                        fields: [
                            Field {
                                name: None,
                                ty: UntrackedSymbol {
                                    id: 60,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "BalanceOf<T>",
                                ),
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 833,
            ty: Type {
                path: Path {
                    segments: [
                        "polkadot_runtime_common",
                        "claims",
                        "PrevalidateAttests",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "T",
                        ty: None,
                    },
                ],
                type_def: Composite(
                    TypeDefComposite {
                        fields: [],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 834,
            ty: Type {
                path: Path {
                    segments: [
                        "polkadot_runtime",
                        "Runtime",
                    ],
                },
                type_params: [],
                type_def: Composite(
                    TypeDefComposite {
                        fields: [],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 835,
            ty: Type {
                path: Path {
                    segments: [
                        "sp_runtime",
                        "generic",
                        "block",
                        "Block",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "Header",
                        ty: Some(
                            UntrackedSymbol {
                                id: 89,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ),
                    },
                    TypeParameter {
                        name: "Extrinsic",
                        ty: Some(
                            UntrackedSymbol {
                                id: 836,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ),
                    },
                ],
                type_def: Composite(
                    TypeDefComposite {
                        fields: [
                            Field {
                                name: Some(
                                    "header",
                                ),
                                ty: UntrackedSymbol {
                                    id: 89,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "Header",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "extrinsics",
                                ),
                                ty: UntrackedSymbol {
                                    id: 837,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "Vec<Extrinsic>",
                                ),
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 836,
            ty: Type {
                path: Path {
                    segments: [
                        "sp_runtime",
                        "generic",
                        "unchecked_extrinsic",
                        "UncheckedExtrinsic",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "Address",
                        ty: Some(
                            UntrackedSymbol {
                                id: 100,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ),
                    },
                    TypeParameter {
                        name: "Call",
                        ty: Some(
                            UntrackedSymbol {
                                id: 79,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ),
                    },
                    TypeParameter {
                        name: "Signature",
                        ty: Some(
                            UntrackedSymbol {
                                id: 367,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ),
                    },
                    TypeParameter {
                        name: "Extra",
                        ty: Some(
                            UntrackedSymbol {
                                id: 823,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ),
                    },
                ],
                type_def: Composite(
                    TypeDefComposite {
                        fields: [
                            Field {
                                name: None,
                                ty: UntrackedSymbol {
                                    id: 13,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: None,
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 837,
            ty: Type {
                path: Path {
                    segments: [],
                },
                type_params: [],
                type_def: Sequence(
                    TypeDefSequence {
                        type_param: UntrackedSymbol {
                            id: 836,
                            marker: PhantomData<fn() -> core::any::TypeId>,
                        },
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 838,
            ty: Type {
                path: Path {
                    segments: [
                        "sp_core",
                        "OpaqueMetadata",
                    ],
                },
                type_params: [],
                type_def: Composite(
                    TypeDefComposite {
                        fields: [
                            Field {
                                name: None,
                                ty: UntrackedSymbol {
                                    id: 13,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "Vec<u8>",
                                ),
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 839,
            ty: Type {
                path: Path {
                    segments: [
                        "Option",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "T",
                        ty: Some(
                            UntrackedSymbol {
                                id: 838,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ),
                    },
                ],
                type_def: Variant(
                    TypeDefVariant {
                        variants: [
                            Variant {
                                name: "None",
                                fields: [],
                                index: 0,
                                docs: [],
                            },
                            Variant {
                                name: "Some",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 838,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: None,
                                        docs: [],
                                    },
                                ],
                                index: 1,
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 840,
            ty: Type {
                path: Path {
                    segments: [
                        "Result",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "T",
                        ty: Some(
                            UntrackedSymbol {
                                id: 33,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ),
                    },
                    TypeParameter {
                        name: "E",
                        ty: Some(
                            UntrackedSymbol {
                                id: 841,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ),
                    },
                ],
                type_def: Variant(
                    TypeDefVariant {
                        variants: [
                            Variant {
                                name: "Ok",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 33,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: None,
                                        docs: [],
                                    },
                                ],
                                index: 0,
                                docs: [],
                            },
                            Variant {
                                name: "Err",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 841,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: None,
                                        docs: [],
                                    },
                                ],
                                index: 1,
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 841,
            ty: Type {
                path: Path {
                    segments: [
                        "sp_runtime",
                        "transaction_validity",
                        "TransactionValidityError",
                    ],
                },
                type_params: [],
                type_def: Variant(
                    TypeDefVariant {
                        variants: [
                            Variant {
                                name: "Invalid",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 842,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "InvalidTransaction",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 0,
                                docs: [],
                            },
                            Variant {
                                name: "Unknown",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 843,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "UnknownTransaction",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 1,
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 842,
            ty: Type {
                path: Path {
                    segments: [
                        "sp_runtime",
                        "transaction_validity",
                        "InvalidTransaction",
                    ],
                },
                type_params: [],
                type_def: Variant(
                    TypeDefVariant {
                        variants: [
                            Variant {
                                name: "Call",
                                fields: [],
                                index: 0,
                                docs: [],
                            },
                            Variant {
                                name: "Payment",
                                fields: [],
                                index: 1,
                                docs: [],
                            },
                            Variant {
                                name: "Future",
                                fields: [],
                                index: 2,
                                docs: [],
                            },
                            Variant {
                                name: "Stale",
                                fields: [],
                                index: 3,
                                docs: [],
                            },
                            Variant {
                                name: "BadProof",
                                fields: [],
                                index: 4,
                                docs: [],
                            },
                            Variant {
                                name: "AncientBirthBlock",
                                fields: [],
                                index: 5,
                                docs: [],
                            },
                            Variant {
                                name: "ExhaustsResources",
                                fields: [],
                                index: 6,
                                docs: [],
                            },
                            Variant {
                                name: "Custom",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 2,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "u8",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 7,
                                docs: [],
                            },
                            Variant {
                                name: "BadMandatory",
                                fields: [],
                                index: 8,
                                docs: [],
                            },
                            Variant {
                                name: "MandatoryValidation",
                                fields: [],
                                index: 9,
                                docs: [],
                            },
                            Variant {
                                name: "BadSigner",
                                fields: [],
                                index: 10,
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 843,
            ty: Type {
                path: Path {
                    segments: [
                        "sp_runtime",
                        "transaction_validity",
                        "UnknownTransaction",
                    ],
                },
                type_params: [],
                type_def: Variant(
                    TypeDefVariant {
                        variants: [
                            Variant {
                                name: "CannotLookup",
                                fields: [],
                                index: 0,
                                docs: [],
                            },
                            Variant {
                                name: "NoUnsignedValidator",
                                fields: [],
                                index: 1,
                                docs: [],
                            },
                            Variant {
                                name: "Custom",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 2,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "u8",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 2,
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 844,
            ty: Type {
                path: Path {
                    segments: [
                        "sp_inherents",
                        "InherentData",
                    ],
                },
                type_params: [],
                type_def: Composite(
                    TypeDefComposite {
                        fields: [
                            Field {
                                name: Some(
                                    "data",
                                ),
                                ty: UntrackedSymbol {
                                    id: 845,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "BTreeMap<InherentIdentifier, Vec<u8>>",
                                ),
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 845,
            ty: Type {
                path: Path {
                    segments: [
                        "BTreeMap",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "K",
                        ty: Some(
                            UntrackedSymbol {
                                id: 194,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ),
                    },
                    TypeParameter {
                        name: "V",
                        ty: Some(
                            UntrackedSymbol {
                                id: 13,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ),
                    },
                ],
                type_def: Composite(
                    TypeDefComposite {
                        fields: [
                            Field {
                                name: None,
                                ty: UntrackedSymbol {
                                    id: 846,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: None,
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 846,
            ty: Type {
                path: Path {
                    segments: [],
                },
                type_params: [],
                type_def: Sequence(
                    TypeDefSequence {
                        type_param: UntrackedSymbol {
                            id: 847,
                            marker: PhantomData<fn() -> core::any::TypeId>,
                        },
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 847,
            ty: Type {
                path: Path {
                    segments: [],
                },
                type_params: [],
                type_def: Tuple(
                    TypeDefTuple {
                        fields: [
                            UntrackedSymbol {
                                id: 194,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                            UntrackedSymbol {
                                id: 13,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 848,
            ty: Type {
                path: Path {
                    segments: [
                        "sp_inherents",
                        "CheckInherentsResult",
                    ],
                },
                type_params: [],
                type_def: Composite(
                    TypeDefComposite {
                        fields: [
                            Field {
                                name: Some(
                                    "okay",
                                ),
                                ty: UntrackedSymbol {
                                    id: 44,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "bool",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "fatal_error",
                                ),
                                ty: UntrackedSymbol {
                                    id: 44,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "bool",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "errors",
                                ),
                                ty: UntrackedSymbol {
                                    id: 844,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "InherentData",
                                ),
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 849,
            ty: Type {
                path: Path {
                    segments: [
                        "sp_runtime",
                        "transaction_validity",
                        "TransactionSource",
                    ],
                },
                type_params: [],
                type_def: Variant(
                    TypeDefVariant {
                        variants: [
                            Variant {
                                name: "InBlock",
                                fields: [],
                                index: 0,
                                docs: [],
                            },
                            Variant {
                                name: "Local",
                                fields: [],
                                index: 1,
                                docs: [],
                            },
                            Variant {
                                name: "External",
                                fields: [],
                                index: 2,
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 850,
            ty: Type {
                path: Path {
                    segments: [
                        "Result",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "T",
                        ty: Some(
                            UntrackedSymbol {
                                id: 851,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ),
                    },
                    TypeParameter {
                        name: "E",
                        ty: Some(
                            UntrackedSymbol {
                                id: 841,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ),
                    },
                ],
                type_def: Variant(
                    TypeDefVariant {
                        variants: [
                            Variant {
                                name: "Ok",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 851,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: None,
                                        docs: [],
                                    },
                                ],
                                index: 0,
                                docs: [],
                            },
                            Variant {
                                name: "Err",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 841,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: None,
                                        docs: [],
                                    },
                                ],
                                index: 1,
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 851,
            ty: Type {
                path: Path {
                    segments: [
                        "sp_runtime",
                        "transaction_validity",
                        "ValidTransaction",
                    ],
                },
                type_params: [],
                type_def: Composite(
                    TypeDefComposite {
                        fields: [
                            Field {
                                name: Some(
                                    "priority",
                                ),
                                ty: UntrackedSymbol {
                                    id: 11,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "TransactionPriority",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "requires",
                                ),
                                ty: UntrackedSymbol {
                                    id: 83,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "Vec<TransactionTag>",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "provides",
                                ),
                                ty: UntrackedSymbol {
                                    id: 83,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "Vec<TransactionTag>",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "longevity",
                                ),
                                ty: UntrackedSymbol {
                                    id: 11,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "TransactionLongevity",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "propagate",
                                ),
                                ty: UntrackedSymbol {
                                    id: 44,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "bool",
                                ),
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 852,
            ty: Type {
                path: Path {
                    segments: [],
                },
                type_params: [],
                type_def: Tuple(
                    TypeDefTuple {
                        fields: [
                            UntrackedSymbol {
                                id: 729,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                            UntrackedSymbol {
                                id: 853,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 853,
            ty: Type {
                path: Path {
                    segments: [
                        "polkadot_primitives",
                        "v5",
                        "GroupRotationInfo",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "N",
                        ty: Some(
                            UntrackedSymbol {
                                id: 4,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ),
                    },
                ],
                type_def: Composite(
                    TypeDefComposite {
                        fields: [
                            Field {
                                name: Some(
                                    "session_start_block",
                                ),
                                ty: UntrackedSymbol {
                                    id: 4,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "N",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "group_rotation_frequency",
                                ),
                                ty: UntrackedSymbol {
                                    id: 4,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "N",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "now",
                                ),
                                ty: UntrackedSymbol {
                                    id: 4,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "N",
                                ),
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 854,
            ty: Type {
                path: Path {
                    segments: [],
                },
                type_params: [],
                type_def: Sequence(
                    TypeDefSequence {
                        type_param: UntrackedSymbol {
                            id: 855,
                            marker: PhantomData<fn() -> core::any::TypeId>,
                        },
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 855,
            ty: Type {
                path: Path {
                    segments: [
                        "polkadot_primitives",
                        "v5",
                        "CoreState",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "H",
                        ty: Some(
                            UntrackedSymbol {
                                id: 12,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ),
                    },
                    TypeParameter {
                        name: "N",
                        ty: Some(
                            UntrackedSymbol {
                                id: 4,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ),
                    },
                ],
                type_def: Variant(
                    TypeDefVariant {
                        variants: [
                            Variant {
                                name: "Occupied",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 856,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "OccupiedCore<H, N>",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 0,
                                docs: [],
                            },
                            Variant {
                                name: "Scheduled",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 858,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "ScheduledCore",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 1,
                                docs: [],
                            },
                            Variant {
                                name: "Free",
                                fields: [],
                                index: 2,
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 856,
            ty: Type {
                path: Path {
                    segments: [
                        "polkadot_primitives",
                        "v5",
                        "OccupiedCore",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "H",
                        ty: Some(
                            UntrackedSymbol {
                                id: 12,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ),
                    },
                    TypeParameter {
                        name: "N",
                        ty: Some(
                            UntrackedSymbol {
                                id: 4,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ),
                    },
                ],
                type_def: Composite(
                    TypeDefComposite {
                        fields: [
                            Field {
                                name: Some(
                                    "next_up_on_available",
                                ),
                                ty: UntrackedSymbol {
                                    id: 857,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "Option<ScheduledCore>",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "occupied_since",
                                ),
                                ty: UntrackedSymbol {
                                    id: 4,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "N",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "time_out_at",
                                ),
                                ty: UntrackedSymbol {
                                    id: 4,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "N",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "next_up_on_time_out",
                                ),
                                ty: UntrackedSymbol {
                                    id: 857,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "Option<ScheduledCore>",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "availability",
                                ),
                                ty: UntrackedSymbol {
                                    id: 318,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "BitVec<u8, bitvec::order::Lsb0>",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "group_responsible",
                                ),
                                ty: UntrackedSymbol {
                                    id: 461,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "GroupIndex",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "candidate_hash",
                                ),
                                ty: UntrackedSymbol {
                                    id: 341,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "CandidateHash",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "candidate_descriptor",
                                ),
                                ty: UntrackedSymbol {
                                    id: 325,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "CandidateDescriptor<H>",
                                ),
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 857,
            ty: Type {
                path: Path {
                    segments: [
                        "Option",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "T",
                        ty: Some(
                            UntrackedSymbol {
                                id: 858,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ),
                    },
                ],
                type_def: Variant(
                    TypeDefVariant {
                        variants: [
                            Variant {
                                name: "None",
                                fields: [],
                                index: 0,
                                docs: [],
                            },
                            Variant {
                                name: "Some",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 858,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: None,
                                        docs: [],
                                    },
                                ],
                                index: 1,
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 858,
            ty: Type {
                path: Path {
                    segments: [
                        "polkadot_primitives",
                        "v5",
                        "ScheduledCore",
                    ],
                },
                type_params: [],
                type_def: Composite(
                    TypeDefComposite {
                        fields: [
                            Field {
                                name: Some(
                                    "para_id",
                                ),
                                ty: UntrackedSymbol {
                                    id: 158,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "Id",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "collator",
                                ),
                                ty: UntrackedSymbol {
                                    id: 859,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "Option<CollatorId>",
                                ),
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 859,
            ty: Type {
                path: Path {
                    segments: [
                        "Option",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "T",
                        ty: Some(
                            UntrackedSymbol {
                                id: 326,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ),
                    },
                ],
                type_def: Variant(
                    TypeDefVariant {
                        variants: [
                            Variant {
                                name: "None",
                                fields: [],
                                index: 0,
                                docs: [],
                            },
                            Variant {
                                name: "Some",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 326,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: None,
                                        docs: [],
                                    },
                                ],
                                index: 1,
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 860,
            ty: Type {
                path: Path {
                    segments: [
                        "polkadot_primitives",
                        "v5",
                        "OccupiedCoreAssumption",
                    ],
                },
                type_params: [],
                type_def: Variant(
                    TypeDefVariant {
                        variants: [
                            Variant {
                                name: "Included",
                                fields: [],
                                index: 0,
                                docs: [],
                            },
                            Variant {
                                name: "TimedOut",
                                fields: [],
                                index: 1,
                                docs: [],
                            },
                            Variant {
                                name: "Free",
                                fields: [],
                                index: 2,
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 861,
            ty: Type {
                path: Path {
                    segments: [
                        "Option",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "T",
                        ty: Some(
                            UntrackedSymbol {
                                id: 862,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ),
                    },
                ],
                type_def: Variant(
                    TypeDefVariant {
                        variants: [
                            Variant {
                                name: "None",
                                fields: [],
                                index: 0,
                                docs: [],
                            },
                            Variant {
                                name: "Some",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 862,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: None,
                                        docs: [],
                                    },
                                ],
                                index: 1,
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 862,
            ty: Type {
                path: Path {
                    segments: [
                        "polkadot_primitives",
                        "v5",
                        "PersistedValidationData",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "H",
                        ty: Some(
                            UntrackedSymbol {
                                id: 12,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ),
                    },
                    TypeParameter {
                        name: "N",
                        ty: Some(
                            UntrackedSymbol {
                                id: 4,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ),
                    },
                ],
                type_def: Composite(
                    TypeDefComposite {
                        fields: [
                            Field {
                                name: Some(
                                    "parent_head",
                                ),
                                ty: UntrackedSymbol {
                                    id: 336,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "HeadData",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "relay_parent_number",
                                ),
                                ty: UntrackedSymbol {
                                    id: 4,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "N",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "relay_parent_storage_root",
                                ),
                                ty: UntrackedSymbol {
                                    id: 12,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "H",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "max_pov_size",
                                ),
                                ty: UntrackedSymbol {
                                    id: 4,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "u32",
                                ),
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 863,
            ty: Type {
                path: Path {
                    segments: [
                        "Option",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "T",
                        ty: Some(
                            UntrackedSymbol {
                                id: 864,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ),
                    },
                ],
                type_def: Variant(
                    TypeDefVariant {
                        variants: [
                            Variant {
                                name: "None",
                                fields: [],
                                index: 0,
                                docs: [],
                            },
                            Variant {
                                name: "Some",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 864,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: None,
                                        docs: [],
                                    },
                                ],
                                index: 1,
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 864,
            ty: Type {
                path: Path {
                    segments: [],
                },
                type_params: [],
                type_def: Tuple(
                    TypeDefTuple {
                        fields: [
                            UntrackedSymbol {
                                id: 862,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                            UntrackedSymbol {
                                id: 328,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 865,
            ty: Type {
                path: Path {
                    segments: [
                        "Option",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "T",
                        ty: Some(
                            UntrackedSymbol {
                                id: 324,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ),
                    },
                ],
                type_def: Variant(
                    TypeDefVariant {
                        variants: [
                            Variant {
                                name: "None",
                                fields: [],
                                index: 0,
                                docs: [],
                            },
                            Variant {
                                name: "Some",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 324,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: None,
                                        docs: [],
                                    },
                                ],
                                index: 1,
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 866,
            ty: Type {
                path: Path {
                    segments: [],
                },
                type_params: [],
                type_def: Sequence(
                    TypeDefSequence {
                        type_param: UntrackedSymbol {
                            id: 867,
                            marker: PhantomData<fn() -> core::any::TypeId>,
                        },
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 867,
            ty: Type {
                path: Path {
                    segments: [
                        "polkadot_primitives",
                        "v5",
                        "CandidateEvent",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "H",
                        ty: Some(
                            UntrackedSymbol {
                                id: 12,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ),
                    },
                ],
                type_def: Variant(
                    TypeDefVariant {
                        variants: [
                            Variant {
                                name: "CandidateBacked",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 459,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "CandidateReceipt<H>",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 336,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "HeadData",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 460,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "CoreIndex",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 461,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "GroupIndex",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 0,
                                docs: [],
                            },
                            Variant {
                                name: "CandidateIncluded",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 459,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "CandidateReceipt<H>",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 336,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "HeadData",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 460,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "CoreIndex",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 461,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "GroupIndex",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 1,
                                docs: [],
                            },
                            Variant {
                                name: "CandidateTimedOut",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 459,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "CandidateReceipt<H>",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 336,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "HeadData",
                                        ),
                                        docs: [],
                                    },
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 460,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "CoreIndex",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 2,
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 868,
            ty: Type {
                path: Path {
                    segments: [
                        "BTreeMap",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "K",
                        ty: Some(
                            UntrackedSymbol {
                                id: 158,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ),
                    },
                    TypeParameter {
                        name: "V",
                        ty: Some(
                            UntrackedSymbol {
                                id: 763,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ),
                    },
                ],
                type_def: Composite(
                    TypeDefComposite {
                        fields: [
                            Field {
                                name: None,
                                ty: UntrackedSymbol {
                                    id: 869,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: None,
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 869,
            ty: Type {
                path: Path {
                    segments: [],
                },
                type_params: [],
                type_def: Sequence(
                    TypeDefSequence {
                        type_param: UntrackedSymbol {
                            id: 870,
                            marker: PhantomData<fn() -> core::any::TypeId>,
                        },
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 870,
            ty: Type {
                path: Path {
                    segments: [],
                },
                type_params: [],
                type_def: Tuple(
                    TypeDefTuple {
                        fields: [
                            UntrackedSymbol {
                                id: 158,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                            UntrackedSymbol {
                                id: 763,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 871,
            ty: Type {
                path: Path {
                    segments: [
                        "Option",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "T",
                        ty: Some(
                            UntrackedSymbol {
                                id: 723,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ),
                    },
                ],
                type_def: Variant(
                    TypeDefVariant {
                        variants: [
                            Variant {
                                name: "None",
                                fields: [],
                                index: 0,
                                docs: [],
                            },
                            Variant {
                                name: "Some",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 723,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: None,
                                        docs: [],
                                    },
                                ],
                                index: 1,
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 872,
            ty: Type {
                path: Path {
                    segments: [
                        "Option",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "T",
                        ty: Some(
                            UntrackedSymbol {
                                id: 769,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ),
                    },
                ],
                type_def: Variant(
                    TypeDefVariant {
                        variants: [
                            Variant {
                                name: "None",
                                fields: [],
                                index: 0,
                                docs: [],
                            },
                            Variant {
                                name: "Some",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 769,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: None,
                                        docs: [],
                                    },
                                ],
                                index: 1,
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 873,
            ty: Type {
                path: Path {
                    segments: [
                        "Option",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "T",
                        ty: Some(
                            UntrackedSymbol {
                                id: 328,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ),
                    },
                ],
                type_def: Variant(
                    TypeDefVariant {
                        variants: [
                            Variant {
                                name: "None",
                                fields: [],
                                index: 0,
                                docs: [],
                            },
                            Variant {
                                name: "Some",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 328,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: None,
                                        docs: [],
                                    },
                                ],
                                index: 1,
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 874,
            ty: Type {
                path: Path {
                    segments: [],
                },
                type_params: [],
                type_def: Sequence(
                    TypeDefSequence {
                        type_param: UntrackedSymbol {
                            id: 875,
                            marker: PhantomData<fn() -> core::any::TypeId>,
                        },
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 875,
            ty: Type {
                path: Path {
                    segments: [],
                },
                type_params: [],
                type_def: Tuple(
                    TypeDefTuple {
                        fields: [
                            UntrackedSymbol {
                                id: 4,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                            UntrackedSymbol {
                                id: 341,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                            UntrackedSymbol {
                                id: 774,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 876,
            ty: Type {
                path: Path {
                    segments: [
                        "Option",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "T",
                        ty: Some(
                            UntrackedSymbol {
                                id: 306,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ),
                    },
                ],
                type_def: Variant(
                    TypeDefVariant {
                        variants: [
                            Variant {
                                name: "None",
                                fields: [],
                                index: 0,
                                docs: [],
                            },
                            Variant {
                                name: "Some",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 306,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: None,
                                        docs: [],
                                    },
                                ],
                                index: 1,
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 877,
            ty: Type {
                path: Path {
                    segments: [],
                },
                type_params: [],
                type_def: Sequence(
                    TypeDefSequence {
                        type_param: UntrackedSymbol {
                            id: 878,
                            marker: PhantomData<fn() -> core::any::TypeId>,
                        },
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 878,
            ty: Type {
                path: Path {
                    segments: [],
                },
                type_params: [],
                type_def: Tuple(
                    TypeDefTuple {
                        fields: [
                            UntrackedSymbol {
                                id: 4,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                            UntrackedSymbol {
                                id: 341,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                            UntrackedSymbol {
                                id: 777,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 879,
            ty: Type {
                path: Path {
                    segments: [
                        "Option",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "T",
                        ty: Some(
                            UntrackedSymbol {
                                id: 880,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ),
                    },
                ],
                type_def: Variant(
                    TypeDefVariant {
                        variants: [
                            Variant {
                                name: "None",
                                fields: [],
                                index: 0,
                                docs: [],
                            },
                            Variant {
                                name: "Some",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 880,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: None,
                                        docs: [],
                                    },
                                ],
                                index: 1,
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 880,
            ty: Type {
                path: Path {
                    segments: [
                        "polkadot_primitives",
                        "v5",
                        "slashing",
                        "OpaqueKeyOwnershipProof",
                    ],
                },
                type_params: [],
                type_def: Composite(
                    TypeDefComposite {
                        fields: [
                            Field {
                                name: None,
                                ty: UntrackedSymbol {
                                    id: 13,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "Vec<u8>",
                                ),
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 881,
            ty: Type {
                path: Path {
                    segments: [
                        "Option",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "T",
                        ty: Some(
                            UntrackedSymbol {
                                id: 34,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ),
                    },
                ],
                type_def: Variant(
                    TypeDefVariant {
                        variants: [
                            Variant {
                                name: "None",
                                fields: [],
                                index: 0,
                                docs: [],
                            },
                            Variant {
                                name: "Some",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 34,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: None,
                                        docs: [],
                                    },
                                ],
                                index: 1,
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 882,
            ty: Type {
                path: Path {
                    segments: [
                        "Option",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "T",
                        ty: Some(
                            UntrackedSymbol {
                                id: 883,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ),
                    },
                ],
                type_def: Variant(
                    TypeDefVariant {
                        variants: [
                            Variant {
                                name: "None",
                                fields: [],
                                index: 0,
                                docs: [],
                            },
                            Variant {
                                name: "Some",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 883,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: None,
                                        docs: [],
                                    },
                                ],
                                index: 1,
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 883,
            ty: Type {
                path: Path {
                    segments: [
                        "sp_consensus_beefy",
                        "ValidatorSet",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "AuthorityId",
                        ty: Some(
                            UntrackedSymbol {
                                id: 884,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ),
                    },
                ],
                type_def: Composite(
                    TypeDefComposite {
                        fields: [
                            Field {
                                name: Some(
                                    "validators",
                                ),
                                ty: UntrackedSymbol {
                                    id: 885,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "Vec<AuthorityId>",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "id",
                                ),
                                ty: UntrackedSymbol {
                                    id: 11,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "ValidatorSetId",
                                ),
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 884,
            ty: Type {
                path: Path {
                    segments: [
                        "sp_consensus_beefy",
                        "crypto",
                        "Public",
                    ],
                },
                type_params: [],
                type_def: Composite(
                    TypeDefComposite {
                        fields: [
                            Field {
                                name: None,
                                ty: UntrackedSymbol {
                                    id: 364,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "ecdsa::Public",
                                ),
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 885,
            ty: Type {
                path: Path {
                    segments: [],
                },
                type_params: [],
                type_def: Sequence(
                    TypeDefSequence {
                        type_param: UntrackedSymbol {
                            id: 884,
                            marker: PhantomData<fn() -> core::any::TypeId>,
                        },
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 886,
            ty: Type {
                path: Path {
                    segments: [
                        "sp_consensus_beefy",
                        "EquivocationProof",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "Number",
                        ty: Some(
                            UntrackedSymbol {
                                id: 4,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ),
                    },
                    TypeParameter {
                        name: "Id",
                        ty: Some(
                            UntrackedSymbol {
                                id: 884,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ),
                    },
                    TypeParameter {
                        name: "Signature",
                        ty: Some(
                            UntrackedSymbol {
                                id: 887,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ),
                    },
                ],
                type_def: Composite(
                    TypeDefComposite {
                        fields: [
                            Field {
                                name: Some(
                                    "first",
                                ),
                                ty: UntrackedSymbol {
                                    id: 888,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "VoteMessage<Number, Id, Signature>",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "second",
                                ),
                                ty: UntrackedSymbol {
                                    id: 888,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "VoteMessage<Number, Id, Signature>",
                                ),
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 887,
            ty: Type {
                path: Path {
                    segments: [
                        "sp_consensus_beefy",
                        "crypto",
                        "Signature",
                    ],
                },
                type_params: [],
                type_def: Composite(
                    TypeDefComposite {
                        fields: [
                            Field {
                                name: None,
                                ty: UntrackedSymbol {
                                    id: 368,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "ecdsa::Signature",
                                ),
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 888,
            ty: Type {
                path: Path {
                    segments: [
                        "sp_consensus_beefy",
                        "VoteMessage",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "Number",
                        ty: Some(
                            UntrackedSymbol {
                                id: 4,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ),
                    },
                    TypeParameter {
                        name: "Id",
                        ty: Some(
                            UntrackedSymbol {
                                id: 884,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ),
                    },
                    TypeParameter {
                        name: "Signature",
                        ty: Some(
                            UntrackedSymbol {
                                id: 887,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ),
                    },
                ],
                type_def: Composite(
                    TypeDefComposite {
                        fields: [
                            Field {
                                name: Some(
                                    "commitment",
                                ),
                                ty: UntrackedSymbol {
                                    id: 889,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "Commitment<Number>",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "id",
                                ),
                                ty: UntrackedSymbol {
                                    id: 884,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "Id",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "signature",
                                ),
                                ty: UntrackedSymbol {
                                    id: 887,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "Signature",
                                ),
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 889,
            ty: Type {
                path: Path {
                    segments: [
                        "sp_consensus_beefy",
                        "commitment",
                        "Commitment",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "TBlockNumber",
                        ty: Some(
                            UntrackedSymbol {
                                id: 4,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ),
                    },
                ],
                type_def: Composite(
                    TypeDefComposite {
                        fields: [
                            Field {
                                name: Some(
                                    "payload",
                                ),
                                ty: UntrackedSymbol {
                                    id: 890,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "Payload",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "block_number",
                                ),
                                ty: UntrackedSymbol {
                                    id: 4,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "TBlockNumber",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "validator_set_id",
                                ),
                                ty: UntrackedSymbol {
                                    id: 11,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "ValidatorSetId",
                                ),
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 890,
            ty: Type {
                path: Path {
                    segments: [
                        "sp_consensus_beefy",
                        "payload",
                        "Payload",
                    ],
                },
                type_params: [],
                type_def: Composite(
                    TypeDefComposite {
                        fields: [
                            Field {
                                name: None,
                                ty: UntrackedSymbol {
                                    id: 891,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "Vec<(BeefyPayloadId, Vec<u8>)>",
                                ),
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 891,
            ty: Type {
                path: Path {
                    segments: [],
                },
                type_params: [],
                type_def: Sequence(
                    TypeDefSequence {
                        type_param: UntrackedSymbol {
                            id: 892,
                            marker: PhantomData<fn() -> core::any::TypeId>,
                        },
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 892,
            ty: Type {
                path: Path {
                    segments: [],
                },
                type_params: [],
                type_def: Tuple(
                    TypeDefTuple {
                        fields: [
                            UntrackedSymbol {
                                id: 189,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                            UntrackedSymbol {
                                id: 13,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 893,
            ty: Type {
                path: Path {
                    segments: [
                        "sp_consensus_beefy",
                        "OpaqueKeyOwnershipProof",
                    ],
                },
                type_params: [],
                type_def: Composite(
                    TypeDefComposite {
                        fields: [
                            Field {
                                name: None,
                                ty: UntrackedSymbol {
                                    id: 13,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "Vec<u8>",
                                ),
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 894,
            ty: Type {
                path: Path {
                    segments: [
                        "Option",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "T",
                        ty: Some(
                            UntrackedSymbol {
                                id: 893,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ),
                    },
                ],
                type_def: Variant(
                    TypeDefVariant {
                        variants: [
                            Variant {
                                name: "None",
                                fields: [],
                                index: 0,
                                docs: [],
                            },
                            Variant {
                                name: "Some",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 893,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: None,
                                        docs: [],
                                    },
                                ],
                                index: 1,
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 895,
            ty: Type {
                path: Path {
                    segments: [
                        "Result",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "T",
                        ty: Some(
                            UntrackedSymbol {
                                id: 12,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ),
                    },
                    TypeParameter {
                        name: "E",
                        ty: Some(
                            UntrackedSymbol {
                                id: 896,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ),
                    },
                ],
                type_def: Variant(
                    TypeDefVariant {
                        variants: [
                            Variant {
                                name: "Ok",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 12,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: None,
                                        docs: [],
                                    },
                                ],
                                index: 0,
                                docs: [],
                            },
                            Variant {
                                name: "Err",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 896,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: None,
                                        docs: [],
                                    },
                                ],
                                index: 1,
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 896,
            ty: Type {
                path: Path {
                    segments: [
                        "sp_mmr_primitives",
                        "Error",
                    ],
                },
                type_params: [],
                type_def: Variant(
                    TypeDefVariant {
                        variants: [
                            Variant {
                                name: "InvalidNumericOp",
                                fields: [],
                                index: 0,
                                docs: [],
                            },
                            Variant {
                                name: "Push",
                                fields: [],
                                index: 1,
                                docs: [],
                            },
                            Variant {
                                name: "GetRoot",
                                fields: [],
                                index: 2,
                                docs: [],
                            },
                            Variant {
                                name: "Commit",
                                fields: [],
                                index: 3,
                                docs: [],
                            },
                            Variant {
                                name: "GenerateProof",
                                fields: [],
                                index: 4,
                                docs: [],
                            },
                            Variant {
                                name: "Verify",
                                fields: [],
                                index: 5,
                                docs: [],
                            },
                            Variant {
                                name: "LeafNotFound",
                                fields: [],
                                index: 6,
                                docs: [],
                            },
                            Variant {
                                name: "PalletNotIncluded",
                                fields: [],
                                index: 7,
                                docs: [],
                            },
                            Variant {
                                name: "InvalidLeafIndex",
                                fields: [],
                                index: 8,
                                docs: [],
                            },
                            Variant {
                                name: "InvalidBestKnownBlock",
                                fields: [],
                                index: 9,
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 897,
            ty: Type {
                path: Path {
                    segments: [
                        "Result",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "T",
                        ty: Some(
                            UntrackedSymbol {
                                id: 11,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ),
                    },
                    TypeParameter {
                        name: "E",
                        ty: Some(
                            UntrackedSymbol {
                                id: 896,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ),
                    },
                ],
                type_def: Variant(
                    TypeDefVariant {
                        variants: [
                            Variant {
                                name: "Ok",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 11,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: None,
                                        docs: [],
                                    },
                                ],
                                index: 0,
                                docs: [],
                            },
                            Variant {
                                name: "Err",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 896,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: None,
                                        docs: [],
                                    },
                                ],
                                index: 1,
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 898,
            ty: Type {
                path: Path {
                    segments: [
                        "Result",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "T",
                        ty: Some(
                            UntrackedSymbol {
                                id: 899,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ),
                    },
                    TypeParameter {
                        name: "E",
                        ty: Some(
                            UntrackedSymbol {
                                id: 896,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ),
                    },
                ],
                type_def: Variant(
                    TypeDefVariant {
                        variants: [
                            Variant {
                                name: "Ok",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 899,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: None,
                                        docs: [],
                                    },
                                ],
                                index: 0,
                                docs: [],
                            },
                            Variant {
                                name: "Err",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 896,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: None,
                                        docs: [],
                                    },
                                ],
                                index: 1,
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 899,
            ty: Type {
                path: Path {
                    segments: [],
                },
                type_params: [],
                type_def: Tuple(
                    TypeDefTuple {
                        fields: [
                            UntrackedSymbol {
                                id: 900,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                            UntrackedSymbol {
                                id: 902,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 900,
            ty: Type {
                path: Path {
                    segments: [],
                },
                type_params: [],
                type_def: Sequence(
                    TypeDefSequence {
                        type_param: UntrackedSymbol {
                            id: 901,
                            marker: PhantomData<fn() -> core::any::TypeId>,
                        },
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 901,
            ty: Type {
                path: Path {
                    segments: [
                        "sp_mmr_primitives",
                        "EncodableOpaqueLeaf",
                    ],
                },
                type_params: [],
                type_def: Composite(
                    TypeDefComposite {
                        fields: [
                            Field {
                                name: None,
                                ty: UntrackedSymbol {
                                    id: 13,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "Vec<u8>",
                                ),
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 902,
            ty: Type {
                path: Path {
                    segments: [
                        "sp_mmr_primitives",
                        "Proof",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "Hash",
                        ty: Some(
                            UntrackedSymbol {
                                id: 12,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ),
                    },
                ],
                type_def: Composite(
                    TypeDefComposite {
                        fields: [
                            Field {
                                name: Some(
                                    "leaf_indices",
                                ),
                                ty: UntrackedSymbol {
                                    id: 689,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "Vec<LeafIndex>",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "leaf_count",
                                ),
                                ty: UntrackedSymbol {
                                    id: 11,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "NodeIndex",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "items",
                                ),
                                ty: UntrackedSymbol {
                                    id: 476,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "Vec<Hash>",
                                ),
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 903,
            ty: Type {
                path: Path {
                    segments: [
                        "Result",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "T",
                        ty: Some(
                            UntrackedSymbol {
                                id: 34,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ),
                    },
                    TypeParameter {
                        name: "E",
                        ty: Some(
                            UntrackedSymbol {
                                id: 896,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ),
                    },
                ],
                type_def: Variant(
                    TypeDefVariant {
                        variants: [
                            Variant {
                                name: "Ok",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 34,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: None,
                                        docs: [],
                                    },
                                ],
                                index: 0,
                                docs: [],
                            },
                            Variant {
                                name: "Err",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 896,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: None,
                                        docs: [],
                                    },
                                ],
                                index: 1,
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 904,
            ty: Type {
                path: Path {
                    segments: [
                        "sp_consensus_grandpa",
                        "OpaqueKeyOwnershipProof",
                    ],
                },
                type_params: [],
                type_def: Composite(
                    TypeDefComposite {
                        fields: [
                            Field {
                                name: None,
                                ty: UntrackedSymbol {
                                    id: 13,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "Vec<u8>",
                                ),
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 905,
            ty: Type {
                path: Path {
                    segments: [
                        "Option",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "T",
                        ty: Some(
                            UntrackedSymbol {
                                id: 904,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ),
                    },
                ],
                type_def: Variant(
                    TypeDefVariant {
                        variants: [
                            Variant {
                                name: "None",
                                fields: [],
                                index: 0,
                                docs: [],
                            },
                            Variant {
                                name: "Some",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 904,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: None,
                                        docs: [],
                                    },
                                ],
                                index: 1,
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 906,
            ty: Type {
                path: Path {
                    segments: [
                        "sp_consensus_babe",
                        "BabeConfiguration",
                    ],
                },
                type_params: [],
                type_def: Composite(
                    TypeDefComposite {
                        fields: [
                            Field {
                                name: Some(
                                    "slot_duration",
                                ),
                                ty: UntrackedSymbol {
                                    id: 11,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "u64",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "epoch_length",
                                ),
                                ty: UntrackedSymbol {
                                    id: 11,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "u64",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "c",
                                ),
                                ty: UntrackedSymbol {
                                    id: 96,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "(u64, u64)",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "authorities",
                                ),
                                ty: UntrackedSymbol {
                                    id: 503,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "Vec<(AuthorityId, BabeAuthorityWeight)>",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "randomness",
                                ),
                                ty: UntrackedSymbol {
                                    id: 1,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "Randomness",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "allowed_slots",
                                ),
                                ty: UntrackedSymbol {
                                    id: 97,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "AllowedSlots",
                                ),
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 907,
            ty: Type {
                path: Path {
                    segments: [
                        "sp_consensus_babe",
                        "Epoch",
                    ],
                },
                type_params: [],
                type_def: Composite(
                    TypeDefComposite {
                        fields: [
                            Field {
                                name: Some(
                                    "epoch_index",
                                ),
                                ty: UntrackedSymbol {
                                    id: 11,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "u64",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "start_slot",
                                ),
                                ty: UntrackedSymbol {
                                    id: 93,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "Slot",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "duration",
                                ),
                                ty: UntrackedSymbol {
                                    id: 11,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "u64",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "authorities",
                                ),
                                ty: UntrackedSymbol {
                                    id: 503,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "Vec<(AuthorityId, BabeAuthorityWeight)>",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "randomness",
                                ),
                                ty: UntrackedSymbol {
                                    id: 1,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "Randomness",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "config",
                                ),
                                ty: UntrackedSymbol {
                                    id: 512,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "BabeEpochConfiguration",
                                ),
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 908,
            ty: Type {
                path: Path {
                    segments: [
                        "Option",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "T",
                        ty: Some(
                            UntrackedSymbol {
                                id: 909,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ),
                    },
                ],
                type_def: Variant(
                    TypeDefVariant {
                        variants: [
                            Variant {
                                name: "None",
                                fields: [],
                                index: 0,
                                docs: [],
                            },
                            Variant {
                                name: "Some",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 909,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: None,
                                        docs: [],
                                    },
                                ],
                                index: 1,
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 909,
            ty: Type {
                path: Path {
                    segments: [
                        "sp_consensus_babe",
                        "OpaqueKeyOwnershipProof",
                    ],
                },
                type_params: [],
                type_def: Composite(
                    TypeDefComposite {
                        fields: [
                            Field {
                                name: None,
                                ty: UntrackedSymbol {
                                    id: 13,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "Vec<u8>",
                                ),
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 910,
            ty: Type {
                path: Path {
                    segments: [
                        "Option",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "T",
                        ty: Some(
                            UntrackedSymbol {
                                id: 911,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ),
                    },
                ],
                type_def: Variant(
                    TypeDefVariant {
                        variants: [
                            Variant {
                                name: "None",
                                fields: [],
                                index: 0,
                                docs: [],
                            },
                            Variant {
                                name: "Some",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 911,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: None,
                                        docs: [],
                                    },
                                ],
                                index: 1,
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 911,
            ty: Type {
                path: Path {
                    segments: [],
                },
                type_params: [],
                type_def: Sequence(
                    TypeDefSequence {
                        type_param: UntrackedSymbol {
                            id: 912,
                            marker: PhantomData<fn() -> core::any::TypeId>,
                        },
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 912,
            ty: Type {
                path: Path {
                    segments: [],
                },
                type_params: [],
                type_def: Tuple(
                    TypeDefTuple {
                        fields: [
                            UntrackedSymbol {
                                id: 13,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                            UntrackedSymbol {
                                id: 563,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 913,
            ty: Type {
                path: Path {
                    segments: [
                        "pallet_transaction_payment",
                        "types",
                        "RuntimeDispatchInfo",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "Balance",
                        ty: Some(
                            UntrackedSymbol {
                                id: 6,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ),
                    },
                    TypeParameter {
                        name: "Weight",
                        ty: Some(
                            UntrackedSymbol {
                                id: 9,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ),
                    },
                ],
                type_def: Composite(
                    TypeDefComposite {
                        fields: [
                            Field {
                                name: Some(
                                    "weight",
                                ),
                                ty: UntrackedSymbol {
                                    id: 9,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "Weight",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "class",
                                ),
                                ty: UntrackedSymbol {
                                    id: 23,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "DispatchClass",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "partial_fee",
                                ),
                                ty: UntrackedSymbol {
                                    id: 6,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "Balance",
                                ),
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 914,
            ty: Type {
                path: Path {
                    segments: [
                        "pallet_transaction_payment",
                        "types",
                        "FeeDetails",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "Balance",
                        ty: Some(
                            UntrackedSymbol {
                                id: 6,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ),
                    },
                ],
                type_def: Composite(
                    TypeDefComposite {
                        fields: [
                            Field {
                                name: Some(
                                    "inclusion_fee",
                                ),
                                ty: UntrackedSymbol {
                                    id: 915,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "Option<InclusionFee<Balance>>",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "tip",
                                ),
                                ty: UntrackedSymbol {
                                    id: 6,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "Balance",
                                ),
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 915,
            ty: Type {
                path: Path {
                    segments: [
                        "Option",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "T",
                        ty: Some(
                            UntrackedSymbol {
                                id: 916,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ),
                    },
                ],
                type_def: Variant(
                    TypeDefVariant {
                        variants: [
                            Variant {
                                name: "None",
                                fields: [],
                                index: 0,
                                docs: [],
                            },
                            Variant {
                                name: "Some",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 916,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: None,
                                        docs: [],
                                    },
                                ],
                                index: 1,
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 916,
            ty: Type {
                path: Path {
                    segments: [
                        "pallet_transaction_payment",
                        "types",
                        "InclusionFee",
                    ],
                },
                type_params: [
                    TypeParameter {
                        name: "Balance",
                        ty: Some(
                            UntrackedSymbol {
                                id: 6,
                                marker: PhantomData<fn() -> core::any::TypeId>,
                            },
                        ),
                    },
                ],
                type_def: Composite(
                    TypeDefComposite {
                        fields: [
                            Field {
                                name: Some(
                                    "base_fee",
                                ),
                                ty: UntrackedSymbol {
                                    id: 6,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "Balance",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "len_fee",
                                ),
                                ty: UntrackedSymbol {
                                    id: 6,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "Balance",
                                ),
                                docs: [],
                            },
                            Field {
                                name: Some(
                                    "adjusted_weight_fee",
                                ),
                                ty: UntrackedSymbol {
                                    id: 6,
                                    marker: PhantomData<fn() -> core::any::TypeId>,
                                },
                                type_name: Some(
                                    "Balance",
                                ),
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
        PortableType {
            id: 917,
            ty: Type {
                path: Path {
                    segments: [
                        "polkadot_runtime",
                        "RuntimeError",
                    ],
                },
                type_params: [],
                type_def: Variant(
                    TypeDefVariant {
                        variants: [
                            Variant {
                                name: "System",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 490,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "frame_system::Error<Runtime>",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 0,
                                docs: [],
                            },
                            Variant {
                                name: "Scheduler",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 495,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "pallet_scheduler::Error<Runtime>",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 1,
                                docs: [],
                            },
                            Variant {
                                name: "Preimage",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 500,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "pallet_preimage::Error<Runtime>",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 10,
                                docs: [],
                            },
                            Variant {
                                name: "Babe",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 516,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "pallet_babe::Error<Runtime>",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 2,
                                docs: [],
                            },
                            Variant {
                                name: "Indices",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 518,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "pallet_indices::Error<Runtime>",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 4,
                                docs: [],
                            },
                            Variant {
                                name: "Balances",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 533,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "pallet_balances::Error<Runtime>",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 5,
                                docs: [],
                            },
                            Variant {
                                name: "Staking",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 557,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "pallet_staking::Error<Runtime>",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 7,
                                docs: [],
                            },
                            Variant {
                                name: "Session",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 564,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "pallet_session::Error<Runtime>",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 9,
                                docs: [],
                            },
                            Variant {
                                name: "Grandpa",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 568,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "pallet_grandpa::Error<Runtime>",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 11,
                                docs: [],
                            },
                            Variant {
                                name: "ImOnline",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 571,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "pallet_im_online::Error<Runtime>",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 12,
                                docs: [],
                            },
                            Variant {
                                name: "Democracy",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 588,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "pallet_democracy::Error<Runtime>",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 14,
                                docs: [],
                            },
                            Variant {
                                name: "Council",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 591,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "pallet_collective::Error<Runtime, pallet_collective::Instance1>",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 15,
                                docs: [],
                            },
                            Variant {
                                name: "TechnicalCommittee",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 593,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "pallet_collective::Error<Runtime, pallet_collective::Instance2>",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 16,
                                docs: [],
                            },
                            Variant {
                                name: "PhragmenElection",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 597,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "pallet_elections_phragmen::Error<Runtime>",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 17,
                                docs: [],
                            },
                            Variant {
                                name: "TechnicalMembership",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 599,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "pallet_membership::Error<Runtime, pallet_membership::Instance1>",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 18,
                                docs: [],
                            },
                            Variant {
                                name: "Treasury",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 605,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "pallet_treasury::Error<Runtime>",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 19,
                                docs: [],
                            },
                            Variant {
                                name: "ConvictionVoting",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 618,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "pallet_conviction_voting::Error<Runtime>",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 20,
                                docs: [],
                            },
                            Variant {
                                name: "Referenda",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 636,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "pallet_referenda::Error<Runtime>",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 21,
                                docs: [],
                            },
                            Variant {
                                name: "Whitelist",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 637,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "pallet_whitelist::Error<Runtime>",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 23,
                                docs: [],
                            },
                            Variant {
                                name: "Claims",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 638,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "claims::Error<Runtime>",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 24,
                                docs: [],
                            },
                            Variant {
                                name: "Vesting",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 642,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "pallet_vesting::Error<Runtime>",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 25,
                                docs: [],
                            },
                            Variant {
                                name: "Utility",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 643,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "pallet_utility::Error<Runtime>",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 26,
                                docs: [],
                            },
                            Variant {
                                name: "Identity",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 654,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "pallet_identity::Error<Runtime>",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 28,
                                docs: [],
                            },
                            Variant {
                                name: "Proxy",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 663,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "pallet_proxy::Error<Runtime>",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 29,
                                docs: [],
                            },
                            Variant {
                                name: "Multisig",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 667,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "pallet_multisig::Error<Runtime>",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 30,
                                docs: [],
                            },
                            Variant {
                                name: "Bounties",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 671,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "pallet_bounties::Error<Runtime>",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 34,
                                docs: [],
                            },
                            Variant {
                                name: "ChildBounties",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 674,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "pallet_child_bounties::Error<Runtime>",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 38,
                                docs: [],
                            },
                            Variant {
                                name: "Tips",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 676,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "pallet_tips::Error<Runtime>",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 35,
                                docs: [],
                            },
                            Variant {
                                name: "ElectionProviderMultiPhase",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 686,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "pallet_election_provider_multi_phase::Error<Runtime>",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 36,
                                docs: [],
                            },
                            Variant {
                                name: "VoterList",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 690,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "pallet_bags_list::Error<Runtime, pallet_bags_list::Instance1>",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 37,
                                docs: [],
                            },
                            Variant {
                                name: "NominationPools",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 708,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "pallet_nomination_pools::Error<Runtime>",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 39,
                                docs: [],
                            },
                            Variant {
                                name: "FastUnstake",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 713,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "pallet_fast_unstake::Error<Runtime>",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 40,
                                docs: [],
                            },
                            Variant {
                                name: "Configuration",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 717,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "parachains_configuration::Error<Runtime>",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 51,
                                docs: [],
                            },
                            Variant {
                                name: "ParaInclusion",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 722,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "parachains_inclusion::Error<Runtime>",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 53,
                                docs: [],
                            },
                            Variant {
                                name: "ParaInherent",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 728,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "parachains_paras_inherent::Error<Runtime>",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 54,
                                docs: [],
                            },
                            Variant {
                                name: "Paras",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 755,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "parachains_paras::Error<Runtime>",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 56,
                                docs: [],
                            },
                            Variant {
                                name: "Hrmp",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 767,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "parachains_hrmp::Error<Runtime>",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 60,
                                docs: [],
                            },
                            Variant {
                                name: "ParasDisputes",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 776,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "parachains_disputes::Error<Runtime>",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 62,
                                docs: [],
                            },
                            Variant {
                                name: "ParasSlashing",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 781,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "parachains_slashing::Error<Runtime>",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 63,
                                docs: [],
                            },
                            Variant {
                                name: "Registrar",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 783,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "paras_registrar::Error<Runtime>",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 70,
                                docs: [],
                            },
                            Variant {
                                name: "Slots",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 785,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "slots::Error<Runtime>",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 71,
                                docs: [],
                            },
                            Variant {
                                name: "Auctions",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 790,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "auctions::Error<Runtime>",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 72,
                                docs: [],
                            },
                            Variant {
                                name: "Crowdloan",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 793,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "crowdloan::Error<Runtime>",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 73,
                                docs: [],
                            },
                            Variant {
                                name: "XcmPallet",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 815,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "pallet_xcm::Error<Runtime>",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 99,
                                docs: [],
                            },
                            Variant {
                                name: "MessageQueue",
                                fields: [
                                    Field {
                                        name: None,
                                        ty: UntrackedSymbol {
                                            id: 822,
                                            marker: PhantomData<fn() -> core::any::TypeId>,
                                        },
                                        type_name: Some(
                                            "pallet_message_queue::Error<Runtime>",
                                        ),
                                        docs: [],
                                    },
                                ],
                                index: 100,
                                docs: [],
                            },
                        ],
                    },
                ),
                docs: [],
            },
        },
    ],
}